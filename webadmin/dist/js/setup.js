"use strict";var app=angular.module("Application",["ngRoute","ngAnimate","angular-md5"]);app.directive("ngEnter",function(){return function(t,e,n){e.bind("keydown keypress",function(e){13===e.which&&t.$apply(function(){t.$eval(n.ngEnter)})})}}),app.config(["$routeProvider",function(t){t.when("/",{redirectTo:"/step1"}).when("/step1",{controller:"StepController",templateUrl:"views/setup/step1.html"}).when("/step2",{controller:"StepController",templateUrl:"views/setup/step2.html"}).when("/step3",{controller:"StepController",templateUrl:"views/setup/step3.html"}).when("/step4",{controller:"StepController",templateUrl:"views/setup/step4.html"}).when("/step5",{controller:"FinishController",templateUrl:"views/setup/step5.html"}).otherwise({redirectTo:"/"})}]),app.service("Wizard",[function(){function t(){this.username="",this.email="",this.password=""}var e=null;return e=new t}]),app.controller("StepController",["$scope","$location","Wizard",function(t,e,n){t.wizard=n,t.ok=function(t,n){n||e.path(t)},t.$on("$viewContentLoaded",function(){$("input[autofocus]").focus()})}]),app.controller("FinishController",["$scope","$location","$timeout","Wizard","Client",function(t,e,n,o,r){function i(){r.createAdmin(t.wizard.username,t.wizard.password,t.wizard.email,t.setupToken,function(t){return t?(console.error("Internal error",t),void(window.location.href="/error.html")):void(window.location.href="/")})}t.wizard=o,n(i,1e3)}]),app.controller("SetupController",["$scope","$location","Client","Wizard",function(t,e,n,o){t.initialized=!1;var r=decodeURIComponent(window.location.search).slice(1).split("&").map(function(t){return t.split("=")}).reduce(function(t,e){return t[e[0]]=e[1],t},{});t.setupToken=r.setupToken,o.email=r.email,n.isServerFirstTime(function(n,r){return n?void(window.location.href="/error.html"):r?(o.username||e.path("/step1"),void(t.initialized=!0)):void(window.location.href="/")})}]),angular.module("Application").service("Client",["$http","md5",function(t,e){function n(t,e){Error.call(this),this.name=this.constructor.name,this.statusCode=t,this.message="string"==typeof e?e:JSON.stringify(e)}function o(t){return function(e,o){return 401===o?i.logout():void t(new n(o,e))}}function r(){this._ready=!1,this._configListener=[],this._readyListener=[],this._userInfo={username:null,email:null,admin:!1},this._token=null,this._clientId="cid-webadmin",this._clientSecret="unused",this._config={apiServerOrigin:null,webServerOrigin:null,fqdn:null,ip:null,revision:null,update:{box:null,apps:null},isDev:!1,progress:{},isCustomDomain:!1},this._installedApps=[],this.setToken(localStorage.token)}var i=null;return r.prototype.setReady=function(){this._ready||(this._ready=!0,this._readyListener.forEach(function(t){t()}))},r.prototype.onReady=function(t){this._ready&&t(),this._readyListener.push(t)},r.prototype.onConfig=function(t){this._configListener.push(t),t(this._config)},r.prototype.setUserInfo=function(t){this._userInfo.username=t.username,this._userInfo.email=t.email,this._userInfo.admin=!!t.admin,this._userInfo.gravatar="https://www.gravatar.com/avatar/"+e.createHash(t.email.toLowerCase())+".jpg?s=24&d=mm",this._userInfo.gravatarHuge="https://www.gravatar.com/avatar/"+e.createHash(t.email.toLowerCase())+".jpg?s=128&d=mm"},r.prototype.setConfig=function(t){this._config.apiServerOrigin=t.apiServerOrigin,this._config.webServerOrigin=t.webServerOrigin,this._config.version=t.version,this._config.fqdn=t.fqdn,this._config.ip=t.ip,this._config.revision=t.revision,this._config.update=t.update,this._config.isDev=t.isDev,this._config.progress=t.progress,this._config.isCustomDomain=t.isCustomDomain;var e=this;this._configListener.forEach(function(t){t(e._config)})},r.prototype.getInstalledApps=function(){return this._installedApps},r.prototype.getUserInfo=function(){return this._userInfo},r.prototype.getConfig=function(){return this._config},r.prototype.setToken=function(e){t.defaults.headers.common.Authorization="Bearer "+e,e?localStorage.token=e:localStorage.removeItem("token"),this._token=e},r.prototype.config=function(e){t.get("/api/v1/cloudron/config").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t)}).error(o(e))},r.prototype.userInfo=function(e){var r=this;t.get("/api/v1/profile").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):(r.setUserInfo(t),void e(null,t))}).error(o(e))},r.prototype.installApp=function(e,r,i,s,p,u){var a=this,c={appStoreId:e,manifest:r,password:i,location:p.location,portBindings:p.portBindings,accessRestriction:p.accessRestriction};t.post("/api/v1/apps/install",c).success(function(t,e){return 202!==e||"object"!=typeof t?u(new n(e,t)):(t.manifest={title:s},a._installedApps.push(t),void u(null,t.id))}).error(o(u))},r.prototype.uninstallApp=function(e,r,i){var s={password:r};t.post("/api/v1/apps/"+e+"/uninstall",s).success(function(t,e){return 202!==e?i(new n(e,t)):void i(null)}).error(o(i))},r.prototype.configureApp=function(e,r,i,s){var p={appId:e,password:r,location:i.location,portBindings:i.portBindings,accessRestriction:i.accessRestriction};t.post("/api/v1/apps/"+e+"/configure",p).success(function(t,e){return 202!==e?s(new n(e,t)):void s(null)}).error(o(s))},r.prototype.updateApp=function(e,r,i,s,p){t.post("/api/v1/apps/"+e+"/update",{manifest:r,password:s,portBindings:i}).success(function(t,e){return 202!==e?p(new n(e,t)):void p(null)}).error(o(p))},r.prototype.startApp=function(e,r){var i={};t.post("/api/v1/apps/"+e+"/start",i).success(function(t,e){return 202!==e?r(new n(e,t)):void r(null)}).error(o(r))},r.prototype.stopApp=function(e,r){var i={};t.post("/api/v1/apps/"+e+"/stop",i).success(function(t,e){return 202!==e?r(new n(e,t)):void r(null)}).error(o(r))},r.prototype.version=function(e){t.get("/api/v1/cloudron/status").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t)}).error(o(e))},r.prototype.isServerFirstTime=function(e){t.get("/api/v1/cloudron/status").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,!t.activated)}).error(o(e))},r.prototype.getNakedDomain=function(e){t.get("/api/v1/settings/naked_domain").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t.appid)}).error(o(e))},r.prototype.setNakedDomain=function(e,r){t.post("/api/v1/settings/naked_domain",{appid:e}).success(function(t,e){return 204!==e?r(new n(e)):void r(null)}).error(o(r))},r.prototype.getApps=function(e){t.get("/api/v1/apps").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t.apps)}).error(o(e))},r.prototype.getApp=function(t,e){var n=null;return this._installedApps.some(function(e){return e.id===t?(n=e,!0):!1}),n?e(null,n):e(new Error("App not found"))},r.prototype.getAppLogStream=function(t){var e=new EventSource("/api/v1/apps/"+t+"/logstream");return e},r.prototype.getAppLogUrl=function(t){return"/api/v1/apps/"+t+"/logs?access_token="+this._token},r.prototype.setAdmin=function(e,r,i){var s={username:e,admin:r};t.post("/api/v1/users/"+e+"/admin",s).success(function(t,e){return 204!==e?i(new n(e,t)):void i(null)}).error(o(i))},r.prototype.createAdmin=function(e,r,i,s,p){var u={username:e,password:r,email:i},a=this;t.post("/api/v1/cloudron/activate?setupToken="+s,u).success(function(t,o){return 201!==o||"object"!=typeof t?p(new n(o,t)):(a.setToken(t.token),a.setUserInfo({username:e,email:i,admin:!0}),void p(null,t.activated))}).error(o(p))},r.prototype.listUsers=function(e){t.get("/api/v1/users").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t)}).error(o(e))},r.prototype.getOAuthClients=function(e){t.get("/api/v1/oauth/clients").success(function(t,o){return 200!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t.clients)}).error(o(e))},r.prototype.delTokensByClientId=function(e,r){t["delete"]("/api/v1/oauth/clients/"+e+"/tokens").success(function(t,e){return 204!==e?r(new n(e,t)):void r(null)}).error(o(r))},r.prototype.update=function(e,r){t.post("/api/v1/cloudron/update",{password:e}).success(function(t,e){return 202!==e||"object"!=typeof t?r(new n(e,t)):void r(null,t)}).error(o(r))},r.prototype.reboot=function(e){t.get("/api/v1/cloudron/reboot").success(function(t,o){return 202!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t)}).error(o(e))},r.prototype.backup=function(e){t.post("/api/v1/cloudron/backups").success(function(t,o){return 202!==o||"object"!=typeof t?e(new n(o,t)):void e(null,t)}).error(o(e))},r.prototype.setCertificate=function(e,r,i){console.log("will set certificate");var s=new FormData;s.append("certificate",e),s.append("key",r),t.post("/api/v1/cloudron/certificate",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(t,e){return 202!==e?i(new n(e,t)):void i(null)}).error(o(i))},r.prototype.graphs=function(e,r,i){var s={params:{target:e,format:"json",from:r}};t.get("/api/v1/cloudron/graphs",s).success(function(t,e){return 200!==e||"object"!=typeof t?i(new n(e,t)):void i(null,t)}).error(o(i))},r.prototype.createUser=function(e,r,i){var s={username:e,email:r};t.post("/api/v1/users",s).success(function(t,e){return 201!==e||"object"!=typeof t?i(new n(e,t)):void i(null,t)}).error(o(i))},r.prototype.removeUser=function(e,r,i){var s={password:r};t({method:"DELETE",url:"/api/v1/users/"+e,data:s,headers:{"Content-Type":"application/json"}}).success(function(t,e){return 204!==e?i(new n(e,t)):void i(null)}).error(o(i))},r.prototype.changePassword=function(e,r,i){var s={password:e,newPassword:r};t.post("/api/v1/users/"+this._userInfo.username+"/password",s).success(function(t,e){return 204!==e?i(new n(e,t)):void i(null,t)}).error(o(i))},r.prototype.changeEmail=function(e,r,i){var s={password:r,email:e};t.put("/api/v1/users/"+this._userInfo.username,s).success(function(t,e){return 204!==e?i(new n(e,t)):void i(null,t)}).error(o(i))},r.prototype.refreshConfig=function(t){var e=this;t="function"==typeof t?t:function(){},this.config(function(n,o){return n?t(n):(e.setConfig(o),void t(null))})},r.prototype.refreshInstalledApps=function(t){var e=this;t="function"==typeof t?t:function(){},this.getApps(function(n,o){if(n)return t(n);o.forEach(function(t){for(var n=!1,o=0;o<e._installedApps.length;++o)if(e._installedApps[o].id===t.id){n=o;break}n!==!1?angular.copy(t,e._installedApps[n]):e._installedApps.push(t)});for(var r=e._installedApps.length-1;r>=0;--r)o.some(function(t){return t.id===e._installedApps[r].id})||e._installedApps.splice(r,1);t(null)})},r.prototype.logout=function(){this.setToken(null),this._userInfo={},window.location.href="/api/v1/session/logout"},r.prototype.exchangeCodeForToken=function(e,r){var i={grant_type:"authorization_code",code:e,redirect_uri:window.location.origin,client_id:this._clientId,client_secret:this._clientSecret};t.post("/api/v1/oauth/token?response_type=token&client_id="+this._clientId,i).success(function(t,e){return 200!==e||"object"!=typeof t?r(new n(e,t)):void r(null,t.access_token)}).error(o(r))},i=new r}]);
//# sourceMappingURL=data:application/json;base64,