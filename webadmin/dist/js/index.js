"use strict";var app=angular.module("Application",["ngRoute","ngAnimate","angular-md5"]);app.config(["$routeProvider",function(e){e.when("/",{redirectTo:"/apps"}).when("/users",{controller:"UsersController",templateUrl:"views/users.html"}).when("/appstore",{controller:"AppStoreController",templateUrl:"views/appstore.html"}).when("/apps",{controller:"AppsController",templateUrl:"views/apps.html"}).when("/dns",{controller:"DnsController",templateUrl:"views/dns.html"}).when("/account",{controller:"AccountController",templateUrl:"views/account.html"}).when("/graphs",{controller:"GraphsController",templateUrl:"views/graphs.html"}).when("/security",{controller:"SecurityController",templateUrl:"views/security.html"}).otherwise({redirectTo:"/"})}]),app.filter("installationActive",function(){return function(e){return"error"===e?!1:"installed"===e?!1:!0}}),app.filter("installationStateLabel",function(){return function(e){return"error"===e?"Error":"subdomain_error"===e?"Error":"installed"===e?"Installed":"downloading_image"===e?"Downloading":"pending_install"===e?"Installing":"pending_uninstall"===e?"Uninstalling":"creating_container"===e?"Container":"downloading_manifest"===e?"Manifest":"creating_volume"===e?"Volume":"registering_subdomain"===e?"Subdomain":"allocated_oauth_credentials"===e?"OAuth":e}}),app.filter("accessRestrictionLabel",function(){return function(e){return""===e?"public":"roleUser"===e?"private":"roleAdmin"===e?"private (Admins only)":e}}),app.directive("laterName",function(){return{restrict:"A",require:["?ngModel","^?form"],link:function(e,n,o,r){o.$set("name",o.laterName);var t=r[0],i=r[1];t&&i&&(t.$name=o.name,i.$addControl(t),e.$on("$destroy",function(){i.$removeControl(t)}))}}}),angular.module("Application").service("Client",["$http","md5",function(e,n){function o(e,n){Error.call(this),this.name=this.constructor.name,this.statusCode=e,this.message="string"==typeof n?n:JSON.stringify(n)}function r(e){return function(n,r){return 401===r?i.logout():void e(new o(r,n))}}function t(){this._ready=!1,this._configListener=[],this._readyListener=[],this._userInfo={username:null,email:null,admin:!1},this._token=null,this._clientId="cid-webadmin",this._clientSecret="unused",this._config={apiServerOrigin:null,webServerOrigin:null,fqdn:null,ip:null,revision:null,update:null,isDev:!1,progress:{}},this._installedApps=[],this.setToken(localStorage.token)}var i=null;return t.prototype.setReady=function(){this._ready||(this._ready=!0,this._readyListener.forEach(function(e){e()}))},t.prototype.onReady=function(e){this._ready&&e(),this._readyListener.push(e)},t.prototype.onConfig=function(e){this._configListener.push(e),e(this._config)},t.prototype.setUserInfo=function(e){this._userInfo.username=e.username,this._userInfo.email=e.email,this._userInfo.admin=!!e.admin,this._userInfo.gravatar="https://www.gravatar.com/avatar/"+n.createHash(e.email.toLowerCase())+".jpg?s=24&d=mm",this._userInfo.gravatarHuge="https://www.gravatar.com/avatar/"+n.createHash(e.email.toLowerCase())+".jpg?s=128&d=mm"},t.prototype.setConfig=function(e){this._config.apiServerOrigin=e.apiServerOrigin,this._config.webServerOrigin=e.webServerOrigin,this._config.version=e.version,this._config.fqdn=e.fqdn,this._config.ip=e.ip,this._config.revision=e.revision,this._config.update=e.update,this._config.isDev=e.isDev,this._config.progress=e.progress;var n=this;this._configListener.forEach(function(e){e(n._config)})},t.prototype.getInstalledApps=function(){return this._installedApps},t.prototype.getUserInfo=function(){return this._userInfo},t.prototype.getConfig=function(){return this._config},t.prototype.setToken=function(n){e.defaults.headers.common.Authorization="Bearer "+n,n?localStorage.token=n:localStorage.removeItem("token"),this._token=n},t.prototype.config=function(n){e.get("/api/v1/cloudron/config").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.userInfo=function(n){e.get("/api/v1/profile").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.installApp=function(n,t,i,a,s,p){var l=this,c={appStoreId:n,version:t,password:i,location:s.location,portBindings:s.portBindings,accessRestriction:s.accessRestriction};e.post("/api/v1/apps/install",c).success(function(e,n){return 202!==n||"object"!=typeof e?p(new o(n,e)):(e.manifest={title:a},l._installedApps.push(e),void p(null,e.id))}).error(r(p))},t.prototype.uninstallApp=function(n,t,i){var a={password:t};e.post("/api/v1/apps/"+n+"/uninstall",a).success(function(e,n){return 202!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.configureApp=function(n,t,i,a){var s={appId:n,password:t,location:i.location,portBindings:i.portBindings,accessRestriction:i.accessRestriction};e.post("/api/v1/apps/"+n+"/configure",s).success(function(e,n){return 202!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.updateApp=function(n,t,i,a){e.post("/api/v1/apps/"+n+"/update",{version:t,password:i}).success(function(e,n){return 202!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.startApp=function(n,t){var i={};e.post("/api/v1/apps/"+n+"/start",i).success(function(e,n){return 202!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.stopApp=function(n,t){var i={};e.post("/api/v1/apps/"+n+"/stop",i).success(function(e,n){return 202!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.version=function(n){e.get("/api/v1/cloudron/status").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.isServerFirstTime=function(n){e.get("/api/v1/cloudron/status").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,!e.activated)}).error(r(n))},t.prototype.getNakedDomain=function(n){e.get("/api/v1/settings/naked_domain").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.appid)}).error(r(n))},t.prototype.setNakedDomain=function(n,t){e.post("/api/v1/settings/naked_domain",{appid:n}).success(function(e,n){return 204!==n?t(new o(n)):void t(null)}).error(r(t))},t.prototype.getApps=function(n){e.get("/api/v1/apps").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.apps)}).error(r(n))},t.prototype.getApp=function(e,n){var o=null;return this._installedApps.some(function(n){return n.id===e?(o=n,!0):!1}),o?n(null,o):n(new Error("App not found"))},t.prototype.getAppLogStream=function(e){var n=new EventSource("/api/v1/apps/"+e+"/logstream");return n},t.prototype.getAppLogUrl=function(e){return"/api/v1/apps/"+e+"/logs?access_token="+this._token},t.prototype.setAdmin=function(n,t,i){var a={username:n,admin:t};e.post("/api/v1/users/"+n+"/admin",a).success(function(e,n){return 204!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.createAdmin=function(n,t,i,a,s){var p={username:n,password:t,email:i},l=this;e.post("/api/v1/cloudron/activate?setupToken="+a,p).success(function(e,r){return 201!==r||"object"!=typeof e?s(new o(r,e)):(l.setToken(e.token),l.setUserInfo({username:n,email:i,admin:!0}),void s(null,e.activated))}).error(r(s))},t.prototype.listUsers=function(n){e.get("/api/v1/users").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.getOAuthClients=function(n){e.get("/api/v1/oauth/clients").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.clients)}).error(r(n))},t.prototype.delTokensByClientId=function(n,t){e["delete"]("/api/v1/oauth/clients/"+n+"/tokens").success(function(e,n){return 204!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.update=function(n){e.get("/api/v1/cloudron/update").success(function(e,r){return 202!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.reboot=function(n){e.get("/api/v1/cloudron/reboot").success(function(e,r){return 202!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.backup=function(n){e.post("/api/v1/cloudron/backups").success(function(e,r){return 202!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.setCertificate=function(n,t,i){console.log("will set certificate");var a=new FormData;a.append("certificate",n),a.append("key",t),e.post("/api/v1/cloudron/certificate",a,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(e,n){return 202!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.graphs=function(n,t,i){var a={params:{target:n,format:"json",from:t}};e.get("/api/v1/cloudron/graphs",a).success(function(e,n){return 200!==n||"object"!=typeof e?i(new o(n,e)):void i(null,e)}).error(r(i))},t.prototype.createUser=function(n,t,i){var a={username:n,email:t};e.post("/api/v1/users",a).success(function(e,n){return 201!==n||"object"!=typeof e?i(new o(n,e)):void i(null,e)}).error(r(i))},t.prototype.removeUser=function(n,t,i){var a={username:n,password:t};e({method:"DELETE",url:"/api/v1/users/"+n,data:a,headers:{"Content-Type":"application/json"}}).success(function(e,n){return 204!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.changePassword=function(n,t,i){var a={password:n,newPassword:t};e.post("/api/v1/users/"+this._userInfo.username+"/password",a).success(function(e,n){return 204!==n?i(new o(n,e)):void i(null,e)}).error(r(i))},t.prototype.refreshConfig=function(e){var n=this;e="function"==typeof e?e:function(){},this.config(function(o,r){return o?e(o):(n.setConfig(r),void e(null))})},t.prototype.refreshInstalledApps=function(e){var n=this;e="function"==typeof e?e:function(){},this.getApps(function(o,r){if(o)return e(o);r.forEach(function(e){for(var o=!1,r=0;r<n._installedApps.length;++r)if(n._installedApps[r].id===e.id){o=r;break}o!==!1?angular.copy(e,n._installedApps[o]):n._installedApps.push(e)});for(var t=n._installedApps.length-1;t>=0;--t)r.some(function(e){return e.id===n._installedApps[t].id})||n._installedApps.splice(t,1);e(null)})},t.prototype.logout=function(){this.setToken(null),this._userInfo={},window.location.href="/api/v1/session/logout"},t.prototype.exchangeCodeForToken=function(n,t){var i={grant_type:"authorization_code",code:n,redirect_uri:window.location.origin,client_id:this._clientId,client_secret:this._clientSecret};e.post("/api/v1/oauth/token?response_type=token&client_id="+this._clientId,i).success(function(e,n){return 200!==n||"object"!=typeof e?t(new o(n,e)):void t(null,e.access_token)}).error(r(t))},i=new t}]),angular.module("Application").service("AppStore",["$http","Client",function(e,n){function o(e,n){Error.call(this),this.name=this.constructor.name,this.statusCode=e,this.message="string"==typeof n?n:JSON.stringify(n)}function r(){this._appsCache={}}return r.prototype.getApps=function(r){if(null===n.getConfig().apiServerOrigin)return r(new o(420,"Enhance Your Calm"));var t=this;e.get(n.getConfig().apiServerOrigin+"/api/v1/appstore/apps",{params:{boxVersion:n.getConfig().version}}).success(function(e,n){return 200!==n?r(new o(n,e)):(e.apps.forEach(function(e){t._appsCache[e.id]||(t._appsCache[e.id]=e)}),r(null,t._appsCache))}).error(function(e,n){return r(new o(n,e))})},r.prototype.getAppById=function(e,n){if(e in this._appsCache)return n(null,this._appsCache[e]);var r=this;this.getApps(function(t){return t?n(t):e in r._appsCache?n(null,r._appsCache[e]):void n(new o(404,"Not found"))})},r.prototype.getManifest=function(r,t){if(null===n.getConfig().apiServerOrigin)return t(new o(420,"Enhance Your Calm"));var i=n.getConfig().apiServerOrigin+"/api/v1/appstore/apps/"+r+"/manifest";console.log("Getting the manifest of ",r,i),e.get(i).success(function(e,n){return 200!==n?t(new o(n,e)):t(null,e)}).error(function(e,n){return t(new o(n,e))})},new r}]),angular.module("Application").controller("MainController",["$scope","$route","$interval","Client",function(e,n,o,r){e.initialized=!1,e.userInfo=r.getUserInfo(),e.config={},e.isActive=function(e){return n.current?0===n.current.$$route.originalPath.indexOf(e):!1},e.logout=function(n){n.stopPropagation(),e.initialized=!1,r.logout()},e.login=function(){var e=window.location.origin+"/login_callback.html",n="root,profile,apps,roleAdmin";window.location.href="/api/v1/oauth/dialog/authorize?response_type=code&client_id="+r._clientId+"&redirect_uri="+e+"&scope="+n},e.setup=function(){window.location.href="/error.html?errorCode=1"},e.error=function(e){console.error(e),window.location.href="/error.html"},e.update=function(){$("#updateModal").modal("hide"),e.initialized=!1,r.update(function(e){e&&console.error(e),window.location.href="/update.html"})},e.backup=function(){$("#backupProgressModal").modal("show"),e.initialized=!1,r.backup(function(n){function o(){r.version(function(n){return n?window.setTimeout(o,1e3):($("#backupProgressModal").modal("hide"),void(e.initialized=!0))})}n&&console.error(n),window.setTimeout(o,5e3)})},r.isServerFirstTime(function(n,t){return n?e.error(n):t?e.setup():void(localStorage.token?r.refreshConfig(function(n){return n&&401===n.statusCode?e.login():n?e.error(n):(r.getConfig().progress.update&&(window.location.href="/update.html"),void r.userInfo(function(n,t){return n?e.error(n):(r.setUserInfo(t),void r.refreshInstalledApps(function(n){if(n)return e.error(n);var t=o(r.refreshInstalledApps.bind(r),2e3),i=o(r.refreshConfig.bind(r),5e3);e.$on("$destroy",function(){o.cancel(t),o.cancel(i)}),r.setReady(),e.config=r.getConfig(),e.initialized=!0}))}))}):e.login())}),r.onConfig(function(e){e.progress.update&&(window.location.href="/update.html")})}]),angular.module("Application").controller("AccountController",["$scope","$location","Client",function(e,n,o){function r(n){e.passwordchange.error.password=null,e.passwordchange.error.newPassword=null,e.passwordchange.error.newPasswordRepeat=null,e.passwordchange.password="",e.passwordchange.newPassword="",e.passwordchange.newPasswordRepeat="",n&&(n.$setPristine(),n.$setUntouched())}e.user=o.getUserInfo(),e.config=o.getConfig(),e.passwordchange={busy:!1,error:{},password:"",newPassword:"",newPasswordRepeat:""},e.doChangePassword=function(n){e.passwordchange.error.password=null,e.passwordchange.error.newPassword=null,e.passwordchange.error.newPasswordRepeat=null,e.passwordchange.busy=!0,o.changePassword(e.passwordchange.password,e.passwordchange.newPassword,function(o){return o?void(403===o.statusCode?(e.passwordchange.error.password=!0,e.passwordchange.password=""):console.error("Unable to change password.",o)):(e.passwordchange.busy=!1,r(n),void $("#passwordChangeModal").modal("hide"))})},e.showChangePassword=function(e){r(e),$("#passwordChangeModal").modal("show")}}]),angular.module("Application").controller("AppsController",["$scope","$location","Client",function(e,n,o){e.installedApps=o.getInstalledApps(),e.config=o.getConfig(),e.appconfigure={busy:!1,error:{},app:{},location:"",password:"",portBindings:{},accessRestriction:""},e.appuninstall={error:{},app:{},password:""},e.showConfigure=function(n){e.appconfigure.app=n,e.appconfigure.location=n.location,e.appconfigure.portBindings=n.manifest.tcpPorts,e.appconfigure.accessRestriction=n.accessRestriction;for(var o in e.appconfigure.portBindings)e.appconfigure.portBindings[o].hostPort=n.portBindings[o];$("#appConfigureModal").modal("show")},e.doConfigure=function(n){e.appconfigure.busy=!0,e.appconfigure.error.name=null,e.appconfigure.error.password=null;var r={};for(var t in e.appconfigure.portBindings)r[t]=e.appconfigure.portBindings[t].hostPort;o.configureApp(e.appconfigure.app.id,e.appconfigure.password,{location:e.appconfigure.location,portBindings:r,accessRestriction:e.appconfigure.accessRestriction},function(o){return o?(403===o.statusCode?(e.appconfigure.error.password="Wrong password provided.",e.appconfigure.password=""):e.appconfigure.error.name="App with the name "+e.appconfigure.app.name+" cannot be configured.",void(e.appconfigure.busy=!1)):(e.appconfigure.busy=!1,e.appconfigure.error={},e.appconfigure.app={},e.appconfigure.location="",e.appconfigure.password="",e.appconfigure.portBindings={},e.appconfigure.accessRestriction="",n.$setPristine(),n.$setUntouched(),void $("#appConfigureModal").modal("hide"))})},e.showUninstall=function(n){e.appuninstall.app=n,e.appuninstall.error.password=null,$("#appUninstallModal").modal("show")},e.doUninstall=function(n){e.appuninstall.error.password=null,o.uninstallApp(e.appuninstall.app.id,e.appuninstall.password,function(o){return o?void(403===o.statusCode?(e.appuninstall.password="",e.appuninstall.error.password=!0):console.error(o)):(e.appuninstall.app={},e.appuninstall.password="",n.$setPristine(),n.$setUntouched(),void $("#appUninstallModal").modal("hide"))})},e.cancel=function(){window.history.back()}}]),angular.module("Application").controller("AppStoreController",["$scope","$location","$timeout","Client","AppStore",function(e,n,o,r,t){function i(){e.ready=!1,t.getApps(function(n,r){return n?(console.error(n),o(i,1e3)):(e.apps=r,void(e.ready=!0))})}r.onReady(function(){r.getUserInfo().admin||n.path("/")}),e.ready=!1,e.apps=[],e.config=r.getConfig(),e.appinstall={busy:!1,error:{},app:{},location:"",password:"",portBindings:{},accessRestriction:""},e.showInstall=function(n){t.getManifest(n.id,function(o,r){if(o)return console.error(o);n.manifest=r,e.appinstall.app=n,e.appinstall.location=n.location,e.appinstall.portBindings=r.tcpPorts,e.appinstall.accessRestriction=n.accessRestriction||"";for(var t in e.appinstall.portBindings)e.appinstall.portBindings[t].hostPort=parseInt(t);$("#appInstallModal").modal("show")})},e.doInstall=function(o){e.appinstall.busy=!0,e.appinstall.error.name=null,e.appinstall.error.password=null;var t={};for(var i in e.appinstall.portBindings)t[i]=e.appinstall.portBindings[i].hostPort;r.installApp(e.appinstall.app.id,e.appinstall.app.manifest.version,e.appinstall.password,e.appinstall.app.title,{location:e.appinstall.location,portBindings:t,accessRestriction:e.appinstall.accessRestriction},function(r){return r?(409===r.statusCode?e.appinstall.error.name="Application already exists.":403===r.statusCode?(e.appinstall.error.password="Wrong password provided.",e.appinstall.password=""):e.appinstall.error.name="App with the name "+e.appinstall.app.name+" cannot be installed.",void(e.appinstall.busy=!1)):(e.appinstall.busy=!1,e.appinstall.error={},e.appinstall.app={},e.appinstall.location="",e.appinstall.password="",e.appinstall.portBindings={},e.appinstall.accessRestriction="",o.$setPristine(),o.$setUntouched(),$("#appInstallModal").modal("hide"),void n.path("/apps"))})},i()}]),angular.module("Application").controller("DnsController",["$scope","$location","Client",function(e,n,o){o.onReady(function(){o.getUserInfo().admin||n.path("/")}),e.ready=!1,e.user=o.getUserInfo(),e.config=o.getConfig(),e.nakedDomainApp=null,e.certificateFile=null,e.certificateFileName="",e.keyFile=null,e.keyFileName="",e.setNakedDomain=function(){var n=e.nakedDomainApp?e.nakedDomainApp.id:"admin";o.setNakedDomain(n,function(e){return e?console.error("Error setting naked domain",e):void 0})},e.backup=function(){$("#backupProgressModal").modal("show"),e.$parent.initialized=!1,o.backup(function(n){function r(){o.version(function(n){return n?window.setTimeout(r,1e3):($("#backupProgressModal").modal("hide"),void(e.$parent.initialized=!0))})}n&&console.error(n),window.setTimeout(r,5e3)})},e.update=function(){$("#updateModal").modal("hide"),e.$parent.initialized=!1,o.update(function(e){e&&console.error(e),window.location.href="/update.html"})},document.getElementById("idCertificate").onchange=function(n){e.$apply(function(){e.certificateFile=n.target.files[0],e.certificateFileName=n.target.files[0].name})},document.getElementById("idKey").onchange=function(n){e.$apply(function(){e.keyFile=n.target.files[0],e.keyFileName=n.target.files[0].name})},e.setCertificate=function(){return console.log("Will set the certificate"),e.certificateFile?e.keyFile?void o.setCertificate(e.certificateFile,e.keyFile,function(e){return e?console.log(e):void window.setTimeout(window.location.reload.bind(window.location,!0),3e3)}):console.log("Key not set"):console.log("Certificate not set")},o.onConfig(function(){e.tokenInUse=o._token,o.getApps(function(n,r){n&&console.error("Error loading app list"),e.apps=r,o.getNakedDomain(function(n,o){if(n)return console.error(n);e.nakedDomainApp=null;for(var r=0;r<e.apps.length;r++)if(e.apps[r].id===o){e.nakedDomainApp=e.apps[r];break}e.ready=!0})})})}]),angular.module("Application").controller("GraphsController",["$scope","$location","Client",function(e,n,o){function r(e,n){var o=[];n&&n.datapoints&&(o=n.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var r=new Rickshaw.Graph({element:document.querySelector("#"+e+"CpuChart"),renderer:"area",width:580,height:250,min:0,max:100,series:[{color:"steelblue",data:o,name:"cpu"}]});new Rickshaw.Graph.Axis.Time({graph:r}),new Rickshaw.Graph.Axis.Y({graph:r,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"CpuYAxis")}),new Rickshaw.Graph.HoverDetail({graph:r,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o).toFixed(2)+"%<br>";return t}})}r.render()}function t(e,n,o){var r=[],t=[];n&&n.datapoints&&(r=n.datapoints.map(function(e){return{y:e[0],x:e[1]}})),o&&o.datapoints&&(t=o.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var i=new Rickshaw.Graph({element:document.querySelector("#"+e+"NetworkChart"),renderer:"area",width:580,height:250,series:[{color:"steelblue",data:r,name:"tx"},{color:"green",data:t,name:"rx"}]});new Rickshaw.Graph.Axis.Time({graph:i}),new Rickshaw.Graph.Axis.Y({graph:i,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"NetworkYAxis")}),new Rickshaw.Graph.HoverDetail({graph:i,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o/1024).toFixed(2)+"KB<br>";return t}})}i.render()}function i(e,n,o){var r=[],t=[];n&&n.datapoints&&(r=n.datapoints.map(function(e){return{y:e[0],x:e[1]}})),o&&o.datapoints&&(t=o.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var i=new Rickshaw.Graph({element:document.querySelector("#"+e+"DiskChart"),renderer:"area",width:580,height:250,min:0,max:32212254720,series:[{color:"steelblue",data:r,name:"apps"},{color:"green",data:t,name:"data"}]});new Rickshaw.Graph.Axis.Time({graph:i}),new Rickshaw.Graph.Axis.Y({graph:i,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"DiskYAxis")}),new Rickshaw.Graph.HoverDetail({graph:i,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o/1073741824).toFixed(2)+"GB<br>";return t}}),new Rickshaw.Graph.Legend({graph:i,element:document.getElementById(e+"DiskLegend")})}i.render()}o.getUserInfo().admin||n.path("/"),e.activeTab="day";var a="transformNull(scale(divideSeries(sumSeries(collectd.localhost.cpu-0.cpu-system,collectd.localhost.cpu-0.cpu-nice,collectd.localhost.cpu-0.cpu-user),sumSeries(collectd.localhost.cpu-0.cpu-idle,collectd.localhost.cpu-0.cpu-system,collectd.localhost.cpu-0.cpu-nice,collectd.localhost.cpu-0.cpu-user,collectd.localhost.cpu-0.cpu-wait)), 100), 0)",s="transformNull(collectd.localhost.interface-eth0.if_octets.tx, 0)",p="transformNull(collectd.localhost.interface-eth0.if_octets.rx, 0)",l="transformNull(collectd.localhost.df-loop0.df_complex-used, 0)",c="transformNull(collectd.localhost.df-loop1.df_complex-used, 0)";e.updateGraphs=function(){var n=e.activeTab,u="-24hours";switch(n){case"day":u="-24hours";break;case"month":u="-1month";break;case"year":u="-1year";break;default:console.log("internal errror")}o.graphs([a,s,p,l,c],u,function(e,o){return e?console.log(e):(r(n,o[0]),t(n,o[1],o[2]),void i(n,o[3],o[4]))})},o.onReady(e.updateGraphs)}]),angular.module("Application").controller("SecurityController",["$scope","Client",function(e,n){e.activeClients=[],e.tokenInUse=null,e.ready=!1,e.removeAccessTokens=function(e,o){e._busy=!0,n.delTokensByClientId(e.id,function(n){return n?console.error(n):($(o.target).addClass("disabled"),void(e._busy=!1))})},n.onReady(function(){e.tokenInUse=n._token,n.getOAuthClients(function(n,o){return n?console.error(n):(e.activeClients=o,void(e.ready=!0))})})}]),angular.module("Application").controller("UsersController",["$scope","$location","Client",function(e,n,o){function r(){o.listUsers(function(n,o){return n?console.error("Unable to get user listing.",n):(e.users=o.users,void(e.ready=!0))})}o.onReady(function(){o.getUserInfo().admin||n.path("/")}),e.ready=!1,e.users=[],e.userInfo=o.getUserInfo(),e.userremove={busy:!1,error:{},userInfo:{},username:"",password:""},e.useradd={busy:!1,alreadyTaken:!1,error:{},username:"",email:""},e.isMe=function(e){return e.username===o.getUserInfo().username},e.isAdmin=function(e){return!!e.admin},e.toggleAdmin=function(e){o.setAdmin(e.username,!e.admin,function(n){return n?console.error(n):void(e.admin=!e.admin)})},e.doAdd=function(){e.useradd.alreadyTaken="",e.useradd.error.username=null,e.useradd.error.email=null,o.createUser(e.useradd.username,e.useradd.email,function(n){if(n&&409===n.statusCode)return e.useradd.alreadyTaken=e.username,console.error("Username already taken");if(n&&400===n.statusCode){if(-1!==n.message.indexOf("email"))return e.useradd.error.email="Invalid Email",void(e.useradd.email="");if(-1!==n.message.indexOf("username"))return e.useradd.error.username="Invalid Username",void(e.useradd.username="")}else n&&console.error("Unable to create user.",n),r(),$("#userAddModal").modal("hide")})},e.showUserRemove=function(n){e.userremove.error.username=null,e.userremove.error.password=null,e.userremove.userInfo=n,$("#userRemoveModal").modal("show")},e.doUserRemove=function(n){return e.userremove.error.username=null,e.userremove.error.password=null,e.userremove.username!==e.userremove.userInfo.username?(e.userremove.error.username="Username does not match",void(e.userremove.username="")):void o.removeUser(e.userremove.username,e.userremove.password,function(o){return o&&403===o.statusCode?(e.userremove.error.password="Incorrect password",void(e.userremove.password="")):o?console.error("Unable to delete user.",o):(e.userremove.userInfo={},e.userremove.username="",e.userremove.password="",n.$setPristine(),n.$setUntouched(),$("#userRemoveModal").modal("hide"),void r())})},r()}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwiY2xpZW50LmpzIiwiYXBwc3RvcmUuanMiLCJtYWluLmpzIiwiYWNjb3VudC5qcyIsImFwcHMuanMiLCJkbnMuanMiLCJncmFwaHMuanMiLCJzZWN1cml0eS5qcyIsInVzZXJzLmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJyZWRpcmVjdFRvIiwiY29udHJvbGxlciIsInRlbXBsYXRlVXJsIiwib3RoZXJ3aXNlIiwiZmlsdGVyIiwiaW5wdXQiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsInJlcXVpcmUiLCJsaW5rIiwic2NvcGUiLCJlbGVtIiwiYXR0cnMiLCJjdHJscyIsIiRzZXQiLCJsYXRlck5hbWUiLCJtb2RlbEN0cmwiLCJmb3JtQ3RybCIsIiRuYW1lIiwibmFtZSIsIiRhZGRDb250cm9sIiwiJG9uIiwiJHJlbW92ZUNvbnRyb2wiLCJzZXJ2aWNlIiwiJGh0dHAiLCJtZDUiLCJDbGllbnRFcnJvciIsInN0YXR1c0NvZGUiLCJtZXNzYWdlIiwiRXJyb3IiLCJjYWxsIiwidGhpcyIsImNvbnN0cnVjdG9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlZmF1bHRFcnJvckhhbmRsZXIiLCJjYWxsYmFjayIsImRhdGEiLCJzdGF0dXMiLCJjbGllbnQiLCJsb2dvdXQiLCJDbGllbnQiLCJfcmVhZHkiLCJfY29uZmlnTGlzdGVuZXIiLCJfcmVhZHlMaXN0ZW5lciIsIl91c2VySW5mbyIsInVzZXJuYW1lIiwiZW1haWwiLCJhZG1pbiIsIl90b2tlbiIsIl9jbGllbnRJZCIsIl9jbGllbnRTZWNyZXQiLCJfY29uZmlnIiwiYXBpU2VydmVyT3JpZ2luIiwid2ViU2VydmVyT3JpZ2luIiwiZnFkbiIsImlwIiwicmV2aXNpb24iLCJ1cGRhdGUiLCJpc0RldiIsInByb2dyZXNzIiwiX2luc3RhbGxlZEFwcHMiLCJzZXRUb2tlbiIsImxvY2FsU3RvcmFnZSIsInRva2VuIiwicHJvdG90eXBlIiwic2V0UmVhZHkiLCJmb3JFYWNoIiwib25SZWFkeSIsInB1c2giLCJvbkNvbmZpZyIsInNldFVzZXJJbmZvIiwidXNlckluZm8iLCJncmF2YXRhciIsImNyZWF0ZUhhc2giLCJ0b0xvd2VyQ2FzZSIsImdyYXZhdGFySHVnZSIsInNldENvbmZpZyIsInZlcnNpb24iLCJ0aGF0IiwiZ2V0SW5zdGFsbGVkQXBwcyIsImdldFVzZXJJbmZvIiwiZ2V0Q29uZmlnIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwiQXV0aG9yaXphdGlvbiIsInJlbW92ZUl0ZW0iLCJnZXQiLCJzdWNjZXNzIiwiZXJyb3IiLCJpbnN0YWxsQXBwIiwiaWQiLCJwYXNzd29yZCIsInRpdGxlIiwiYXBwU3RvcmVJZCIsImxvY2F0aW9uIiwicG9ydEJpbmRpbmdzIiwiYWNjZXNzUmVzdHJpY3Rpb24iLCJwb3N0IiwibWFuaWZlc3QiLCJ1bmluc3RhbGxBcHAiLCJhcHBJZCIsImNvbmZpZ3VyZUFwcCIsInVwZGF0ZUFwcCIsInN0YXJ0QXBwIiwic3RvcEFwcCIsImlzU2VydmVyRmlyc3RUaW1lIiwiYWN0aXZhdGVkIiwiZ2V0TmFrZWREb21haW4iLCJhcHBpZCIsInNldE5ha2VkRG9tYWluIiwiZ2V0QXBwcyIsImFwcHMiLCJnZXRBcHAiLCJhcHBGb3VuZCIsInNvbWUiLCJnZXRBcHBMb2dTdHJlYW0iLCJzb3VyY2UiLCJFdmVudFNvdXJjZSIsImdldEFwcExvZ1VybCIsInNldEFkbWluIiwicGF5bG9hZCIsImNyZWF0ZUFkbWluIiwic2V0dXBUb2tlbiIsImxpc3RVc2VycyIsImdldE9BdXRoQ2xpZW50cyIsImNsaWVudHMiLCJkZWxUb2tlbnNCeUNsaWVudElkIiwicmVib290IiwiYmFja3VwIiwic2V0Q2VydGlmaWNhdGUiLCJjZXJ0aWZpY2F0ZUZpbGUiLCJrZXlGaWxlIiwiY29uc29sZSIsImxvZyIsImZkIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJDb250ZW50LVR5cGUiLCJ1bmRlZmluZWQiLCJ0cmFuc2Zvcm1SZXF1ZXN0IiwiaWRlbnRpdHkiLCJncmFwaHMiLCJ0YXJnZXRzIiwiZnJvbSIsInBhcmFtcyIsInRhcmdldCIsImZvcm1hdCIsImNyZWF0ZVVzZXIiLCJyZW1vdmVVc2VyIiwibWV0aG9kIiwidXJsIiwiY2hhbmdlUGFzc3dvcmQiLCJjdXJyZW50UGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsInJlZnJlc2hDb25maWciLCJyZXN1bHQiLCJyZWZyZXNoSW5zdGFsbGVkQXBwcyIsImZvdW5kIiwiaSIsImxlbmd0aCIsImNvcHkiLCJzcGxpY2UiLCJ3aW5kb3ciLCJocmVmIiwiZXhjaGFuZ2VDb2RlRm9yVG9rZW4iLCJhdXRoQ29kZSIsImdyYW50X3R5cGUiLCJjb2RlIiwicmVkaXJlY3RfdXJpIiwib3JpZ2luIiwiY2xpZW50X2lkIiwiY2xpZW50X3NlY3JldCIsImFjY2Vzc190b2tlbiIsIkFwcFN0b3JlRXJyb3IiLCJBcHBTdG9yZSIsIl9hcHBzQ2FjaGUiLCJib3hWZXJzaW9uIiwiZ2V0QXBwQnlJZCIsImdldE1hbmlmZXN0IiwibWFuaWZlc3RVcmwiLCIkc2NvcGUiLCIkcm91dGUiLCIkaW50ZXJ2YWwiLCJpbml0aWFsaXplZCIsImlzQWN0aXZlIiwiY3VycmVudCIsIiQkcm91dGUiLCJvcmlnaW5hbFBhdGgiLCJpbmRleE9mIiwiZXZlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJsb2dpbiIsImNhbGxiYWNrVVJMIiwic2V0dXAiLCIkIiwibW9kYWwiLCJjaGVja0lmRG9uZSIsInNldFRpbWVvdXQiLCJpc0ZpcnN0VGltZSIsInJlZnJlc2hBcHBzVGltZXIiLCJiaW5kIiwicmVmcmVzaENvbmZpZ1RpbWVyIiwiY2FuY2VsIiwiJGxvY2F0aW9uIiwicGFzc3dvcmRDaGFuZ2VSZXNldCIsImZvcm0iLCJwYXNzd29yZGNoYW5nZSIsIm5ld1Bhc3N3b3JkUmVwZWF0IiwiJHNldFByaXN0aW5lIiwiJHNldFVudG91Y2hlZCIsInVzZXIiLCJidXN5IiwiZG9DaGFuZ2VQYXNzd29yZCIsInNob3dDaGFuZ2VQYXNzd29yZCIsImluc3RhbGxlZEFwcHMiLCJhcHBjb25maWd1cmUiLCJhcHB1bmluc3RhbGwiLCJzaG93Q29uZmlndXJlIiwidGNwUG9ydHMiLCJjb250YWluZXJQb3J0IiwiaG9zdFBvcnQiLCJkb0NvbmZpZ3VyZSIsInNob3dVbmluc3RhbGwiLCJkb1VuaW5zdGFsbCIsImhpc3RvcnkiLCJiYWNrIiwiJHRpbWVvdXQiLCJyZWZyZXNoIiwicmVhZHkiLCJwYXRoIiwiYXBwaW5zdGFsbCIsInNob3dJbnN0YWxsIiwicG9ydCIsInBhcnNlSW50IiwiZG9JbnN0YWxsIiwibmFrZWREb21haW5BcHAiLCJjZXJ0aWZpY2F0ZUZpbGVOYW1lIiwia2V5RmlsZU5hbWUiLCIkcGFyZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm9uY2hhbmdlIiwiJGFwcGx5IiwiZmlsZXMiLCJyZWxvYWQiLCJ0b2tlbkluVXNlIiwicmVuZGVyQ3B1IiwiYWN0aXZlVGFiIiwiY3B1RGF0YSIsInRyYW5zZm9ybWVkQ3B1IiwiZGF0YXBvaW50cyIsIm1hcCIsInBvaW50IiwieSIsIngiLCJjcHVHcmFwaCIsIlJpY2tzaGF3IiwiR3JhcGgiLCJlbGVtZW50IiwicXVlcnlTZWxlY3RvciIsInJlbmRlcmVyIiwid2lkdGgiLCJoZWlnaHQiLCJtaW4iLCJtYXgiLCJzZXJpZXMiLCJjb2xvciIsIkF4aXMiLCJUaW1lIiwiZ3JhcGgiLCJZIiwib3JpZW50YXRpb24iLCJ0aWNrRm9ybWF0IiwiRml4dHVyZXMiLCJOdW1iZXIiLCJmb3JtYXRLTUJUIiwiSG92ZXJEZXRhaWwiLCJmb3JtYXR0ZXIiLCJzd2F0Y2giLCJjb250ZW50IiwidG9GaXhlZCIsInJlbmRlciIsInJlbmRlck5ldHdvcmsiLCJ0eERhdGEiLCJyeERhdGEiLCJ0cmFuc2Zvcm1lZFR4IiwidHJhbnNmb3JtZWRSeCIsIm5ldHdvcmtHcmFwaCIsInJlbmRlckRpc2siLCJhcHBzVXNlZERhdGEiLCJkYXRhVXNlZERhdGEiLCJ0cmFuc2Zvcm1lZEFwcHNVc2VkIiwidHJhbnNmb3JtZWREYXRhVXNlZCIsImRpc2tHcmFwaCIsIkxlZ2VuZCIsImNwdVVzYWdlVGFyZ2V0IiwibmV0d29ya1VzYWdlVHhUYXJnZXQiLCJuZXR3b3JrVXNhZ2VSeFRhcmdldCIsImRpc2tVc2FnZUFwcHNVc2VkVGFyZ2V0IiwiZGlza1VzYWdlRGF0YVVzZWRUYXJnZXQiLCJ1cGRhdGVHcmFwaHMiLCJhY3RpdmVDbGllbnRzIiwicmVtb3ZlQWNjZXNzVG9rZW5zIiwiX2J1c3kiLCJhZGRDbGFzcyIsInVzZXJzIiwidXNlcnJlbW92ZSIsInVzZXJhZGQiLCJhbHJlYWR5VGFrZW4iLCJpc01lIiwiaXNBZG1pbiIsInRvZ2dsZUFkbWluIiwiZG9BZGQiLCJzaG93VXNlclJlbW92ZSIsImRvVXNlclJlbW92ZSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFLQSxJQUFBQSxLQUFBQyxRQUFBQyxPQUFBLGVBQUEsVUFBQSxZQUFBLGVBR0FGLEtBQUFHLFFBQUEsaUJBQUEsU0FBQUMsR0FDQUEsRUFBQUMsS0FBQSxLQUNBQyxXQUFBLFVBQ0FELEtBQUEsVUFDQUUsV0FBQSxrQkFDQUMsWUFBQSxxQkFDQUgsS0FBQSxhQUNBRSxXQUFBLHFCQUNBQyxZQUFBLHdCQUNBSCxLQUFBLFNBQ0FFLFdBQUEsaUJBQ0FDLFlBQUEsb0JBQ0FILEtBQUEsUUFDQUUsV0FBQSxnQkFDQUMsWUFBQSxtQkFDQUgsS0FBQSxZQUNBRSxXQUFBLG9CQUNBQyxZQUFBLHVCQUNBSCxLQUFBLFdBQ0FFLFdBQUEsbUJBQ0FDLFlBQUEsc0JBQ0FILEtBQUEsYUFDQUUsV0FBQSxxQkFDQUMsWUFBQSx3QkFDQUMsV0FBQUgsV0FBQSxTQUdBTixJQUFBVSxPQUFBLHFCQUFBLFdBQ0EsTUFBQSxVQUFBQyxHQUNBLE1BQUEsVUFBQUEsR0FBQSxFQUNBLGNBQUFBLEdBQUEsR0FDQSxLQUlBWCxJQUFBVSxPQUFBLHlCQUFBLFdBQ0EsTUFBQSxVQUFBQyxHQUNBLE1BQUEsVUFBQUEsRUFBQSxRQUNBLG9CQUFBQSxFQUFBLFFBQ0EsY0FBQUEsRUFBQSxZQUNBLHNCQUFBQSxFQUFBLGNBQ0Esb0JBQUFBLEVBQUEsYUFDQSxzQkFBQUEsRUFBQSxlQUNBLHVCQUFBQSxFQUFBLFlBQ0EseUJBQUFBLEVBQUEsV0FDQSxvQkFBQUEsRUFBQSxTQUNBLDBCQUFBQSxFQUFBLFlBQ0EsZ0NBQUFBLEVBQUEsUUFFQUEsS0FJQVgsSUFBQVUsT0FBQSx5QkFBQSxXQUNBLE1BQUEsVUFBQUMsR0FDQSxNQUFBLEtBQUFBLEVBQUEsU0FDQSxhQUFBQSxFQUFBLFVBQ0EsY0FBQUEsRUFBQSx3QkFFQUEsS0FNQVgsSUFBQVksVUFBQSxZQUFBLFdBQ0EsT0FDQUMsU0FBQSxJQUNBQyxTQUFBLFdBQUEsVUFDQUMsS0FBQSxTQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxLQUFBLE9BQUFGLEVBQUFHLFVBRUEsSUFBQUMsR0FBQUgsRUFBQSxHQUNBSSxFQUFBSixFQUFBLEVBQ0FHLElBQUFDLElBQ0FELEVBQUFFLE1BQUFOLEVBQUFPLEtBQ0FGLEVBQUFHLFlBQUFKLEdBQ0FOLEVBQUFXLElBQUEsV0FBQSxXQUNBSixFQUFBSyxlQUFBTixVQ2pGQXJCLFFBQUFDLE9BQUEsZUFBQTJCLFFBQUEsVUFBQSxRQUFBLE1BQUEsU0FBQUMsRUFBQUMsR0FHQSxRQUFBQyxHQUFBQyxFQUFBQyxHQUNBQyxNQUFBQyxLQUFBQyxNQUNBQSxLQUFBWixLQUFBWSxLQUFBQyxZQUFBYixLQUNBWSxLQUFBSixXQUFBQSxFQUVBSSxLQUFBSCxRQURBLGdCQUFBQSxHQUNBQSxFQUVBSyxLQUFBQyxVQUFBTixHQUlBLFFBQUFPLEdBQUFDLEdBQ0EsTUFBQSxVQUFBQyxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsRUFBQUMsRUFBQUMsYUFDQUosR0FBQSxHQUFBVixHQUFBWSxFQUFBRCxLQUlBLFFBQUFJLEtBQ0FWLEtBQUFXLFFBQUEsRUFDQVgsS0FBQVksbUJBQ0FaLEtBQUFhLGtCQUNBYixLQUFBYyxXQUNBQyxTQUFBLEtBQ0FDLE1BQUEsS0FDQUMsT0FBQSxHQUVBakIsS0FBQWtCLE9BQUEsS0FDQWxCLEtBQUFtQixVQUFBLGVBQ0FuQixLQUFBb0IsY0FBQSxTQUNBcEIsS0FBQXFCLFNBQ0FDLGdCQUFBLEtBQ0FDLGdCQUFBLEtBQ0FDLEtBQUEsS0FDQUMsR0FBQSxLQUNBQyxTQUFBLEtBQ0FDLE9BQUEsS0FDQUMsT0FBQSxFQUNBQyxhQUVBN0IsS0FBQThCLGtCQUVBOUIsS0FBQStCLFNBQUFDLGFBQUFDLE9BNUNBLEdBQUF6QixHQUFBLElBMmNBLE9BNVpBRSxHQUFBd0IsVUFBQUMsU0FBQSxXQUNBbkMsS0FBQVcsU0FFQVgsS0FBQVcsUUFBQSxFQUNBWCxLQUFBYSxlQUFBdUIsUUFBQSxTQUFBL0IsR0FDQUEsUUFJQUssRUFBQXdCLFVBQUFHLFFBQUEsU0FBQWhDLEdBQ0FMLEtBQUFXLFFBQUFOLElBQ0FMLEtBQUFhLGVBQUF5QixLQUFBakMsSUFHQUssRUFBQXdCLFVBQUFLLFNBQUEsU0FBQWxDLEdBQ0FMLEtBQUFZLGdCQUFBMEIsS0FBQWpDLEdBQ0FBLEVBQUFMLEtBQUFxQixVQUdBWCxFQUFBd0IsVUFBQU0sWUFBQSxTQUFBQyxHQUVBekMsS0FBQWMsVUFBQUMsU0FBQTBCLEVBQUExQixTQUNBZixLQUFBYyxVQUFBRSxNQUFBeUIsRUFBQXpCLE1BQ0FoQixLQUFBYyxVQUFBRyxRQUFBd0IsRUFBQXhCLE1BQ0FqQixLQUFBYyxVQUFBNEIsU0FBQSxtQ0FBQWhELEVBQUFpRCxXQUFBRixFQUFBekIsTUFBQTRCLGVBQUEsaUJBQ0E1QyxLQUFBYyxVQUFBK0IsYUFBQSxtQ0FBQW5ELEVBQUFpRCxXQUFBRixFQUFBekIsTUFBQTRCLGVBQUEsbUJBR0FsQyxFQUFBd0IsVUFBQVksVUFBQSxTQUFBaEYsR0FFQWtDLEtBQUFxQixRQUFBQyxnQkFBQXhELEVBQUF3RCxnQkFDQXRCLEtBQUFxQixRQUFBRSxnQkFBQXpELEVBQUF5RCxnQkFDQXZCLEtBQUFxQixRQUFBMEIsUUFBQWpGLEVBQUFpRixRQUNBL0MsS0FBQXFCLFFBQUFHLEtBQUExRCxFQUFBMEQsS0FDQXhCLEtBQUFxQixRQUFBSSxHQUFBM0QsRUFBQTJELEdBQ0F6QixLQUFBcUIsUUFBQUssU0FBQTVELEVBQUE0RCxTQUNBMUIsS0FBQXFCLFFBQUFNLE9BQUE3RCxFQUFBNkQsT0FDQTNCLEtBQUFxQixRQUFBTyxNQUFBOUQsRUFBQThELE1BQ0E1QixLQUFBcUIsUUFBQVEsU0FBQS9ELEVBQUErRCxRQUVBLElBQUFtQixHQUFBaEQsSUFFQUEsTUFBQVksZ0JBQUF3QixRQUFBLFNBQUEvQixHQUNBQSxFQUFBMkMsRUFBQTNCLFlBSUFYLEVBQUF3QixVQUFBZSxpQkFBQSxXQUNBLE1BQUFqRCxNQUFBOEIsZ0JBR0FwQixFQUFBd0IsVUFBQWdCLFlBQUEsV0FDQSxNQUFBbEQsTUFBQWMsV0FHQUosRUFBQXdCLFVBQUFpQixVQUFBLFdBQ0EsTUFBQW5ELE1BQUFxQixTQUdBWCxFQUFBd0IsVUFBQUgsU0FBQSxTQUFBRSxHQUNBeEMsRUFBQTJELFNBQUFDLFFBQUFDLE9BQUFDLGNBQUEsVUFBQXRCLEVBQ0FBLEVBQ0FELGFBQUFDLE1BQUFBLEVBREFELGFBQUF3QixXQUFBLFNBRUF4RCxLQUFBa0IsT0FBQWUsR0FNQXZCLEVBQUF3QixVQUFBcEUsT0FBQSxTQUFBdUMsR0FDQVosRUFBQWdFLElBQUEsMkJBQUFDLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsS0FDQXFELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQU8sU0FBQSxTQUFBcEMsR0FDQVosRUFBQWdFLElBQUEsbUJBQUFDLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsS0FDQXFELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQTBCLFdBQUEsU0FBQUMsRUFBQWQsRUFBQWUsRUFBQUMsRUFBQWpHLEVBQUF1QyxHQUNBLEdBQUEyQyxHQUFBaEQsS0FDQU0sR0FBQTBELFdBQUFILEVBQUFkLFFBQUFBLEVBQUFlLFNBQUFBLEVBQUFHLFNBQUFuRyxFQUFBbUcsU0FBQUMsYUFBQXBHLEVBQUFvRyxhQUFBQyxrQkFBQXJHLEVBQUFxRyxrQkFDQTFFLEdBQUEyRSxLQUFBLHVCQUFBOUQsR0FBQW9ELFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELEtBR0FBLEVBQUErRCxVQUFBTixNQUFBQSxHQUNBZixFQUFBbEIsZUFBQVEsS0FBQWhDLE9BRUFELEdBQUEsS0FBQUMsRUFBQXVELE9BQ0FGLE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQW9DLGFBQUEsU0FBQUMsRUFBQVQsRUFBQXpELEdBQ0EsR0FBQUMsSUFBQXdELFNBQUFBLEVBQ0FyRSxHQUFBMkUsS0FBQSxnQkFBQUcsRUFBQSxhQUFBakUsR0FBQW9ELFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxFQUFBRixFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsUUFDQXNELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQXNDLGFBQUEsU0FBQVgsRUFBQUMsRUFBQWhHLEVBQUF1QyxHQUNBLEdBQUFDLElBQUFpRSxNQUFBVixFQUFBQyxTQUFBQSxFQUFBRyxTQUFBbkcsRUFBQW1HLFNBQUFDLGFBQUFwRyxFQUFBb0csYUFBQUMsa0JBQUFyRyxFQUFBcUcsa0JBQ0ExRSxHQUFBMkUsS0FBQSxnQkFBQVAsRUFBQSxhQUFBdkQsR0FBQW9ELFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxFQUFBRixFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsUUFDQXNELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQXVDLFVBQUEsU0FBQVosRUFBQWQsRUFBQWUsRUFBQXpELEdBQ0FaLEVBQUEyRSxLQUFBLGdCQUFBUCxFQUFBLFdBQUFkLFFBQUFBLEVBQUFlLFNBQUFBLElBQUFKLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxFQUFBRixFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsUUFDQXNELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQXdDLFNBQUEsU0FBQWIsRUFBQXhELEdBQ0EsR0FBQUMsS0FDQWIsR0FBQTJFLEtBQUEsZ0JBQUFQLEVBQUEsU0FBQXZELEdBQUFvRCxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsRUFBQUYsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLFFBQ0FzRCxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUF5QyxRQUFBLFNBQUFkLEVBQUF4RCxHQUNBLEdBQUFDLEtBQ0FiLEdBQUEyRSxLQUFBLGdCQUFBUCxFQUFBLFFBQUF2RCxHQUFBb0QsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEVBQUFGLEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFDQUQsR0FBQSxRQUNBc0QsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBYSxRQUFBLFNBQUExQyxHQUNBWixFQUFBZ0UsSUFBQSwyQkFBQUMsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEdBQUEsZ0JBQUFELEdBQUFELEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFDQUQsR0FBQSxLQUFBQyxLQUNBcUQsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBMEMsa0JBQUEsU0FBQXZFLEdBQ0FaLEVBQUFnRSxJQUFBLDJCQUFBQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsR0FBQSxnQkFBQUQsR0FBQUQsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLE1BQUFDLEVBQUF1RSxhQUNBbEIsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBNEMsZUFBQSxTQUFBekUsR0FDQVosRUFBQWdFLElBQUEsaUNBQ0FDLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsRUFBQXlFLFNBQ0FwQixNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUE4QyxlQUFBLFNBQUFELEVBQUExRSxHQUNBWixFQUFBMkUsS0FBQSxpQ0FBQVcsTUFBQUEsSUFBQXJCLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxFQUFBRixFQUFBLEdBQUFWLEdBQUFZLFFBQ0FGLEdBQUEsUUFDQXNELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQStDLFFBQUEsU0FBQTVFLEdBQ0FaLEVBQUFnRSxJQUFBLGdCQUFBQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsR0FBQSxnQkFBQUQsR0FBQUQsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLEtBQUFDLEVBQUE0RSxRQUNBdkIsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBaUQsT0FBQSxTQUFBWixFQUFBbEUsR0FDQSxHQUFBK0UsR0FBQSxJQVVBLE9BVEFwRixNQUFBOEIsZUFBQXVELEtBQUEsU0FBQTFILEdBQ0EsTUFBQUEsR0FBQWtHLEtBQUFVLEdBQ0FhLEVBQUF6SCxHQUNBLElBRUEsSUFJQXlILEVBQUEvRSxFQUFBLEtBQUErRSxHQUNBL0UsRUFBQSxHQUFBUCxPQUFBLG1CQUdBWSxFQUFBd0IsVUFBQW9ELGdCQUFBLFNBQUFmLEdBQ0EsR0FBQWdCLEdBQUEsR0FBQUMsYUFBQSxnQkFBQWpCLEVBQUEsYUFDQSxPQUFBZ0IsSUFHQTdFLEVBQUF3QixVQUFBdUQsYUFBQSxTQUFBbEIsR0FDQSxNQUFBLGdCQUFBQSxFQUFBLHNCQUFBdkUsS0FBQWtCLFFBR0FSLEVBQUF3QixVQUFBd0QsU0FBQSxTQUFBM0UsRUFBQUUsRUFBQVosR0FDQSxHQUFBc0YsSUFDQTVFLFNBQUFBLEVBQ0FFLE1BQUFBLEVBR0F4QixHQUFBMkUsS0FBQSxpQkFBQXJELEVBQUEsU0FBQTRFLEdBQUFqQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsRUFBQUYsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLFFBQ0FzRCxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUEwRCxZQUFBLFNBQUE3RSxFQUFBK0MsRUFBQTlDLEVBQUE2RSxFQUFBeEYsR0FDQSxHQUFBc0YsSUFDQTVFLFNBQUFBLEVBQ0ErQyxTQUFBQSxFQUNBOUMsTUFBQUEsR0FHQWdDLEVBQUFoRCxJQUVBUCxHQUFBMkUsS0FBQSx3Q0FBQXlCLEVBQUFGLEdBQUFqQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsR0FBQSxnQkFBQUQsR0FBQUQsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxLQUVBMEMsRUFBQWpCLFNBQUF6QixFQUFBMkIsT0FDQWUsRUFBQVIsYUFBQXpCLFNBQUFBLEVBQUFDLE1BQUFBLEVBQUFDLE9BQUEsUUFFQVosR0FBQSxLQUFBQyxFQUFBdUUsY0FDQWxCLE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQTRELFVBQUEsU0FBQXpGLEdBQ0FaLEVBQUFnRSxJQUFBLGlCQUFBQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsR0FBQSxnQkFBQUQsR0FBQUQsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLEtBQUFDLEtBQ0FxRCxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUE2RCxnQkFBQSxTQUFBMUYsR0FDQVosRUFBQWdFLElBQUEseUJBQUFDLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsRUFBQTBGLFdBQ0FyQyxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUErRCxvQkFBQSxTQUFBcEMsRUFBQXhELEdBQ0FaLEVBQUFBLFVBQUEseUJBQUFvRSxFQUFBLFdBQUFILFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxFQUFBRixFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsUUFDQXNELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQVAsT0FBQSxTQUFBdEIsR0FDQVosRUFBQWdFLElBQUEsMkJBQUFDLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsS0FDQXFELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQWdFLE9BQUEsU0FBQTdGLEdBQ0FaLEVBQUFnRSxJQUFBLDJCQUFBQyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsR0FBQSxnQkFBQUQsR0FBQUQsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLEtBQUFDLEtBQ0FxRCxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUFpRSxPQUFBLFNBQUE5RixHQUNBWixFQUFBMkUsS0FBQSw0QkFBQVYsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEdBQUEsZ0JBQUFELEdBQUFELEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFDQUQsR0FBQSxLQUFBQyxLQUNBcUQsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBa0UsZUFBQSxTQUFBQyxFQUFBQyxFQUFBakcsR0FDQWtHLFFBQUFDLElBQUEsdUJBRUEsSUFBQUMsR0FBQSxHQUFBQyxTQUNBRCxHQUFBRSxPQUFBLGNBQUFOLEdBQ0FJLEVBQUFFLE9BQUEsTUFBQUwsR0FFQTdHLEVBQUEyRSxLQUFBLCtCQUFBcUMsR0FDQXBELFNBQUF1RCxlQUFBQyxRQUNBQyxpQkFBQWxKLFFBQUFtSixXQUNBckQsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEVBQUFGLEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFDQUQsR0FBQSxRQUNBc0QsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBOEUsT0FBQSxTQUFBQyxFQUFBQyxFQUFBN0csR0FDQSxHQUFBdkMsSUFDQXFKLFFBQ0FDLE9BQUFILEVBQ0FJLE9BQUEsT0FDQUgsS0FBQUEsR0FJQXpILEdBQUFnRSxJQUFBLDBCQUFBM0YsR0FBQTRGLFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsS0FDQXFELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQW9GLFdBQUEsU0FBQXZHLEVBQUFDLEVBQUFYLEdBQ0EsR0FBQUMsSUFDQVMsU0FBQUEsRUFDQUMsTUFBQUEsRUFHQXZCLEdBQUEyRSxLQUFBLGdCQUFBOUQsR0FBQW9ELFFBQUEsU0FBQXBELEVBQUFDLEdBQ0EsTUFBQSxPQUFBQSxHQUFBLGdCQUFBRCxHQUFBRCxFQUFBLEdBQUFWLEdBQUFZLEVBQUFELFFBQ0FELEdBQUEsS0FBQUMsS0FDQXFELE1BQUF2RCxFQUFBQyxLQUdBSyxFQUFBd0IsVUFBQXFGLFdBQUEsU0FBQXhHLEVBQUErQyxFQUFBekQsR0FDQSxHQUFBQyxJQUNBUyxTQUFBQSxFQUNBK0MsU0FBQUEsRUFHQXJFLElBQUErSCxPQUFBLFNBQUFDLElBQUEsaUJBQUExRyxFQUFBVCxLQUFBQSxFQUFBK0MsU0FBQXVELGVBQUEsc0JBQUFsRCxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsRUFBQUYsRUFBQSxHQUFBVixHQUFBWSxFQUFBRCxRQUNBRCxHQUFBLFFBQ0FzRCxNQUFBdkQsRUFBQUMsS0FHQUssRUFBQXdCLFVBQUF3RixlQUFBLFNBQUFDLEVBQUFDLEVBQUF2SCxHQUNBLEdBQUFDLElBQ0F3RCxTQUFBNkQsRUFDQUMsWUFBQUEsRUFHQW5JLEdBQUEyRSxLQUFBLGlCQUFBcEUsS0FBQWMsVUFBQUMsU0FBQSxZQUFBVCxHQUFBb0QsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEVBQUFGLEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFDQUQsR0FBQSxLQUFBQyxLQUNBcUQsTUFBQXZELEVBQUFDLEtBR0FLLEVBQUF3QixVQUFBMkYsY0FBQSxTQUFBeEgsR0FDQSxHQUFBMkMsR0FBQWhELElBRUFLLEdBQUEsa0JBQUFBLEdBQUFBLEVBQUEsYUFFQUwsS0FBQWxDLE9BQUEsU0FBQTZGLEVBQUFtRSxHQUNBLE1BQUFuRSxHQUFBdEQsRUFBQXNELElBRUFYLEVBQUFGLFVBQUFnRixPQUNBekgsR0FBQSxVQUlBSyxFQUFBd0IsVUFBQTZGLHFCQUFBLFNBQUExSCxHQUNBLEdBQUEyQyxHQUFBaEQsSUFFQUssR0FBQSxrQkFBQUEsR0FBQUEsRUFBQSxhQUVBTCxLQUFBaUYsUUFBQSxTQUFBdEIsRUFBQXVCLEdBQ0EsR0FBQXZCLEVBQUEsTUFBQXRELEdBQUFzRCxFQUdBdUIsR0FBQTlDLFFBQUEsU0FBQXpFLEdBR0EsSUFBQSxHQUZBcUssSUFBQSxFQUVBQyxFQUFBLEVBQUFBLEVBQUFqRixFQUFBbEIsZUFBQW9HLFNBQUFELEVBQ0EsR0FBQWpGLEVBQUFsQixlQUFBbUcsR0FBQXBFLEtBQUFsRyxFQUFBa0csR0FBQSxDQUNBbUUsRUFBQUMsQ0FDQSxPQUlBRCxLQUFBLEVBQ0FwSyxRQUFBdUssS0FBQXhLLEVBQUFxRixFQUFBbEIsZUFBQWtHLElBRUFoRixFQUFBbEIsZUFBQVEsS0FBQTNFLElBS0EsS0FBQSxHQUFBc0ssR0FBQWpGLEVBQUFsQixlQUFBb0csT0FBQSxFQUFBRCxHQUFBLElBQUFBLEVBQ0EvQyxFQUFBRyxLQUFBLFNBQUF6RyxHQUFBLE1BQUFBLEdBQUFpRixLQUFBYixFQUFBbEIsZUFBQW1HLEdBQUFwRSxNQUNBYixFQUFBbEIsZUFBQXNHLE9BQUFILEVBQUEsRUFLQTVILEdBQUEsU0FJQUssRUFBQXdCLFVBQUF6QixPQUFBLFdBQ0FULEtBQUErQixTQUFBLE1BQ0EvQixLQUFBYyxhQUdBdUgsT0FBQXBFLFNBQUFxRSxLQUFBLDBCQUdBNUgsRUFBQXdCLFVBQUFxRyxxQkFBQSxTQUFBQyxFQUFBbkksR0FDQSxHQUFBQyxJQUNBbUksV0FBQSxxQkFDQUMsS0FBQUYsRUFDQUcsYUFBQU4sT0FBQXBFLFNBQUEyRSxPQUNBQyxVQUFBN0ksS0FBQW1CLFVBQ0EySCxjQUFBOUksS0FBQW9CLGNBR0EzQixHQUFBMkUsS0FBQSxxREFBQXBFLEtBQUFtQixVQUFBYixHQUFBb0QsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEdBQUEsZ0JBQUFELEdBQUFELEVBQUEsR0FBQVYsR0FBQVksRUFBQUQsUUFFQUQsR0FBQSxLQUFBQyxFQUFBeUksZ0JBQ0FwRixNQUFBdkQsRUFBQUMsS0FHQUcsRUFBQSxHQUFBRSxNQzVjQTlDLFFBQUFDLE9BQUEsZUFBQTJCLFFBQUEsWUFBQSxRQUFBLFNBQUEsU0FBQUMsRUFBQWlCLEdBRUEsUUFBQXNJLEdBQUFwSixFQUFBQyxHQUNBQyxNQUFBQyxLQUFBQyxNQUNBQSxLQUFBWixLQUFBWSxLQUFBQyxZQUFBYixLQUNBWSxLQUFBSixXQUFBQSxFQUVBSSxLQUFBSCxRQURBLGdCQUFBQSxHQUNBQSxFQUVBSyxLQUFBQyxVQUFBTixHQUlBLFFBQUFvSixLQUNBakosS0FBQWtKLGNBaURBLE1BOUNBRCxHQUFBL0csVUFBQStDLFFBQUEsU0FBQTVFLEdBQ0EsR0FBQSxPQUFBSyxFQUFBeUMsWUFBQTdCLGdCQUFBLE1BQUFqQixHQUFBLEdBQUEySSxHQUFBLElBQUEscUJBRUEsSUFBQWhHLEdBQUFoRCxJQUVBUCxHQUFBZ0UsSUFBQS9DLEVBQUF5QyxZQUFBN0IsZ0JBQUEseUJBQUE2RixRQUFBZ0MsV0FBQXpJLEVBQUF5QyxZQUFBSixXQUFBVyxRQUFBLFNBQUFwRCxFQUFBQyxHQUNBLE1BQUEsT0FBQUEsRUFBQUYsRUFBQSxHQUFBMkksR0FBQXpJLEVBQUFELEtBR0FBLEVBQUE0RSxLQUFBOUMsUUFBQSxTQUFBekUsR0FDQXFGLEVBQUFrRyxXQUFBdkwsRUFBQWtHLE1BRUFiLEVBQUFrRyxXQUFBdkwsRUFBQWtHLElBQUFsRyxLQUdBMEMsRUFBQSxLQUFBMkMsRUFBQWtHLGVBQ0F2RixNQUFBLFNBQUFyRCxFQUFBQyxHQUNBLE1BQUFGLEdBQUEsR0FBQTJJLEdBQUF6SSxFQUFBRCxPQUlBMkksRUFBQS9HLFVBQUFrSCxXQUFBLFNBQUE3RSxFQUFBbEUsR0FDQSxHQUFBa0UsSUFBQXZFLE1BQUFrSixXQUFBLE1BQUE3SSxHQUFBLEtBQUFMLEtBQUFrSixXQUFBM0UsR0FFQSxJQUFBdkIsR0FBQWhELElBRUFBLE1BQUFpRixRQUFBLFNBQUF0QixHQUNBLE1BQUFBLEdBQUF0RCxFQUFBc0QsR0FDQVksSUFBQXZCLEdBQUFrRyxXQUFBN0ksRUFBQSxLQUFBMkMsRUFBQWtHLFdBQUEzRSxRQUVBbEUsR0FBQSxHQUFBMkksR0FBQSxJQUFBLGlCQUlBQyxFQUFBL0csVUFBQW1ILFlBQUEsU0FBQTlFLEVBQUFsRSxHQUNBLEdBQUEsT0FBQUssRUFBQXlDLFlBQUE3QixnQkFBQSxNQUFBakIsR0FBQSxHQUFBMkksR0FBQSxJQUFBLHFCQUVBLElBQUFNLEdBQUE1SSxFQUFBeUMsWUFBQTdCLGdCQUFBLHlCQUFBaUQsRUFBQSxXQUNBZ0MsU0FBQUMsSUFBQSwyQkFBQWpDLEVBQUErRSxHQUNBN0osRUFBQWdFLElBQUE2RixHQUFBNUYsUUFBQSxTQUFBcEQsRUFBQUMsR0FDQSxNQUFBLE9BQUFBLEVBQUFGLEVBQUEsR0FBQTJJLEdBQUF6SSxFQUFBRCxJQUNBRCxFQUFBLEtBQUFDLEtBQ0FxRCxNQUFBLFNBQUFyRCxFQUFBQyxHQUNBLE1BQUFGLEdBQUEsR0FBQTJJLEdBQUF6SSxFQUFBRCxPQUdBLEdBQUEySSxNQ2pFQXJMLFFBQUFDLE9BQUEsZUFBQUssV0FBQSxrQkFBQSxTQUFBLFNBQUEsWUFBQSxTQUFBLFNBQUFxTCxFQUFBQyxFQUFBQyxFQUFBL0ksR0FDQTZJLEVBQUFHLGFBQUEsRUFDQUgsRUFBQTlHLFNBQUEvQixFQUFBd0MsY0FDQXFHLEVBQUF6TCxVQUVBeUwsRUFBQUksU0FBQSxTQUFBbEMsR0FDQSxNQUFBK0IsR0FBQUksUUFDQSxJQUFBSixFQUFBSSxRQUFBQyxRQUFBQyxhQUFBQyxRQUFBdEMsSUFEQSxHQUlBOEIsRUFBQTlJLE9BQUEsU0FBQXVKLEdBQ0FBLEVBQUFDLGtCQUNBVixFQUFBRyxhQUFBLEVBQ0FoSixFQUFBRCxVQUdBOEksRUFBQVcsTUFBQSxXQUNBLEdBQUFDLEdBQUE5QixPQUFBcEUsU0FBQTJFLE9BQUEsdUJBQ0FqSyxFQUFBLDZCQUNBMEosUUFBQXBFLFNBQUFxRSxLQUFBLCtEQUFBNUgsRUFBQVMsVUFBQSxpQkFBQWdKLEVBQUEsVUFBQXhMLEdBR0E0SyxFQUFBYSxNQUFBLFdBQ0EvQixPQUFBcEUsU0FBQXFFLEtBQUEsMkJBR0FpQixFQUFBNUYsTUFBQSxTQUFBQSxHQUNBNEMsUUFBQTVDLE1BQUFBLEdBQ0EwRSxPQUFBcEUsU0FBQXFFLEtBQUEsZUFHQWlCLEVBQUE1SCxPQUFBLFdBQ0EwSSxFQUFBLGdCQUFBQyxNQUFBLFFBRUFmLEVBQUFHLGFBQUEsRUFFQWhKLEVBQUFpQixPQUFBLFNBQUFnQyxHQUNBQSxHQUFBNEMsUUFBQTVDLE1BQUFBLEdBRUEwRSxPQUFBcEUsU0FBQXFFLEtBQUEsa0JBSUFpQixFQUFBcEQsT0FBQSxXQUNBa0UsRUFBQSx3QkFBQUMsTUFBQSxRQUVBZixFQUFBRyxhQUFBLEVBRUFoSixFQUFBeUYsT0FBQSxTQUFBeEMsR0FLQSxRQUFBNEcsS0FDQTdKLEVBQUFxQyxRQUFBLFNBQUFZLEdBQ0EsTUFBQUEsR0FBQTBFLE9BQUFtQyxXQUFBRCxFQUFBLE1BRUFGLEVBQUEsd0JBQUFDLE1BQUEsYUFDQWYsRUFBQUcsYUFBQSxNQVRBL0YsR0FBQTRDLFFBQUE1QyxNQUFBQSxHQWFBMEUsT0FBQW1DLFdBQUFELEVBQUEsUUFJQTdKLEVBQUFrRSxrQkFBQSxTQUFBakIsRUFBQThHLEdBQ0EsTUFBQTlHLEdBQUE0RixFQUFBNUYsTUFBQUEsR0FDQThHLEVBQUFsQixFQUFBYSxhQUtBcEksYUFBQUMsTUFDQXZCLEVBQUFtSCxjQUFBLFNBQUFsRSxHQUNBLE1BQUFBLElBQUEsTUFBQUEsRUFBQS9ELFdBQUEySixFQUFBVyxRQUNBdkcsRUFBQTRGLEVBQUE1RixNQUFBQSxJQUdBakQsRUFBQXlDLFlBQUF0QixTQUFBRixTQUFBMEcsT0FBQXBFLFNBQUFxRSxLQUFBLG9CQUVBNUgsR0FBQStCLFNBQUEsU0FBQWtCLEVBQUFtRSxHQUNBLE1BQUFuRSxHQUFBNEYsRUFBQTVGLE1BQUFBLElBRUFqRCxFQUFBOEIsWUFBQXNGLE9BRUFwSCxHQUFBcUgscUJBQUEsU0FBQXBFLEdBQ0EsR0FBQUEsRUFBQSxNQUFBNEYsR0FBQTVGLE1BQUFBLEVBR0EsSUFBQStHLEdBQUFqQixFQUFBL0ksRUFBQXFILHFCQUFBNEMsS0FBQWpLLEdBQUEsS0FDQWtLLEVBQUFuQixFQUFBL0ksRUFBQW1ILGNBQUE4QyxLQUFBakssR0FBQSxJQUVBNkksR0FBQWpLLElBQUEsV0FBQSxXQUNBbUssRUFBQW9CLE9BQUFILEdBQ0FqQixFQUFBb0IsT0FBQUQsS0FJQWxLLEVBQUF5QixXQUVBb0gsRUFBQXpMLE9BQUE0QyxFQUFBeUMsWUFFQW9HLEVBQUFHLGFBQUEsVUFLQUgsRUFBQVcsV0FLQXhKLEVBQUE2QixTQUFBLFNBQUF6RSxHQUNBQSxFQUFBK0QsU0FBQUYsU0FDQTBHLE9BQUFwRSxTQUFBcUUsS0FBQSxxQkNuSEExSyxRQUFBQyxPQUFBLGVBQUFLLFdBQUEscUJBQUEsU0FBQSxZQUFBLFNBQUEsU0FBQXFMLEVBQUF1QixFQUFBcEssR0FZQSxRQUFBcUssR0FBQUMsR0FDQXpCLEVBQUEwQixlQUFBdEgsTUFBQUcsU0FBQSxLQUNBeUYsRUFBQTBCLGVBQUF0SCxNQUFBaUUsWUFBQSxLQUNBMkIsRUFBQTBCLGVBQUF0SCxNQUFBdUgsa0JBQUEsS0FDQTNCLEVBQUEwQixlQUFBbkgsU0FBQSxHQUNBeUYsRUFBQTBCLGVBQUFyRCxZQUFBLEdBQ0EyQixFQUFBMEIsZUFBQUMsa0JBQUEsR0FFQUYsSUFDQUEsRUFBQUcsZUFDQUgsRUFBQUksaUJBckJBN0IsRUFBQThCLEtBQUEzSyxFQUFBd0MsY0FDQXFHLEVBQUF6TCxPQUFBNEMsRUFBQXlDLFlBRUFvRyxFQUFBMEIsZ0JBQ0FLLE1BQUEsRUFDQTNILFNBQ0FHLFNBQUEsR0FDQThELFlBQUEsR0FDQXNELGtCQUFBLElBaUJBM0IsRUFBQWdDLGlCQUFBLFNBQUFQLEdBQ0F6QixFQUFBMEIsZUFBQXRILE1BQUFHLFNBQUEsS0FDQXlGLEVBQUEwQixlQUFBdEgsTUFBQWlFLFlBQUEsS0FDQTJCLEVBQUEwQixlQUFBdEgsTUFBQXVILGtCQUFBLEtBQ0EzQixFQUFBMEIsZUFBQUssTUFBQSxFQUVBNUssRUFBQWdILGVBQUE2QixFQUFBMEIsZUFBQW5ILFNBQUF5RixFQUFBMEIsZUFBQXJELFlBQUEsU0FBQWpFLEdBQ0EsTUFBQUEsUUFDQSxNQUFBQSxFQUFBL0QsWUFDQTJKLEVBQUEwQixlQUFBdEgsTUFBQUcsVUFBQSxFQUNBeUYsRUFBQTBCLGVBQUFuSCxTQUFBLElBRUF5QyxRQUFBNUMsTUFBQSw2QkFBQUEsS0FLQTRGLEVBQUEwQixlQUFBSyxNQUFBLEVBQ0FQLEVBQUFDLE9BRUFYLEdBQUEsd0JBQUFDLE1BQUEsWUFJQWYsRUFBQWlDLG1CQUFBLFNBQUFSLEdBQ0FELEVBQUFDLEdBRUFYLEVBQUEsd0JBQUFDLE1BQUEsWUNyREExTSxRQUFBQyxPQUFBLGVBQUFLLFdBQUEsa0JBQUEsU0FBQSxZQUFBLFNBQUEsU0FBQXFMLEVBQUF1QixFQUFBcEssR0FDQTZJLEVBQUFrQyxjQUFBL0ssRUFBQXVDLG1CQUNBc0csRUFBQXpMLE9BQUE0QyxFQUFBeUMsWUFFQW9HLEVBQUFtQyxjQUNBSixNQUFBLEVBQ0EzSCxTQUNBaEcsT0FDQXNHLFNBQUEsR0FDQUgsU0FBQSxHQUNBSSxnQkFDQUMsa0JBQUEsSUFHQW9GLEVBQUFvQyxjQUNBaEksU0FDQWhHLE9BQ0FtRyxTQUFBLElBR0F5RixFQUFBcUMsY0FBQSxTQUFBak8sR0FDQTRMLEVBQUFtQyxhQUFBL04sSUFBQUEsRUFDQTRMLEVBQUFtQyxhQUFBekgsU0FBQXRHLEVBQUFzRyxTQUNBc0YsRUFBQW1DLGFBQUF4SCxhQUFBdkcsRUFBQTBHLFNBQUF3SCxTQUNBdEMsRUFBQW1DLGFBQUF2SCxrQkFBQXhHLEVBQUF3RyxpQkFDQSxLQUFBLEdBQUEySCxLQUFBdkMsR0FBQW1DLGFBQUF4SCxhQUNBcUYsRUFBQW1DLGFBQUF4SCxhQUFBNEgsR0FBQUMsU0FBQXBPLEVBQUF1RyxhQUFBNEgsRUFHQXpCLEdBQUEsc0JBQUFDLE1BQUEsU0FHQWYsRUFBQXlDLFlBQUEsU0FBQWhCLEdBQ0F6QixFQUFBbUMsYUFBQUosTUFBQSxFQUNBL0IsRUFBQW1DLGFBQUEvSCxNQUFBdkUsS0FBQSxLQUNBbUssRUFBQW1DLGFBQUEvSCxNQUFBRyxTQUFBLElBRUEsSUFBQUksS0FDQSxLQUFBLEdBQUE0SCxLQUFBdkMsR0FBQW1DLGFBQUF4SCxhQUNBQSxFQUFBNEgsR0FBQXZDLEVBQUFtQyxhQUFBeEgsYUFBQTRILEdBQUFDLFFBR0FyTCxHQUFBOEQsYUFBQStFLEVBQUFtQyxhQUFBL04sSUFBQWtHLEdBQUEwRixFQUFBbUMsYUFBQTVILFVBQUFHLFNBQUFzRixFQUFBbUMsYUFBQXpILFNBQUFDLGFBQUFBLEVBQUFDLGtCQUFBb0YsRUFBQW1DLGFBQUF2SCxtQkFBQSxTQUFBUixHQUNBLE1BQUFBLElBQ0EsTUFBQUEsRUFBQS9ELFlBQ0EySixFQUFBbUMsYUFBQS9ILE1BQUFHLFNBQUEsMkJBQ0F5RixFQUFBbUMsYUFBQTVILFNBQUEsSUFFQXlGLEVBQUFtQyxhQUFBL0gsTUFBQXZFLEtBQUEscUJBQUFtSyxFQUFBbUMsYUFBQS9OLElBQUF5QixLQUFBLDhCQUdBbUssRUFBQW1DLGFBQUFKLE1BQUEsS0FJQS9CLEVBQUFtQyxhQUFBSixNQUFBLEVBQ0EvQixFQUFBbUMsYUFBQS9ILFNBQ0E0RixFQUFBbUMsYUFBQS9OLE9BQ0E0TCxFQUFBbUMsYUFBQXpILFNBQUEsR0FDQXNGLEVBQUFtQyxhQUFBNUgsU0FBQSxHQUNBeUYsRUFBQW1DLGFBQUF4SCxnQkFDQXFGLEVBQUFtQyxhQUFBdkgsa0JBQUEsR0FFQTZHLEVBQUFHLGVBQ0FILEVBQUFJLG9CQUVBZixHQUFBLHNCQUFBQyxNQUFBLFlBSUFmLEVBQUEwQyxjQUFBLFNBQUF0TyxHQUNBNEwsRUFBQW9DLGFBQUFoTyxJQUFBQSxFQUNBNEwsRUFBQW9DLGFBQUFoSSxNQUFBRyxTQUFBLEtBRUF1RyxFQUFBLHNCQUFBQyxNQUFBLFNBR0FmLEVBQUEyQyxZQUFBLFNBQUFsQixHQUNBekIsRUFBQW9DLGFBQUFoSSxNQUFBRyxTQUFBLEtBRUFwRCxFQUFBNEQsYUFBQWlGLEVBQUFvQyxhQUFBaE8sSUFBQWtHLEdBQUEwRixFQUFBb0MsYUFBQTdILFNBQUEsU0FBQUgsR0FDQSxNQUFBQSxRQUNBLE1BQUFBLEVBQUEvRCxZQUNBMkosRUFBQW9DLGFBQUE3SCxTQUFBLEdBQ0F5RixFQUFBb0MsYUFBQWhJLE1BQUFHLFVBQUEsR0FFQXlDLFFBQUE1QyxNQUFBQSxLQUtBNEYsRUFBQW9DLGFBQUFoTyxPQUNBNEwsRUFBQW9DLGFBQUE3SCxTQUFBLEdBRUFrSCxFQUFBRyxlQUNBSCxFQUFBSSxvQkFFQWYsR0FBQSxzQkFBQUMsTUFBQSxZQUlBZixFQUFBc0IsT0FBQSxXQUNBeEMsT0FBQThELFFBQUFDLFdIdEdBeE8sUUFBQUMsT0FBQSxlQUFBSyxXQUFBLHNCQUFBLFNBQUEsWUFBQSxXQUFBLFNBQUEsV0FBQSxTQUFBcUwsRUFBQXVCLEVBQUF1QixFQUFBM0wsRUFBQXVJLEdBOEVBLFFBQUFxRCxLQUNBL0MsRUFBQWdELE9BQUEsRUFFQXRELEVBQUFoRSxRQUFBLFNBQUF0QixFQUFBdUIsR0FDQSxNQUFBdkIsSUFDQTRDLFFBQUE1QyxNQUFBQSxHQUNBMEksRUFBQUMsRUFBQSxPQUdBL0MsRUFBQXJFLEtBQUFBLE9BQ0FxRSxFQUFBZ0QsT0FBQSxNQXZGQTdMLEVBQUEyQixRQUFBLFdBQUEzQixFQUFBd0MsY0FBQWpDLE9BQUE2SixFQUFBMEIsS0FBQSxPQUVBakQsRUFBQWdELE9BQUEsRUFDQWhELEVBQUFyRSxRQUNBcUUsRUFBQXpMLE9BQUE0QyxFQUFBeUMsWUFFQW9HLEVBQUFrRCxZQUNBbkIsTUFBQSxFQUNBM0gsU0FDQWhHLE9BQ0FzRyxTQUFBLEdBQ0FILFNBQUEsR0FDQUksZ0JBQ0FDLGtCQUFBLElBR0FvRixFQUFBbUQsWUFBQSxTQUFBL08sR0FDQXNMLEVBQUFJLFlBQUExTCxFQUFBa0csR0FBQSxTQUFBRixFQUFBVSxHQUNBLEdBQUFWLEVBQUEsTUFBQTRDLFNBQUE1QyxNQUFBQSxFQUdBaEcsR0FBQTBHLFNBQUFBLEVBRUFrRixFQUFBa0QsV0FBQTlPLElBQUFBLEVBQ0E0TCxFQUFBa0QsV0FBQXhJLFNBQUF0RyxFQUFBc0csU0FDQXNGLEVBQUFrRCxXQUFBdkksYUFBQUcsRUFBQXdILFNBQ0F0QyxFQUFBa0QsV0FBQXRJLGtCQUFBeEcsRUFBQXdHLG1CQUFBLEVBQ0EsS0FBQSxHQUFBd0ksS0FBQXBELEdBQUFrRCxXQUFBdkksYUFDQXFGLEVBQUFrRCxXQUFBdkksYUFBQXlJLEdBQUFaLFNBQUFhLFNBQUFELEVBR0F0QyxHQUFBLG9CQUFBQyxNQUFBLFdBSUFmLEVBQUFzRCxVQUFBLFNBQUE3QixHQUNBekIsRUFBQWtELFdBQUFuQixNQUFBLEVBQ0EvQixFQUFBa0QsV0FBQTlJLE1BQUF2RSxLQUFBLEtBQ0FtSyxFQUFBa0QsV0FBQTlJLE1BQUFHLFNBQUEsSUFFQSxJQUFBSSxLQUNBLEtBQUEsR0FBQTRILEtBQUF2QyxHQUFBa0QsV0FBQXZJLGFBQ0FBLEVBQUE0SCxHQUFBdkMsRUFBQWtELFdBQUF2SSxhQUFBNEgsR0FBQUMsUUFHQXJMLEdBQUFrRCxXQUFBMkYsRUFBQWtELFdBQUE5TyxJQUFBa0csR0FBQTBGLEVBQUFrRCxXQUFBOU8sSUFBQTBHLFNBQUF0QixRQUFBd0csRUFBQWtELFdBQUEzSSxTQUFBeUYsRUFBQWtELFdBQUE5TyxJQUFBb0csT0FBQUUsU0FBQXNGLEVBQUFrRCxXQUFBeEksU0FBQUMsYUFBQUEsRUFBQUMsa0JBQUFvRixFQUFBa0QsV0FBQXRJLG1CQUFBLFNBQUFSLEdBQ0EsTUFBQUEsSUFDQSxNQUFBQSxFQUFBL0QsV0FDQTJKLEVBQUFrRCxXQUFBOUksTUFBQXZFLEtBQUEsOEJBQ0EsTUFBQXVFLEVBQUEvRCxZQUNBMkosRUFBQWtELFdBQUE5SSxNQUFBRyxTQUFBLDJCQUNBeUYsRUFBQWtELFdBQUEzSSxTQUFBLElBRUF5RixFQUFBa0QsV0FBQTlJLE1BQUF2RSxLQUFBLHFCQUFBbUssRUFBQWtELFdBQUE5TyxJQUFBeUIsS0FBQSw2QkFHQW1LLEVBQUFrRCxXQUFBbkIsTUFBQSxLQUlBL0IsRUFBQWtELFdBQUFuQixNQUFBLEVBQ0EvQixFQUFBa0QsV0FBQTlJLFNBQ0E0RixFQUFBa0QsV0FBQTlPLE9BQ0E0TCxFQUFBa0QsV0FBQXhJLFNBQUEsR0FDQXNGLEVBQUFrRCxXQUFBM0ksU0FBQSxHQUNBeUYsRUFBQWtELFdBQUF2SSxnQkFDQXFGLEVBQUFrRCxXQUFBdEksa0JBQUEsR0FFQTZHLEVBQUFHLGVBQ0FILEVBQUFJLGdCQUVBZixFQUFBLG9CQUFBQyxNQUFBLFlBRUFRLEdBQUEwQixLQUFBLGFBa0JBRixPSTVGQTFPLFFBQUFDLE9BQUEsZUFBQUssV0FBQSxpQkFBQSxTQUFBLFlBQUEsU0FBQSxTQUFBcUwsRUFBQXVCLEVBQUFwSyxHQUNBQSxFQUFBMkIsUUFBQSxXQUFBM0IsRUFBQXdDLGNBQUFqQyxPQUFBNkosRUFBQTBCLEtBQUEsT0FFQWpELEVBQUFnRCxPQUFBLEVBQ0FoRCxFQUFBOEIsS0FBQTNLLEVBQUF3QyxjQUNBcUcsRUFBQXpMLE9BQUE0QyxFQUFBeUMsWUFDQW9HLEVBQUF1RCxlQUFBLEtBQ0F2RCxFQUFBbEQsZ0JBQUEsS0FDQWtELEVBQUF3RCxvQkFBQSxHQUNBeEQsRUFBQWpELFFBQUEsS0FDQWlELEVBQUF5RCxZQUFBLEdBRUF6RCxFQUFBdkUsZUFBQSxXQUNBLEdBQUFELEdBQUF3RSxFQUFBdUQsZUFBQXZELEVBQUF1RCxlQUFBakosR0FBQSxPQUVBbkQsR0FBQXNFLGVBQUFELEVBQUEsU0FBQXBCLEdBQ0EsTUFBQUEsR0FBQTRDLFFBQUE1QyxNQUFBLDZCQUFBQSxHQUFBLFVBSUE0RixFQUFBcEQsT0FBQSxXQUNBa0UsRUFBQSx3QkFBQUMsTUFBQSxRQUNBZixFQUFBMEQsUUFBQXZELGFBQUEsRUFFQWhKLEVBQUF5RixPQUFBLFNBQUF4QyxHQUlBLFFBQUE0RyxLQUNBN0osRUFBQXFDLFFBQUEsU0FBQVksR0FDQSxNQUFBQSxHQUFBMEUsT0FBQW1DLFdBQUFELEVBQUEsTUFFQUYsRUFBQSx3QkFBQUMsTUFBQSxhQUNBZixFQUFBMEQsUUFBQXZELGFBQUEsTUFSQS9GLEdBQUE0QyxRQUFBNUMsTUFBQUEsR0FZQTBFLE9BQUFtQyxXQUFBRCxFQUFBLFFBSUFoQixFQUFBNUgsT0FBQSxXQUNBMEksRUFBQSxnQkFBQUMsTUFBQSxRQUVBZixFQUFBMEQsUUFBQXZELGFBQUEsRUFFQWhKLEVBQUFpQixPQUFBLFNBQUFnQyxHQUNBQSxHQUFBNEMsUUFBQTVDLE1BQUFBLEdBRUEwRSxPQUFBcEUsU0FBQXFFLEtBQUEsa0JBSUE0RSxTQUFBQyxlQUFBLGlCQUFBQyxTQUFBLFNBQUFwRCxHQUNBVCxFQUFBOEQsT0FBQSxXQUNBOUQsRUFBQWxELGdCQUFBMkQsRUFBQTVDLE9BQUFrRyxNQUFBLEdBQ0EvRCxFQUFBd0Qsb0JBQUEvQyxFQUFBNUMsT0FBQWtHLE1BQUEsR0FBQWxPLFFBSUE4TixTQUFBQyxlQUFBLFNBQUFDLFNBQUEsU0FBQXBELEdBQ0FULEVBQUE4RCxPQUFBLFdBQ0E5RCxFQUFBakQsUUFBQTBELEVBQUE1QyxPQUFBa0csTUFBQSxHQUNBL0QsRUFBQXlELFlBQUFoRCxFQUFBNUMsT0FBQWtHLE1BQUEsR0FBQWxPLFFBSUFtSyxFQUFBbkQsZUFBQSxXQUdBLE1BRkFHLFNBQUFDLElBQUEsNEJBRUErQyxFQUFBbEQsZ0JBQ0FrRCxFQUFBakQsWUFFQTVGLEdBQUEwRixlQUFBbUQsRUFBQWxELGdCQUFBa0QsRUFBQWpELFFBQUEsU0FBQTNDLEdBQ0EsTUFBQUEsR0FBQTRDLFFBQUFDLElBQUE3QyxPQUVBMEUsUUFBQW1DLFdBQUFuQyxPQUFBcEUsU0FBQXNKLE9BQUE1QyxLQUFBdEMsT0FBQXBFLFVBQUEsR0FBQSxPQUxBc0MsUUFBQUMsSUFBQSxlQURBRCxRQUFBQyxJQUFBLHdCQVVBOUYsRUFBQTZCLFNBQUEsV0FDQWdILEVBQUFpRSxXQUFBOU0sRUFBQVEsT0FFQVIsRUFBQXVFLFFBQUEsU0FBQXRCLEVBQUF1QixHQUNBdkIsR0FBQTRDLFFBQUE1QyxNQUFBLDBCQUNBNEYsRUFBQXJFLEtBQUFBLEVBRUF4RSxFQUFBb0UsZUFBQSxTQUFBbkIsRUFBQW9CLEdBQ0EsR0FBQXBCLEVBQUEsTUFBQTRDLFNBQUE1QyxNQUFBQSxFQUVBNEYsR0FBQXVELGVBQUEsSUFDQSxLQUFBLEdBQUE3RSxHQUFBLEVBQUFBLEVBQUFzQixFQUFBckUsS0FBQWdELE9BQUFELElBQ0EsR0FBQXNCLEVBQUFyRSxLQUFBK0MsR0FBQXBFLEtBQUFrQixFQUFBLENBQ0F3RSxFQUFBdUQsZUFBQXZELEVBQUFyRSxLQUFBK0MsRUFDQSxPQUlBc0IsRUFBQWdELE9BQUEsV0NoR0EzTyxRQUFBQyxPQUFBLGVBQUFLLFdBQUEsb0JBQUEsU0FBQSxZQUFBLFNBQUEsU0FBQXFMLEVBQUF1QixFQUFBcEssR0FnQkEsUUFBQStNLEdBQUFDLEVBQUFDLEdBQ0EsR0FBQUMsS0FFQUQsSUFBQUEsRUFBQUUsYUFBQUQsRUFBQUQsRUFBQUUsV0FBQUMsSUFBQSxTQUFBQyxHQUFBLE9BQUFDLEVBQUFELEVBQUEsR0FBQUUsRUFBQUYsRUFBQSxNQUVBLEVBQUEsR0FBQUcsR0FBQSxHQUFBQyxVQUFBQyxPQUNBQyxRQUFBbkIsU0FBQW9CLGNBQUEsSUFBQVosRUFBQSxZQUNBYSxTQUFBLE9BQ0FDLE1BQUEsSUFDQUMsT0FBQSxJQUNBQyxJQUFBLEVBQ0FDLElBQUEsSUFDQUMsU0FDQUMsTUFBQSxZQUNBdk8sS0FBQXNOLEVBQ0F4TyxLQUFBLFNBSUEsSUFBQStPLFVBQUFDLE1BQUFVLEtBQUFDLE1BQUFDLE1BQUFkLElBQ0EsR0FBQUMsVUFBQUMsTUFBQVUsS0FBQUcsR0FDQUQsTUFBQWQsRUFDQWdCLFlBQUEsT0FDQUMsV0FBQWhCLFNBQUFpQixTQUFBQyxPQUFBQyxXQUNBakIsUUFBQW5CLFNBQUFDLGVBQUFPLEVBQUEsY0FHQSxHQUFBUyxVQUFBQyxNQUFBbUIsYUFDQVAsTUFBQWQsRUFDQXNCLFVBQUEsU0FBQVosRUFBQVgsRUFBQUQsR0FDQSxHQUFBeUIsR0FBQSx3REFBQWIsRUFBQUMsTUFBQSxZQUNBYSxFQUFBRCxFQUFBYixFQUFBeFAsS0FBQSxLQUFBLEdBQUFpUSxRQUFBckIsR0FBQTJCLFFBQUEsR0FBQSxPQUNBLE9BQUFELE1BSUF4QixFQUFBMEIsU0FHQSxRQUFBQyxHQUFBbkMsRUFBQW9DLEVBQUFDLEdBQ0EsR0FBQUMsTUFBQUMsSUFFQUgsSUFBQUEsRUFBQWpDLGFBQUFtQyxFQUFBRixFQUFBakMsV0FBQUMsSUFBQSxTQUFBQyxHQUFBLE9BQUFDLEVBQUFELEVBQUEsR0FBQUUsRUFBQUYsRUFBQSxPQUNBZ0MsR0FBQUEsRUFBQWxDLGFBQUFvQyxFQUFBRixFQUFBbEMsV0FBQUMsSUFBQSxTQUFBQyxHQUFBLE9BQUFDLEVBQUFELEVBQUEsR0FBQUUsRUFBQUYsRUFBQSxNQUVBLEVBQUEsR0FBQW1DLEdBQUEsR0FBQS9CLFVBQUFDLE9BQ0FDLFFBQUFuQixTQUFBb0IsY0FBQSxJQUFBWixFQUFBLGdCQUNBYSxTQUFBLE9BQ0FDLE1BQUEsSUFDQUMsT0FBQSxJQUNBRyxTQUNBQyxNQUFBLFlBQ0F2TyxLQUFBMFAsRUFDQTVRLEtBQUEsT0FFQXlQLE1BQUEsUUFDQXZPLEtBQUEyUCxFQUNBN1EsS0FBQSxRQUlBLElBQUErTyxVQUFBQyxNQUFBVSxLQUFBQyxNQUFBQyxNQUFBa0IsSUFDQSxHQUFBL0IsVUFBQUMsTUFBQVUsS0FBQUcsR0FDQUQsTUFBQWtCLEVBQ0FoQixZQUFBLE9BQ0FDLFdBQUFoQixTQUFBaUIsU0FBQUMsT0FBQUMsV0FDQWpCLFFBQUFuQixTQUFBQyxlQUFBTyxFQUFBLGtCQUdBLEdBQUFTLFVBQUFDLE1BQUFtQixhQUNBUCxNQUFBa0IsRUFDQVYsVUFBQSxTQUFBWixFQUFBWCxFQUFBRCxHQUNBLEdBQUF5QixHQUFBLHdEQUFBYixFQUFBQyxNQUFBLFlBQ0FhLEVBQUFELEVBQUFiLEVBQUF4UCxLQUFBLEtBQUEsR0FBQWlRLFFBQUFyQixFQUFBLE1BQUEyQixRQUFBLEdBQUEsUUFDQSxPQUFBRCxNQUlBUSxFQUFBTixTQUdBLFFBQUFPLEdBQUF6QyxFQUFBMEMsRUFBQUMsR0FDQSxHQUFBQyxNQUFBQyxJQUVBSCxJQUFBQSxFQUFBdkMsYUFDQXlDLEVBQUFGLEVBQUF2QyxXQUFBQyxJQUFBLFNBQUFDLEdBQUEsT0FBQUMsRUFBQUQsRUFBQSxHQUFBRSxFQUFBRixFQUFBLE9BR0FzQyxHQUFBQSxFQUFBeEMsYUFDQTBDLEVBQUFGLEVBQUF4QyxXQUFBQyxJQUFBLFNBQUFDLEdBQUEsT0FBQUMsRUFBQUQsRUFBQSxHQUFBRSxFQUFBRixFQUFBLE1BR0EsRUFBQSxHQUFBeUMsR0FBQSxHQUFBckMsVUFBQUMsT0FDQUMsUUFBQW5CLFNBQUFvQixjQUFBLElBQUFaLEVBQUEsYUFDQWEsU0FBQSxPQUNBQyxNQUFBLElBQ0FDLE9BQUEsSUFDQUMsSUFBQSxFQUNBQyxJQUFBLFlBQ0FDLFNBQ0FDLE1BQUEsWUFDQXZPLEtBQUFnUSxFQUNBbFIsS0FBQSxTQUVBeVAsTUFBQSxRQUNBdk8sS0FBQWlRLEVBQ0FuUixLQUFBLFVBSUEsSUFBQStPLFVBQUFDLE1BQUFVLEtBQUFDLE1BQUFDLE1BQUF3QixJQUNBLEdBQUFyQyxVQUFBQyxNQUFBVSxLQUFBRyxHQUNBRCxNQUFBd0IsRUFDQXRCLFlBQUEsT0FDQUMsV0FBQWhCLFNBQUFpQixTQUFBQyxPQUFBQyxXQUNBakIsUUFBQW5CLFNBQUFDLGVBQUFPLEVBQUEsZUFHQSxHQUFBUyxVQUFBQyxNQUFBbUIsYUFDQVAsTUFBQXdCLEVBQ0FoQixVQUFBLFNBQUFaLEVBQUFYLEVBQUFELEdBQ0EsR0FBQXlCLEdBQUEsd0RBQUFiLEVBQUFDLE1BQUEsWUFDQWEsRUFBQUQsRUFBQWIsRUFBQXhQLEtBQUEsS0FBQSxHQUFBaVEsUUFBQXJCLEVBQUEsWUFBQTJCLFFBQUEsR0FBQSxRQUNBLE9BQUFELE1BSUEsR0FBQXZCLFVBQUFDLE1BQUFxQyxRQUNBekIsTUFBQXdCLEVBQ0FuQyxRQUFBbkIsU0FBQUMsZUFBQU8sRUFBQSxnQkFHQThDLEVBQUFaLFNBbkpBbFAsRUFBQXdDLGNBQUFqQyxPQUFBNkosRUFBQTBCLEtBQUEsS0FFQWpELEVBQUFtRSxVQUFBLEtBRUEsSUFBQWdELEdBQUEsd1ZBS0FDLEVBQUEsbUVBQ0FDLEVBQUEsbUVBRUFDLEVBQUEsZ0VBQ0FDLEVBQUEsK0RBeUlBdkgsR0FBQXdILGFBQUEsV0FDQSxHQUFBckQsR0FBQW5FLEVBQUFtRSxVQUNBeEcsRUFBQSxVQUNBLFFBQUF3RyxHQUNBLElBQUEsTUFBQXhHLEVBQUEsVUFBQSxNQUNBLEtBQUEsUUFBQUEsRUFBQSxTQUFBLE1BQ0EsS0FBQSxPQUFBQSxFQUFBLFFBQUEsTUFDQSxTQUFBWCxRQUFBQyxJQUFBLG1CQUdBOUYsRUFBQXNHLFFBQUEwSixFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBNUosRUFBQSxTQUFBdkQsRUFBQXJELEdBQ0EsTUFBQXFELEdBQUE0QyxRQUFBQyxJQUFBN0MsSUFFQThKLEVBQUFDLEVBQUFwTixFQUFBLElBRUF1UCxFQUFBbkMsRUFBQXBOLEVBQUEsR0FBQUEsRUFBQSxRQUVBNlAsR0FBQXpDLEVBQUFwTixFQUFBLEdBQUFBLEVBQUEsUUFJQUksRUFBQTJCLFFBQUFrSCxFQUFBd0gsaUJDOUtBblQsUUFBQUMsT0FBQSxlQUFBSyxXQUFBLHNCQUFBLFNBQUEsU0FBQSxTQUFBcUwsRUFBQTdJLEdBQ0E2SSxFQUFBeUgsaUJBQ0F6SCxFQUFBaUUsV0FBQSxLQUNBakUsRUFBQWdELE9BQUEsRUFFQWhELEVBQUEwSCxtQkFBQSxTQUFBelEsRUFBQXdKLEdBQ0F4SixFQUFBMFEsT0FBQSxFQUVBeFEsRUFBQXVGLG9CQUFBekYsRUFBQXFELEdBQUEsU0FBQUYsR0FDQSxNQUFBQSxHQUFBNEMsUUFBQTVDLE1BQUFBLElBQ0EwRyxFQUFBTCxFQUFBNUMsUUFBQStKLFNBQUEsaUJBQ0EzUSxFQUFBMFEsT0FBQSxPQUlBeFEsRUFBQTJCLFFBQUEsV0FDQWtILEVBQUFpRSxXQUFBOU0sRUFBQVEsT0FFQVIsRUFBQXFGLGdCQUFBLFNBQUFwQyxFQUFBcU4sR0FDQSxNQUFBck4sR0FBQTRDLFFBQUE1QyxNQUFBQSxJQUVBNEYsRUFBQXlILGNBQUFBLE9BQ0F6SCxFQUFBZ0QsT0FBQSxXQ3RCQTNPLFFBQUFDLE9BQUEsZUFBQUssV0FBQSxtQkFBQSxTQUFBLFlBQUEsU0FBQSxTQUFBcUwsRUFBQXVCLEVBQUFwSyxHQTJHQSxRQUFBNEwsS0FDQTVMLEVBQUFvRixVQUFBLFNBQUFuQyxFQUFBbUUsR0FDQSxNQUFBbkUsR0FBQTRDLFFBQUE1QyxNQUFBLDhCQUFBQSxJQUVBNEYsRUFBQTZILE1BQUF0SixFQUFBc0osV0FDQTdILEVBQUFnRCxPQUFBLE1BL0dBN0wsRUFBQTJCLFFBQUEsV0FBQTNCLEVBQUF3QyxjQUFBakMsT0FBQTZKLEVBQUEwQixLQUFBLE9BRUFqRCxFQUFBZ0QsT0FBQSxFQUNBaEQsRUFBQTZILFNBQ0E3SCxFQUFBOUcsU0FBQS9CLEVBQUF3QyxjQUVBcUcsRUFBQThILFlBQ0EvRixNQUFBLEVBQ0EzSCxTQUNBbEIsWUFDQTFCLFNBQUEsR0FDQStDLFNBQUEsSUFHQXlGLEVBQUErSCxTQUNBaEcsTUFBQSxFQUNBaUcsY0FBQSxFQUNBNU4sU0FDQTVDLFNBQUEsR0FDQUMsTUFBQSxJQUdBdUksRUFBQWlJLEtBQUEsU0FBQW5HLEdBQ0EsTUFBQUEsR0FBQXRLLFdBQUFMLEVBQUF3QyxjQUFBbkMsVUFHQXdJLEVBQUFrSSxRQUFBLFNBQUFwRyxHQUNBLFFBQUFBLEVBQUFwSyxPQUdBc0ksRUFBQW1JLFlBQUEsU0FBQXJHLEdBQ0EzSyxFQUFBZ0YsU0FBQTJGLEVBQUF0SyxVQUFBc0ssRUFBQXBLLE1BQUEsU0FBQTBDLEdBQ0EsTUFBQUEsR0FBQTRDLFFBQUE1QyxNQUFBQSxRQUVBMEgsRUFBQXBLLE9BQUFvSyxFQUFBcEssVUFJQXNJLEVBQUFvSSxNQUFBLFdBQ0FwSSxFQUFBK0gsUUFBQUMsYUFBQSxHQUNBaEksRUFBQStILFFBQUEzTixNQUFBNUMsU0FBQSxLQUNBd0ksRUFBQStILFFBQUEzTixNQUFBM0MsTUFBQSxLQUVBTixFQUFBNEcsV0FBQWlDLEVBQUErSCxRQUFBdlEsU0FBQXdJLEVBQUErSCxRQUFBdFEsTUFBQSxTQUFBMkMsR0FDQSxHQUFBQSxHQUFBLE1BQUFBLEVBQUEvRCxXQUVBLE1BREEySixHQUFBK0gsUUFBQUMsYUFBQWhJLEVBQUF4SSxTQUNBd0YsUUFBQTVDLE1BQUEseUJBRUEsSUFBQUEsR0FBQSxNQUFBQSxFQUFBL0QsV0FBQSxDQUNBLEdBQUEsS0FBQStELEVBQUE5RCxRQUFBa0ssUUFBQSxTQUdBLE1BRkFSLEdBQUErSCxRQUFBM04sTUFBQTNDLE1BQUEscUJBQ0F1SSxFQUFBK0gsUUFBQXRRLE1BQUEsR0FHQSxJQUFBLEtBQUEyQyxFQUFBOUQsUUFBQWtLLFFBQUEsWUFHQSxNQUZBUixHQUFBK0gsUUFBQTNOLE1BQUE1QyxTQUFBLHdCQUNBd0ksRUFBQStILFFBQUF2USxTQUFBLFFBS0E0QyxJQUFBNEMsUUFBQTVDLE1BQUEseUJBQUFBLEdBRUEySSxJQUNBakMsRUFBQSxpQkFBQUMsTUFBQSxXQUlBZixFQUFBcUksZUFBQSxTQUFBblAsR0FDQThHLEVBQUE4SCxXQUFBMU4sTUFBQTVDLFNBQUEsS0FDQXdJLEVBQUE4SCxXQUFBMU4sTUFBQUcsU0FBQSxLQUNBeUYsRUFBQThILFdBQUE1TyxTQUFBQSxFQUNBNEgsRUFBQSxvQkFBQUMsTUFBQSxTQUdBZixFQUFBc0ksYUFBQSxTQUFBN0csR0FJQSxNQUhBekIsR0FBQThILFdBQUExTixNQUFBNUMsU0FBQSxLQUNBd0ksRUFBQThILFdBQUExTixNQUFBRyxTQUFBLEtBRUF5RixFQUFBOEgsV0FBQXRRLFdBQUF3SSxFQUFBOEgsV0FBQTVPLFNBQUExQixVQUNBd0ksRUFBQThILFdBQUExTixNQUFBNUMsU0FBQSwrQkFDQXdJLEVBQUE4SCxXQUFBdFEsU0FBQSxTQUlBTCxHQUFBNkcsV0FBQWdDLEVBQUE4SCxXQUFBdFEsU0FBQXdJLEVBQUE4SCxXQUFBdk4sU0FBQSxTQUFBSCxHQUNBLE1BQUFBLElBQUEsTUFBQUEsRUFBQS9ELFlBQ0EySixFQUFBOEgsV0FBQTFOLE1BQUFHLFNBQUEsMEJBQ0F5RixFQUFBOEgsV0FBQXZOLFNBQUEsS0FHQUgsRUFBQTRDLFFBQUE1QyxNQUFBLHlCQUFBQSxJQUVBNEYsRUFBQThILFdBQUE1TyxZQUNBOEcsRUFBQThILFdBQUF0USxTQUFBLEdBQ0F3SSxFQUFBOEgsV0FBQXZOLFNBQUEsR0FFQWtILEVBQUFHLGVBQ0FILEVBQUFJLGdCQUVBZixFQUFBLG9CQUFBQyxNQUFBLFlBRUFnQyxTQWFBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyogZ2xvYmFsIGFuZ3VsYXI6ZmFsc2UgKi9cblxuLy8gY3JlYXRlIG1haW4gYXBwbGljYXRpb24gbW9kdWxlXG52YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ0FwcGxpY2F0aW9uJywgWyduZ1JvdXRlJywgJ25nQW5pbWF0ZScsICdhbmd1bGFyLW1kNSddKTtcblxuLy8gc2V0dXAgYWxsIG1ham9yIGFwcGxpY2F0aW9uIHJvdXRlc1xuYXBwLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsIHtcbiAgICAgICAgcmVkaXJlY3RUbzogJy9hcHBzJ1xuICAgIH0pLndoZW4oJy91c2VycycsIHtcbiAgICAgICAgY29udHJvbGxlcjogJ1VzZXJzQ29udHJvbGxlcicsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvdXNlcnMuaHRtbCdcbiAgICB9KS53aGVuKCcvYXBwc3RvcmUnLCB7XG4gICAgICAgIGNvbnRyb2xsZXI6ICdBcHBTdG9yZUNvbnRyb2xsZXInLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2FwcHN0b3JlLmh0bWwnXG4gICAgfSkud2hlbignL2FwcHMnLCB7XG4gICAgICAgIGNvbnRyb2xsZXI6ICdBcHBzQ29udHJvbGxlcicsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvYXBwcy5odG1sJ1xuICAgIH0pLndoZW4oJy9kbnMnLCB7XG4gICAgICAgIGNvbnRyb2xsZXI6ICdEbnNDb250cm9sbGVyJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kbnMuaHRtbCdcbiAgICB9KS53aGVuKCcvYWNjb3VudCcsIHtcbiAgICAgICAgY29udHJvbGxlcjogJ0FjY291bnRDb250cm9sbGVyJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9hY2NvdW50Lmh0bWwnXG4gICAgfSkud2hlbignL2dyYXBocycsIHtcbiAgICAgICAgY29udHJvbGxlcjogJ0dyYXBoc0NvbnRyb2xsZXInLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2dyYXBocy5odG1sJ1xuICAgIH0pLndoZW4oJy9zZWN1cml0eScsIHtcbiAgICAgICAgY29udHJvbGxlcjogJ1NlY3VyaXR5Q29udHJvbGxlcicsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3Mvc2VjdXJpdHkuaHRtbCdcbiAgICB9KS5vdGhlcndpc2UoeyByZWRpcmVjdFRvOiAnLyd9KTtcbn1dKTtcblxuYXBwLmZpbHRlcignaW5zdGFsbGF0aW9uQWN0aXZlJywgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIGlmIChpbnB1dCA9PT0gJ2Vycm9yJykgcmV0dXJuIGZhbHNlO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdpbnN0YWxsZWQnKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG59KTtcblxuYXBwLmZpbHRlcignaW5zdGFsbGF0aW9uU3RhdGVMYWJlbCcsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdlcnJvcicpIHJldHVybiAnRXJyb3InO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdzdWJkb21haW5fZXJyb3InKSByZXR1cm4gJ0Vycm9yJztcbiAgICAgICAgaWYgKGlucHV0ID09PSAnaW5zdGFsbGVkJykgcmV0dXJuICdJbnN0YWxsZWQnO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdkb3dubG9hZGluZ19pbWFnZScpIHJldHVybiAnRG93bmxvYWRpbmcnO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdwZW5kaW5nX2luc3RhbGwnKSByZXR1cm4gJ0luc3RhbGxpbmcnO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdwZW5kaW5nX3VuaW5zdGFsbCcpIHJldHVybiAnVW5pbnN0YWxsaW5nJztcbiAgICAgICAgaWYgKGlucHV0ID09PSAnY3JlYXRpbmdfY29udGFpbmVyJykgcmV0dXJuICdDb250YWluZXInO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdkb3dubG9hZGluZ19tYW5pZmVzdCcpIHJldHVybiAnTWFuaWZlc3QnO1xuICAgICAgICBpZiAoaW5wdXQgPT09ICdjcmVhdGluZ192b2x1bWUnKSByZXR1cm4gJ1ZvbHVtZSc7XG4gICAgICAgIGlmIChpbnB1dCA9PT0gJ3JlZ2lzdGVyaW5nX3N1YmRvbWFpbicpIHJldHVybiAnU3ViZG9tYWluJztcbiAgICAgICAgaWYgKGlucHV0ID09PSAnYWxsb2NhdGVkX29hdXRoX2NyZWRlbnRpYWxzJykgcmV0dXJuICdPQXV0aCc7XG5cbiAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH07XG59KTtcblxuYXBwLmZpbHRlcignYWNjZXNzUmVzdHJpY3Rpb25MYWJlbCcsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICBpZiAoaW5wdXQgPT09ICcnKSByZXR1cm4gJ3B1YmxpYyc7XG4gICAgICAgIGlmIChpbnB1dCA9PT0gJ3JvbGVVc2VyJykgcmV0dXJuICdwcml2YXRlJztcbiAgICAgICAgaWYgKGlucHV0ID09PSAncm9sZUFkbWluJykgcmV0dXJuICdwcml2YXRlIChBZG1pbnMgb25seSknO1xuXG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9O1xufSk7XG5cbi8vIGN1c3RvbSBkaXJlY3RpdmUgZm9yIGR5bmFtaWMgbmFtZXMgaW4gZm9ybXNcbi8vIFNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIzNjE2NTc4L2lzc3VlLXJlZ2lzdGVyaW5nLWZvcm0tY29udHJvbC13aXRoLWludGVycG9sYXRlZC1uYW1lI2Fuc3dlci0yMzYxNzQwMVxuYXBwLmRpcmVjdGl2ZSgnbGF0ZXJOYW1lJywgZnVuY3Rpb24gKCkgeyAgICAgICAgICAgICAgICAgICAvLyAoMilcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICByZXF1aXJlOiBbJz9uZ01vZGVsJywgJ14/Zm9ybSddLCAgICAgICAgICAgICAgICAgICAvLyAoMylcbiAgICAgICAgbGluazogZnVuY3Rpb24gcG9zdExpbmsoc2NvcGUsIGVsZW0sIGF0dHJzLCBjdHJscykge1xuICAgICAgICAgICAgYXR0cnMuJHNldCgnbmFtZScsIGF0dHJzLmxhdGVyTmFtZSk7XG5cbiAgICAgICAgICAgIHZhciBtb2RlbEN0cmwgPSBjdHJsc1swXTsgICAgICAgICAgICAgICAgICAgICAgLy8gKDMpXG4gICAgICAgICAgICB2YXIgZm9ybUN0cmwgID0gY3RybHNbMV07ICAgICAgICAgICAgICAgICAgICAgIC8vICgzKVxuICAgICAgICAgICAgaWYgKG1vZGVsQ3RybCAmJiBmb3JtQ3RybCkge1xuICAgICAgICAgICAgICAgIG1vZGVsQ3RybC4kbmFtZSA9IGF0dHJzLm5hbWU7ICAgICAgICAgICAgICAvLyAoNClcbiAgICAgICAgICAgICAgICBmb3JtQ3RybC4kYWRkQ29udHJvbChtb2RlbEN0cmwpOyAgICAgICAgICAgLy8gKDIpXG4gICAgICAgICAgICAgICAgc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9ybUN0cmwuJHJlbW92ZUNvbnRyb2wobW9kZWxDdHJsKTsgICAgLy8gKDUpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufSk7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKiBnbG9iYWwgYW5ndWxhciAqL1xuLyogZ2xvYmFsIEV2ZW50U291cmNlICovXG5cbmFuZ3VsYXIubW9kdWxlKCdBcHBsaWNhdGlvbicpLnNlcnZpY2UoJ0NsaWVudCcsIFsnJGh0dHAnLCAnbWQ1JywgZnVuY3Rpb24gKCRodHRwLCBtZDUpIHtcbiAgICB2YXIgY2xpZW50ID0gbnVsbDtcblxuICAgIGZ1bmN0aW9uIENsaWVudEVycm9yKHN0YXR1c0NvZGUsIG1lc3NhZ2UpIHtcbiAgICAgICAgRXJyb3IuY2FsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgICAgICBpZiAodHlwZW9mIG1lc3NhZ2UgPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeShtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IDQwMSkgcmV0dXJuIGNsaWVudC5sb2dvdXQoKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBDbGllbnQoKSB7XG4gICAgICAgIHRoaXMuX3JlYWR5ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2NvbmZpZ0xpc3RlbmVyID0gW107XG4gICAgICAgIHRoaXMuX3JlYWR5TGlzdGVuZXIgPSBbXTtcbiAgICAgICAgdGhpcy5fdXNlckluZm8gPSB7XG4gICAgICAgICAgICB1c2VybmFtZTogbnVsbCxcbiAgICAgICAgICAgIGVtYWlsOiBudWxsLFxuICAgICAgICAgICAgYWRtaW46IGZhbHNlXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX3Rva2VuID0gbnVsbDtcbiAgICAgICAgdGhpcy5fY2xpZW50SWQgPSAnY2lkLXdlYmFkbWluJztcbiAgICAgICAgdGhpcy5fY2xpZW50U2VjcmV0ID0gJ3VudXNlZCc7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHtcbiAgICAgICAgICAgIGFwaVNlcnZlck9yaWdpbjogbnVsbCxcbiAgICAgICAgICAgIHdlYlNlcnZlck9yaWdpbjogbnVsbCxcbiAgICAgICAgICAgIGZxZG46IG51bGwsXG4gICAgICAgICAgICBpcDogbnVsbCxcbiAgICAgICAgICAgIHJldmlzaW9uOiBudWxsLFxuICAgICAgICAgICAgdXBkYXRlOiBudWxsLFxuICAgICAgICAgICAgaXNEZXY6IGZhbHNlLFxuICAgICAgICAgICAgcHJvZ3Jlc3M6IHt9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2luc3RhbGxlZEFwcHMgPSBbXTtcblxuICAgICAgICB0aGlzLnNldFRva2VuKGxvY2FsU3RvcmFnZS50b2tlbik7XG4gICAgfVxuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5zZXRSZWFkeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3JlYWR5KSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5fcmVhZHkgPSB0cnVlO1xuICAgICAgICB0aGlzLl9yZWFkeUxpc3RlbmVyLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5vblJlYWR5ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0aGlzLl9yZWFkeSkgY2FsbGJhY2soKTtcbiAgICAgICAgdGhpcy5fcmVhZHlMaXN0ZW5lci5wdXNoKGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5vbkNvbmZpZyA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9jb25maWdMaXN0ZW5lci5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgY2FsbGJhY2sodGhpcy5fY29uZmlnKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5zZXRVc2VySW5mbyA9IGZ1bmN0aW9uICh1c2VySW5mbykge1xuICAgICAgICAvLyBJbiBvcmRlciB0byBrZWVwIHRoZSBhbmd1bGFyIGJpbmRpbmdzIGFsaXZlLCBzZXQgZWFjaCBwcm9wZXJ0eSBpbmRpdmlkdWFsbHlcbiAgICAgICAgdGhpcy5fdXNlckluZm8udXNlcm5hbWUgPSB1c2VySW5mby51c2VybmFtZTtcbiAgICAgICAgdGhpcy5fdXNlckluZm8uZW1haWwgPSB1c2VySW5mby5lbWFpbDtcbiAgICAgICAgdGhpcy5fdXNlckluZm8uYWRtaW4gPSAhIXVzZXJJbmZvLmFkbWluO1xuICAgICAgICB0aGlzLl91c2VySW5mby5ncmF2YXRhciA9ICdodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLycgKyBtZDUuY3JlYXRlSGFzaCh1c2VySW5mby5lbWFpbC50b0xvd2VyQ2FzZSgpKSArICcuanBnP3M9MjQmZD1tbSc7XG4gICAgICAgIHRoaXMuX3VzZXJJbmZvLmdyYXZhdGFySHVnZSA9ICdodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLycgKyBtZDUuY3JlYXRlSGFzaCh1c2VySW5mby5lbWFpbC50b0xvd2VyQ2FzZSgpKSArICcuanBnP3M9MTI4JmQ9bW0nO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLnNldENvbmZpZyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgLy8gSW4gb3JkZXIgdG8ga2VlcCB0aGUgYW5ndWxhciBiaW5kaW5ncyBhbGl2ZSwgc2V0IGVhY2ggcHJvcGVydHkgaW5kaXZpZHVhbGx5IChUT0RPOiBqdXN0IHVzZSBhbmd1bGFyLmNvcHkgPylcbiAgICAgICAgdGhpcy5fY29uZmlnLmFwaVNlcnZlck9yaWdpbiA9IGNvbmZpZy5hcGlTZXJ2ZXJPcmlnaW47XG4gICAgICAgIHRoaXMuX2NvbmZpZy53ZWJTZXJ2ZXJPcmlnaW4gPSBjb25maWcud2ViU2VydmVyT3JpZ2luO1xuICAgICAgICB0aGlzLl9jb25maWcudmVyc2lvbiA9IGNvbmZpZy52ZXJzaW9uO1xuICAgICAgICB0aGlzLl9jb25maWcuZnFkbiA9IGNvbmZpZy5mcWRuO1xuICAgICAgICB0aGlzLl9jb25maWcuaXAgPSBjb25maWcuaXA7XG4gICAgICAgIHRoaXMuX2NvbmZpZy5yZXZpc2lvbiA9IGNvbmZpZy5yZXZpc2lvbjtcbiAgICAgICAgdGhpcy5fY29uZmlnLnVwZGF0ZSA9IGNvbmZpZy51cGRhdGU7XG4gICAgICAgIHRoaXMuX2NvbmZpZy5pc0RldiA9IGNvbmZpZy5pc0RldjtcbiAgICAgICAgdGhpcy5fY29uZmlnLnByb2dyZXNzID0gY29uZmlnLnByb2dyZXNzO1xuXG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgICAgICB0aGlzLl9jb25maWdMaXN0ZW5lci5mb3JFYWNoKGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgY2FsbGJhY2sodGhhdC5fY29uZmlnKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuZ2V0SW5zdGFsbGVkQXBwcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbGxlZEFwcHM7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuZ2V0VXNlckluZm8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl91c2VySW5mbztcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5nZXRDb25maWcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWc7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuc2V0VG9rZW4gPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAgICAgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb24uQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJyArIHRva2VuO1xuICAgICAgICBpZiAoIXRva2VuKSBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTtcbiAgICAgICAgZWxzZSBsb2NhbFN0b3JhZ2UudG9rZW4gPSB0b2tlbjtcbiAgICAgICAgdGhpcy5fdG9rZW4gPSB0b2tlbjtcbiAgICB9O1xuXG4gICAgLypcbiAgICAgKiBSZXN0IEFQSSB3cmFwcGVyc1xuICAgICAqL1xuICAgIENsaWVudC5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICRodHRwLmdldCgnL2FwaS92MS9jbG91ZHJvbi9jb25maWcnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUudXNlckluZm8gPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxL3Byb2ZpbGUnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuaW5zdGFsbEFwcCA9IGZ1bmN0aW9uIChpZCwgdmVyc2lvbiwgcGFzc3dvcmQsIHRpdGxlLCBjb25maWcsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgdmFyIGRhdGEgPSB7IGFwcFN0b3JlSWQ6IGlkLCB2ZXJzaW9uOiB2ZXJzaW9uLCBwYXNzd29yZDogcGFzc3dvcmQsIGxvY2F0aW9uOiBjb25maWcubG9jYXRpb24sIHBvcnRCaW5kaW5nczogY29uZmlnLnBvcnRCaW5kaW5ncywgYWNjZXNzUmVzdHJpY3Rpb246IGNvbmZpZy5hY2Nlc3NSZXN0cmljdGlvbiB9O1xuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL2FwcHMvaW5zdGFsbCcsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcblxuICAgICAgICAgICAgLy8gcHV0IG5ldyBhcHAgd2l0aCBhbWVuZGVkIHRpdGxlIGluIGNhY2hlXG4gICAgICAgICAgICBkYXRhLm1hbmlmZXN0ID0geyB0aXRsZTogdGl0bGUgfTtcbiAgICAgICAgICAgIHRoYXQuX2luc3RhbGxlZEFwcHMucHVzaChkYXRhKTtcblxuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZGF0YS5pZCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS51bmluc3RhbGxBcHAgPSBmdW5jdGlvbiAoYXBwSWQsIHBhc3N3b3JkLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgZGF0YSA9IHsgcGFzc3dvcmQ6IHBhc3N3b3JkIH07XG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvdjEvYXBwcy8nICsgYXBwSWQgKyAnL3VuaW5zdGFsbCcsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5jb25maWd1cmVBcHAgPSBmdW5jdGlvbiAoaWQsIHBhc3N3b3JkLCBjb25maWcsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkYXRhID0geyBhcHBJZDogaWQsIHBhc3N3b3JkOiBwYXNzd29yZCwgbG9jYXRpb246IGNvbmZpZy5sb2NhdGlvbiwgcG9ydEJpbmRpbmdzOiBjb25maWcucG9ydEJpbmRpbmdzLCBhY2Nlc3NSZXN0cmljdGlvbjogY29uZmlnLmFjY2Vzc1Jlc3RyaWN0aW9uIH07XG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvdjEvYXBwcy8nICsgaWQgKyAnL2NvbmZpZ3VyZScsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS51cGRhdGVBcHAgPSBmdW5jdGlvbiAoaWQsIHZlcnNpb24sIHBhc3N3b3JkLCBjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL2FwcHMvJyArIGlkICsgJy91cGRhdGUnLCB7IHZlcnNpb246IHZlcnNpb24sIHBhc3N3b3JkOiBwYXNzd29yZCB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwMikgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuc3RhcnRBcHAgPSBmdW5jdGlvbiAoaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkYXRhID0geyB9O1xuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL2FwcHMvJyArIGlkICsgJy9zdGFydCcsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5zdG9wQXBwID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgZGF0YSA9IHsgfTtcbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS92MS9hcHBzLycgKyBpZCArICcvc3RvcCcsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS52ZXJzaW9uID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICRodHRwLmdldCgnL2FwaS92MS9jbG91ZHJvbi9zdGF0dXMnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuaXNTZXJ2ZXJGaXJzdFRpbWUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxL2Nsb3Vkcm9uL3N0YXR1cycpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDAgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgIWRhdGEuYWN0aXZhdGVkKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLmdldE5ha2VkRG9tYWluID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICRodHRwLmdldCgnL2FwaS92MS9zZXR0aW5ncy9uYWtlZF9kb21haW4nKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDAgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZGF0YS5hcHBpZCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5zZXROYWtlZERvbWFpbiA9IGZ1bmN0aW9uIChhcHBpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS92MS9zZXR0aW5ncy9uYWtlZF9kb21haW4nLCB7IGFwcGlkOiBhcHBpZCB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwNCkgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuZ2V0QXBwcyA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdjEvYXBwcycpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEuYXBwcyk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5nZXRBcHAgPSBmdW5jdGlvbiAoYXBwSWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBhcHBGb3VuZCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2luc3RhbGxlZEFwcHMuc29tZShmdW5jdGlvbiAoYXBwKSB7XG4gICAgICAgICAgICBpZiAoYXBwLmlkID09PSBhcHBJZCkge1xuICAgICAgICAgICAgICAgIGFwcEZvdW5kID0gYXBwO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChhcHBGb3VuZCkgcmV0dXJuIGNhbGxiYWNrKG51bGwsIGFwcEZvdW5kKTtcbiAgICAgICAgZWxzZSByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCdBcHAgbm90IGZvdW5kJykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLmdldEFwcExvZ1N0cmVhbSA9IGZ1bmN0aW9uIChhcHBJZCkge1xuICAgICAgICB2YXIgc291cmNlID0gbmV3IEV2ZW50U291cmNlKCcvYXBpL3YxL2FwcHMvJyArIGFwcElkICsgJy9sb2dzdHJlYW0nKTtcbiAgICAgICAgcmV0dXJuIHNvdXJjZTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5nZXRBcHBMb2dVcmwgPSBmdW5jdGlvbiAoYXBwSWQpIHtcbiAgICAgICAgcmV0dXJuICcvYXBpL3YxL2FwcHMvJyArIGFwcElkICsgJy9sb2dzP2FjY2Vzc190b2tlbj0nICsgdGhpcy5fdG9rZW47XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuc2V0QWRtaW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIGFkbWluLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgcGF5bG9hZCA9IHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgIGFkbWluOiBhZG1pblxuICAgICAgICB9O1xuXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvdjEvdXNlcnMvJyArIHVzZXJuYW1lICsgJy9hZG1pbicsIHBheWxvYWQpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjA0KSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5jcmVhdGVBZG1pbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQsIGVtYWlsLCBzZXR1cFRva2VuLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgcGF5bG9hZCA9IHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCxcbiAgICAgICAgICAgIGVtYWlsOiBlbWFpbFxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL2Nsb3Vkcm9uL2FjdGl2YXRlP3NldHVwVG9rZW49JyArIHNldHVwVG9rZW4sIHBheWxvYWQpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDEgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuXG4gICAgICAgICAgICB0aGF0LnNldFRva2VuKGRhdGEudG9rZW4pO1xuICAgICAgICAgICAgdGhhdC5zZXRVc2VySW5mbyh7IHVzZXJuYW1lOiB1c2VybmFtZSwgZW1haWw6IGVtYWlsLCBhZG1pbjogdHJ1ZSB9KTtcblxuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZGF0YS5hY3RpdmF0ZWQpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUubGlzdFVzZXJzID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICRodHRwLmdldCgnL2FwaS92MS91c2VycycpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDAgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZGF0YSk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5nZXRPQXV0aENsaWVudHMgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3YxL29hdXRoL2NsaWVudHMnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEuY2xpZW50cyk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5kZWxUb2tlbnNCeUNsaWVudElkID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5kZWxldGUoJy9hcGkvdjEvb2F1dGgvY2xpZW50cy8nICsgaWQgKyAnL3Rva2VucycpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDQpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdjEvY2xvdWRyb24vdXBkYXRlJykuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwMiB8fCB0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCBkYXRhKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLnJlYm9vdCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvdjEvY2xvdWRyb24vcmVib290Jykuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwMiB8fCB0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCBkYXRhKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLmJhY2t1cCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL2Nsb3Vkcm9uL2JhY2t1cHMnKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAyIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuc2V0Q2VydGlmaWNhdGUgPSBmdW5jdGlvbiAoY2VydGlmaWNhdGVGaWxlLCBrZXlGaWxlLCBjYWxsYmFjaykge1xuICAgICAgICBjb25zb2xlLmxvZygnd2lsbCBzZXQgY2VydGlmaWNhdGUnKTtcblxuICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgZmQuYXBwZW5kKCdjZXJ0aWZpY2F0ZScsIGNlcnRpZmljYXRlRmlsZSk7XG4gICAgICAgIGZkLmFwcGVuZCgna2V5Jywga2V5RmlsZSk7XG5cbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS92MS9jbG91ZHJvbi9jZXJ0aWZpY2F0ZScsIGZkLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHlcbiAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwMikgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuZ3JhcGhzID0gZnVuY3Rpb24gKHRhcmdldHMsIGZyb20sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBjb25maWcgPSB7XG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHRhcmdldHMsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICAgICAgZnJvbTogZnJvbVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgICRodHRwLmdldCgnL2FwaS92MS9jbG91ZHJvbi9ncmFwaHMnLCBjb25maWcpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8IHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG5ldyBDbGllbnRFcnJvcihzdGF0dXMsIGRhdGEpKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAgICB9KS5lcnJvcihkZWZhdWx0RXJyb3JIYW5kbGVyKGNhbGxiYWNrKSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuY3JlYXRlVXNlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgZW1haWwsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgZW1haWw6IGVtYWlsXG4gICAgICAgIH07XG5cbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS92MS91c2VycycsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDEgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSByZXR1cm4gY2FsbGJhY2sobmV3IENsaWVudEVycm9yKHN0YXR1cywgZGF0YSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZGF0YSk7XG4gICAgICAgIH0pLmVycm9yKGRlZmF1bHRFcnJvckhhbmRsZXIoY2FsbGJhY2spKTtcbiAgICB9O1xuXG4gICAgQ2xpZW50LnByb3RvdHlwZS5yZW1vdmVVc2VyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmRcbiAgICAgICAgfTtcblxuICAgICAgICAkaHR0cCh7IG1ldGhvZDogJ0RFTEVURScsIHVybDogJy9hcGkvdjEvdXNlcnMvJyArIHVzZXJuYW1lLCBkYXRhOiBkYXRhLCBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfX0pLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDQpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLmNoYW5nZVBhc3N3b3JkID0gZnVuY3Rpb24gKGN1cnJlbnRQYXNzd29yZCwgbmV3UGFzc3dvcmQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICAgICAgcGFzc3dvcmQ6IGN1cnJlbnRQYXNzd29yZCxcbiAgICAgICAgICAgIG5ld1Bhc3N3b3JkOiBuZXdQYXNzd29yZFxuICAgICAgICB9O1xuXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvdjEvdXNlcnMvJyArIHRoaXMuX3VzZXJJbmZvLnVzZXJuYW1lICsgJy9wYXNzd29yZCcsIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdHVzICE9PSAyMDQpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCBkYXRhKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLnJlZnJlc2hDb25maWcgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuXG4gICAgICAgIGNhbGxiYWNrID0gdHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nID8gY2FsbGJhY2sgOiBmdW5jdGlvbiAoKSB7fTtcblxuICAgICAgICB0aGlzLmNvbmZpZyhmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gY2FsbGJhY2soZXJyb3IpO1xuXG4gICAgICAgICAgICB0aGF0LnNldENvbmZpZyhyZXN1bHQpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBDbGllbnQucHJvdG90eXBlLnJlZnJlc2hJbnN0YWxsZWRBcHBzID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgICAgICBjYWxsYmFjayA9IHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGxiYWNrIDogZnVuY3Rpb24gKCkge307XG5cbiAgICAgICAgdGhpcy5nZXRBcHBzKGZ1bmN0aW9uIChlcnJvciwgYXBwcykge1xuICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gY2FsbGJhY2soZXJyb3IpO1xuXG4gICAgICAgICAgICAvLyBpbnNlcnQgb3IgdXBkYXRlIG5ldyBhcHBzXG4gICAgICAgICAgICBhcHBzLmZvckVhY2goZnVuY3Rpb24gKGFwcCkge1xuICAgICAgICAgICAgICAgIHZhciBmb3VuZCA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGF0Ll9pbnN0YWxsZWRBcHBzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGF0Ll9pbnN0YWxsZWRBcHBzW2ldLmlkID09PSBhcHAuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGZvdW5kICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBhbmd1bGFyLmNvcHkoYXBwLCB0aGF0Ll9pbnN0YWxsZWRBcHBzW2ZvdW5kXSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5faW5zdGFsbGVkQXBwcy5wdXNoKGFwcCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIGZpbHRlciBvdXQgb2xkIGVudHJpZXMsIGdvaW5nIGJhY2t3YXJkcyB0byBhbGxvdyBzcGxpY2luZ1xuICAgICAgICAgICAgZm9yKHZhciBpID0gdGhhdC5faW5zdGFsbGVkQXBwcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICAgICAgICAgIGlmICghYXBwcy5zb21lKGZ1bmN0aW9uIChlbGVtKSB7IHJldHVybiAoZWxlbS5pZCA9PT0gdGhhdC5faW5zdGFsbGVkQXBwc1tpXS5pZCk7IH0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuX2luc3RhbGxlZEFwcHMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNldFRva2VuKG51bGwpO1xuICAgICAgICB0aGlzLl91c2VySW5mbyA9IHt9O1xuXG4gICAgICAgIC8vIGxvZ291dCBmcm9tIE9BdXRoIHNlc3Npb25cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2FwaS92MS9zZXNzaW9uL2xvZ291dCc7XG4gICAgfTtcblxuICAgIENsaWVudC5wcm90b3R5cGUuZXhjaGFuZ2VDb2RlRm9yVG9rZW4gPSBmdW5jdGlvbiAoYXV0aENvZGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICAgICAgZ3JhbnRfdHlwZTogJ2F1dGhvcml6YXRpb25fY29kZScsXG4gICAgICAgICAgICBjb2RlOiBhdXRoQ29kZSxcbiAgICAgICAgICAgIHJlZGlyZWN0X3VyaTogd2luZG93LmxvY2F0aW9uLm9yaWdpbixcbiAgICAgICAgICAgIGNsaWVudF9pZDogdGhpcy5fY2xpZW50SWQsXG4gICAgICAgICAgICBjbGllbnRfc2VjcmV0OiB0aGlzLl9jbGllbnRTZWNyZXRcbiAgICAgICAgfTtcblxuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3YxL29hdXRoL3Rva2VuP3Jlc3BvbnNlX3R5cGU9dG9rZW4mY2xpZW50X2lkPScgKyB0aGlzLl9jbGllbnRJZCwgZGF0YSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgIT09IDIwMCB8fCB0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHJldHVybiBjYWxsYmFjayhuZXcgQ2xpZW50RXJyb3Ioc3RhdHVzLCBkYXRhKSk7XG5cbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEuYWNjZXNzX3Rva2VuKTtcbiAgICAgICAgfSkuZXJyb3IoZGVmYXVsdEVycm9ySGFuZGxlcihjYWxsYmFjaykpO1xuICAgIH07XG5cbiAgICBjbGllbnQgPSBuZXcgQ2xpZW50KCk7XG4gICAgcmV0dXJuIGNsaWVudDtcbn1dKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ0FwcGxpY2F0aW9uJykuY29udHJvbGxlcignQXBwU3RvcmVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJyR0aW1lb3V0JywgJ0NsaWVudCcsICdBcHBTdG9yZScsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgJHRpbWVvdXQsIENsaWVudCwgQXBwU3RvcmUpIHtcbiAgICBDbGllbnQub25SZWFkeShmdW5jdGlvbiAoKSB7IGlmICghQ2xpZW50LmdldFVzZXJJbmZvKCkuYWRtaW4pICRsb2NhdGlvbi5wYXRoKCcvJyk7IH0pO1xuXG4gICAgJHNjb3BlLnJlYWR5ID0gZmFsc2U7XG4gICAgJHNjb3BlLmFwcHMgPSBbXTtcbiAgICAkc2NvcGUuY29uZmlnID0gQ2xpZW50LmdldENvbmZpZygpO1xuXG4gICAgJHNjb3BlLmFwcGluc3RhbGwgPSB7XG4gICAgICAgIGJ1c3k6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge30sXG4gICAgICAgIGFwcDoge30sXG4gICAgICAgIGxvY2F0aW9uOiAnJyxcbiAgICAgICAgcGFzc3dvcmQ6ICcnLFxuICAgICAgICBwb3J0QmluZGluZ3M6IHt9LFxuICAgICAgICBhY2Nlc3NSZXN0cmljdGlvbjogJydcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNob3dJbnN0YWxsID0gZnVuY3Rpb24gKGFwcCkge1xuICAgICAgICBBcHBTdG9yZS5nZXRNYW5pZmVzdChhcHAuaWQsIGZ1bmN0aW9uIChlcnJvciwgbWFuaWZlc3QpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuXG4gICAgICAgICAgICAvLyBhZGQgbWFuaWZlc3QgdG8gYXBwIG9iamVjdFxuICAgICAgICAgICAgYXBwLm1hbmlmZXN0ID0gbWFuaWZlc3Q7XG5cbiAgICAgICAgICAgICRzY29wZS5hcHBpbnN0YWxsLmFwcCA9IGFwcDtcbiAgICAgICAgICAgICRzY29wZS5hcHBpbnN0YWxsLmxvY2F0aW9uID0gYXBwLmxvY2F0aW9uO1xuICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwucG9ydEJpbmRpbmdzID0gbWFuaWZlc3QudGNwUG9ydHM7XG4gICAgICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5hY2Nlc3NSZXN0cmljdGlvbiA9IGFwcC5hY2Nlc3NSZXN0cmljdGlvbiB8fCAnJztcbiAgICAgICAgICAgIGZvciAodmFyIHBvcnQgaW4gJHNjb3BlLmFwcGluc3RhbGwucG9ydEJpbmRpbmdzKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwucG9ydEJpbmRpbmdzW3BvcnRdLmhvc3RQb3J0ID0gcGFyc2VJbnQocG9ydCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJyNhcHBJbnN0YWxsTW9kYWwnKS5tb2RhbCgnc2hvdycpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmRvSW5zdGFsbCA9IGZ1bmN0aW9uIChmb3JtKSB7XG4gICAgICAgICRzY29wZS5hcHBpbnN0YWxsLmJ1c3kgPSB0cnVlO1xuICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5lcnJvci5uYW1lID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwuZXJyb3IucGFzc3dvcmQgPSBudWxsO1xuXG4gICAgICAgIHZhciBwb3J0QmluZGluZ3MgPSB7IH07XG4gICAgICAgIGZvciAodmFyIGNvbnRhaW5lclBvcnQgaW4gJHNjb3BlLmFwcGluc3RhbGwucG9ydEJpbmRpbmdzKSB7XG4gICAgICAgICAgICBwb3J0QmluZGluZ3NbY29udGFpbmVyUG9ydF0gPSAkc2NvcGUuYXBwaW5zdGFsbC5wb3J0QmluZGluZ3NbY29udGFpbmVyUG9ydF0uaG9zdFBvcnQ7XG4gICAgICAgIH1cblxuICAgICAgICBDbGllbnQuaW5zdGFsbEFwcCgkc2NvcGUuYXBwaW5zdGFsbC5hcHAuaWQsICRzY29wZS5hcHBpbnN0YWxsLmFwcC5tYW5pZmVzdC52ZXJzaW9uLCAkc2NvcGUuYXBwaW5zdGFsbC5wYXNzd29yZCwgJHNjb3BlLmFwcGluc3RhbGwuYXBwLnRpdGxlLCB7IGxvY2F0aW9uOiAkc2NvcGUuYXBwaW5zdGFsbC5sb2NhdGlvbiwgcG9ydEJpbmRpbmdzOiBwb3J0QmluZGluZ3MsIGFjY2Vzc1Jlc3RyaWN0aW9uOiAkc2NvcGUuYXBwaW5zdGFsbC5hY2Nlc3NSZXN0cmljdGlvbiB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDkpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwuZXJyb3IubmFtZSA9ICdBcHBsaWNhdGlvbiBhbHJlYWR5IGV4aXN0cy4nO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZXJyb3Iuc3RhdHVzQ29kZSA9PT0gNDAzKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hcHBpbnN0YWxsLmVycm9yLnBhc3N3b3JkID0gJ1dyb25nIHBhc3N3b3JkIHByb3ZpZGVkLic7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hcHBpbnN0YWxsLnBhc3N3b3JkID0gJyc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwuZXJyb3IubmFtZSA9ICdBcHAgd2l0aCB0aGUgbmFtZSAnICsgJHNjb3BlLmFwcGluc3RhbGwuYXBwLm5hbWUgKyAnIGNhbm5vdCBiZSBpbnN0YWxsZWQuJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5lcnJvciA9IHt9O1xuICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwuYXBwID0ge307XG4gICAgICAgICAgICAkc2NvcGUuYXBwaW5zdGFsbC5sb2NhdGlvbiA9ICcnO1xuICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwucGFzc3dvcmQgPSAnJztcbiAgICAgICAgICAgICRzY29wZS5hcHBpbnN0YWxsLnBvcnRCaW5kaW5ncyA9IHt9O1xuICAgICAgICAgICAgJHNjb3BlLmFwcGluc3RhbGwuYWNjZXNzUmVzdHJpY3Rpb24gPSAnJztcblxuICAgICAgICAgICAgZm9ybS4kc2V0UHJpc3RpbmUoKTtcbiAgICAgICAgICAgIGZvcm0uJHNldFVudG91Y2hlZCgpO1xuXG4gICAgICAgICAgICAkKCcjYXBwSW5zdGFsbE1vZGFsJykubW9kYWwoJ2hpZGUnKTtcblxuICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9hcHBzJyk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiByZWZyZXNoKCkge1xuICAgICAgICAkc2NvcGUucmVhZHkgPSBmYWxzZTtcblxuICAgICAgICBBcHBTdG9yZS5nZXRBcHBzKGZ1bmN0aW9uIChlcnJvciwgYXBwcykge1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICR0aW1lb3V0KHJlZnJlc2gsIDEwMDApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkc2NvcGUuYXBwcyA9IGFwcHM7XG4gICAgICAgICAgICAkc2NvcGUucmVhZHkgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZWZyZXNoKCk7XG59XSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdBcHBsaWNhdGlvbicpLmNvbnRyb2xsZXIoJ01haW5Db250cm9sbGVyJywgWyckc2NvcGUnLCAnJHJvdXRlJywgJyRpbnRlcnZhbCcsICdDbGllbnQnLCBmdW5jdGlvbiAoJHNjb3BlLCAkcm91dGUsICRpbnRlcnZhbCwgQ2xpZW50KSB7XG4gICAgJHNjb3BlLmluaXRpYWxpemVkID0gZmFsc2U7XG4gICAgJHNjb3BlLnVzZXJJbmZvID0gQ2xpZW50LmdldFVzZXJJbmZvKCk7XG4gICAgJHNjb3BlLmNvbmZpZyA9IHt9O1xuXG4gICAgJHNjb3BlLmlzQWN0aXZlID0gZnVuY3Rpb24gKHVybCkge1xuICAgICAgICBpZiAoISRyb3V0ZS5jdXJyZW50KSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiAkcm91dGUuY3VycmVudC4kJHJvdXRlLm9yaWdpbmFsUGF0aC5pbmRleE9mKHVybCkgPT09IDA7XG4gICAgfTtcblxuICAgICRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICRzY29wZS5pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICBDbGllbnQubG9nb3V0KCk7XG4gICAgfTtcblxuICAgICRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNhbGxiYWNrVVJMID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvbG9naW5fY2FsbGJhY2suaHRtbCc7XG4gICAgICAgIHZhciBzY29wZSA9ICdyb290LHByb2ZpbGUsYXBwcyxyb2xlQWRtaW4nO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvYXBpL3YxL29hdXRoL2RpYWxvZy9hdXRob3JpemU/cmVzcG9uc2VfdHlwZT1jb2RlJmNsaWVudF9pZD0nICsgQ2xpZW50Ll9jbGllbnRJZCArICcmcmVkaXJlY3RfdXJpPScgKyBjYWxsYmFja1VSTCArICcmc2NvcGU9JyArIHNjb3BlO1xuICAgIH07XG5cbiAgICAkc2NvcGUuc2V0dXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9lcnJvci5odG1sP2Vycm9yQ29kZT0xJztcbiAgICB9O1xuXG4gICAgJHNjb3BlLmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvZXJyb3IuaHRtbCc7XG4gICAgfTtcblxuICAgICRzY29wZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJyN1cGRhdGVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG5cbiAgICAgICAgJHNjb3BlLmluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAgICAgQ2xpZW50LnVwZGF0ZShmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgY29uc29sZS5lcnJvcihlcnJvcik7XG5cbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy91cGRhdGUuaHRtbCc7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuYmFja3VwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcjYmFja3VwUHJvZ3Jlc3NNb2RhbCcpLm1vZGFsKCdzaG93Jyk7XG5cbiAgICAgICAgJHNjb3BlLmluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAgICAgQ2xpZW50LmJhY2t1cChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgY29uc29sZS5lcnJvcihlcnJvcik7XG5cbiAgICAgICAgICAgIC8vIFRPRE8gdGhpcyBkb2VzIGxvb2sgbGlrZSB3ZSBzaG91bGQgdXNlIHByb2dyZXNzLmpzb24/XG4gICAgICAgICAgICAvLyBub3cgc3RhcnQgcXVlcnlcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrSWZEb25lKCkge1xuICAgICAgICAgICAgICAgIENsaWVudC52ZXJzaW9uKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiB3aW5kb3cuc2V0VGltZW91dChjaGVja0lmRG9uZSwgMTAwMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI2JhY2t1cFByb2dyZXNzTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dChjaGVja0lmRG9uZSwgNTAwMCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBDbGllbnQuaXNTZXJ2ZXJGaXJzdFRpbWUoZnVuY3Rpb24gKGVycm9yLCBpc0ZpcnN0VGltZSkge1xuICAgICAgICBpZiAoZXJyb3IpIHJldHVybiAkc2NvcGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICBpZiAoaXNGaXJzdFRpbWUpIHJldHVybiAkc2NvcGUuc2V0dXAoKTtcblxuICAgICAgICAvLyB3ZSB1c2UgdGhlIGNvbmZpZyByZXF1ZXN0IGFzIGFuIGluZGljYXRvciBpZiB0aGUgdG9rZW4gaXMgc3RpbGwgdmFsaWRcbiAgICAgICAgLy8gVE9ETyB3ZSBzaG91bGQgcHJvYmFibHkgYXR0YWNoIHN1Y2ggYSBoYW5kbGVyIGZvciBlYWNoIHJlcXVlc3QsIGFzIHRoZSB0b2tlbiBjYW4gZ2V0IGludmFsaWRcbiAgICAgICAgLy8gYXQgYW55IHRpbWUhXG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2UudG9rZW4pIHtcbiAgICAgICAgICAgIENsaWVudC5yZWZyZXNoQ29uZmlnKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvciAmJiBlcnJvci5zdGF0dXNDb2RlID09PSA0MDEpIHJldHVybiAkc2NvcGUubG9naW4oKTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiAkc2NvcGUuZXJyb3IoZXJyb3IpO1xuXG4gICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgd2UgYXJlIGFjdHVhbGx5IHVwZGF0ZWluZ1xuICAgICAgICAgICAgICAgIGlmIChDbGllbnQuZ2V0Q29uZmlnKCkucHJvZ3Jlc3MudXBkYXRlKSB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvdXBkYXRlLmh0bWwnO1xuXG4gICAgICAgICAgICAgICAgQ2xpZW50LnVzZXJJbmZvKGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuICRzY29wZS5lcnJvcihlcnJvcik7XG5cbiAgICAgICAgICAgICAgICAgICAgQ2xpZW50LnNldFVzZXJJbmZvKHJlc3VsdCk7XG5cbiAgICAgICAgICAgICAgICAgICAgQ2xpZW50LnJlZnJlc2hJbnN0YWxsZWRBcHBzKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gJHNjb3BlLmVycm9yKGVycm9yKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8ga2ljayBvZmYgaW5zdGFsbGVkIGFwcHMgYW5kIGNvbmZpZyBwb2xsaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVmcmVzaEFwcHNUaW1lciA9ICRpbnRlcnZhbChDbGllbnQucmVmcmVzaEluc3RhbGxlZEFwcHMuYmluZChDbGllbnQpLCAyMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWZyZXNoQ29uZmlnVGltZXIgPSAkaW50ZXJ2YWwoQ2xpZW50LnJlZnJlc2hDb25maWcuYmluZChDbGllbnQpLCA1MDAwKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGludGVydmFsLmNhbmNlbChyZWZyZXNoQXBwc1RpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW50ZXJ2YWwuY2FuY2VsKHJlZnJlc2hDb25maWdUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbm93IG1hcmsgdGhlIENsaWVudCB0byBiZSByZWFkeVxuICAgICAgICAgICAgICAgICAgICAgICAgQ2xpZW50LnNldFJlYWR5KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5jb25maWcgPSBDbGllbnQuZ2V0Q29uZmlnKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkc2NvcGUubG9naW4oKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gd2FpdCB0aWxsIHRoZSB2aWV3IGhhcyBsb2FkZWQgdW50aWwgc2hvd2luZyBhIG1vZGFsIGRpYWxvZ1xuICAgIENsaWVudC5vbkNvbmZpZyhmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWcucHJvZ3Jlc3MudXBkYXRlKSB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvdXBkYXRlLmh0bWwnO1xuICAgICAgICB9XG4gICAgfSk7XG59XSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdBcHBsaWNhdGlvbicpLmNvbnRyb2xsZXIoJ0FjY291bnRDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJ0NsaWVudCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgQ2xpZW50KSB7XG4gICAgJHNjb3BlLnVzZXIgPSBDbGllbnQuZ2V0VXNlckluZm8oKTtcbiAgICAkc2NvcGUuY29uZmlnID0gQ2xpZW50LmdldENvbmZpZygpO1xuXG4gICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlID0ge1xuICAgICAgICBidXN5OiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHt9LFxuICAgICAgICBwYXNzd29yZDogJycsXG4gICAgICAgIG5ld1Bhc3N3b3JkOiAnJyxcbiAgICAgICAgbmV3UGFzc3dvcmRSZXBlYXQ6ICcnXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBhc3N3b3JkQ2hhbmdlUmVzZXQgKGZvcm0pIHtcbiAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLmVycm9yLnBhc3N3b3JkID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLmVycm9yLm5ld1Bhc3N3b3JkID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLmVycm9yLm5ld1Bhc3N3b3JkUmVwZWF0ID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLnBhc3N3b3JkID0gJyc7XG4gICAgICAgICRzY29wZS5wYXNzd29yZGNoYW5nZS5uZXdQYXNzd29yZCA9ICcnO1xuICAgICAgICAkc2NvcGUucGFzc3dvcmRjaGFuZ2UubmV3UGFzc3dvcmRSZXBlYXQgPSAnJztcblxuICAgICAgICBpZiAoZm9ybSkge1xuICAgICAgICAgICAgZm9ybS4kc2V0UHJpc3RpbmUoKTtcbiAgICAgICAgICAgIGZvcm0uJHNldFVudG91Y2hlZCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLmRvQ2hhbmdlUGFzc3dvcmQgPSBmdW5jdGlvbiAoZm9ybSkge1xuICAgICAgICAkc2NvcGUucGFzc3dvcmRjaGFuZ2UuZXJyb3IucGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAkc2NvcGUucGFzc3dvcmRjaGFuZ2UuZXJyb3IubmV3UGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAkc2NvcGUucGFzc3dvcmRjaGFuZ2UuZXJyb3IubmV3UGFzc3dvcmRSZXBlYXQgPSBudWxsO1xuICAgICAgICAkc2NvcGUucGFzc3dvcmRjaGFuZ2UuYnVzeSA9IHRydWU7XG5cbiAgICAgICAgQ2xpZW50LmNoYW5nZVBhc3N3b3JkKCRzY29wZS5wYXNzd29yZGNoYW5nZS5wYXNzd29yZCwgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLm5ld1Bhc3N3b3JkLCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDMpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLmVycm9yLnBhc3N3b3JkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLnBhc3N3b3JkID0gJyc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGNoYW5nZSBwYXNzd29yZC4nLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJHNjb3BlLnBhc3N3b3JkY2hhbmdlLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgIHBhc3N3b3JkQ2hhbmdlUmVzZXQoZm9ybSk7XG5cbiAgICAgICAgICAgICQoJyNwYXNzd29yZENoYW5nZU1vZGFsJykubW9kYWwoJ2hpZGUnKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgICRzY29wZS5zaG93Q2hhbmdlUGFzc3dvcmQgPSBmdW5jdGlvbiAoZm9ybSkge1xuICAgICAgICBwYXNzd29yZENoYW5nZVJlc2V0KGZvcm0pO1xuXG4gICAgICAgICQoJyNwYXNzd29yZENoYW5nZU1vZGFsJykubW9kYWwoJ3Nob3cnKTtcbiAgICB9O1xufV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnQXBwbGljYXRpb24nKS5jb250cm9sbGVyKCdBcHBzQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRsb2NhdGlvbicsICdDbGllbnQnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sIENsaWVudCkge1xuICAgICRzY29wZS5pbnN0YWxsZWRBcHBzID0gQ2xpZW50LmdldEluc3RhbGxlZEFwcHMoKTtcbiAgICAkc2NvcGUuY29uZmlnID0gQ2xpZW50LmdldENvbmZpZygpO1xuXG4gICAgJHNjb3BlLmFwcGNvbmZpZ3VyZSA9IHtcbiAgICAgICAgYnVzeTogZmFsc2UsXG4gICAgICAgIGVycm9yOiB7fSxcbiAgICAgICAgYXBwOiB7fSxcbiAgICAgICAgbG9jYXRpb246ICcnLFxuICAgICAgICBwYXNzd29yZDogJycsXG4gICAgICAgIHBvcnRCaW5kaW5nczoge30sXG4gICAgICAgIGFjY2Vzc1Jlc3RyaWN0aW9uOiAnJ1xuICAgIH07XG5cbiAgICAkc2NvcGUuYXBwdW5pbnN0YWxsID0ge1xuICAgICAgICBlcnJvcjoge30sXG4gICAgICAgIGFwcDoge30sXG4gICAgICAgIHBhc3N3b3JkOiAnJ1xuICAgIH07XG5cbiAgICAkc2NvcGUuc2hvd0NvbmZpZ3VyZSA9IGZ1bmN0aW9uIChhcHApIHtcbiAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5hcHAgPSBhcHA7XG4gICAgICAgICRzY29wZS5hcHBjb25maWd1cmUubG9jYXRpb24gPSBhcHAubG9jYXRpb247XG4gICAgICAgICRzY29wZS5hcHBjb25maWd1cmUucG9ydEJpbmRpbmdzID0gYXBwLm1hbmlmZXN0LnRjcFBvcnRzO1xuICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmFjY2Vzc1Jlc3RyaWN0aW9uID0gYXBwLmFjY2Vzc1Jlc3RyaWN0aW9uO1xuICAgICAgICBmb3IgKHZhciBjb250YWluZXJQb3J0IGluICRzY29wZS5hcHBjb25maWd1cmUucG9ydEJpbmRpbmdzKSB7XG4gICAgICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLnBvcnRCaW5kaW5nc1tjb250YWluZXJQb3J0XS5ob3N0UG9ydCA9IGFwcC5wb3J0QmluZGluZ3NbY29udGFpbmVyUG9ydF07XG4gICAgICAgIH1cblxuICAgICAgICAkKCcjYXBwQ29uZmlndXJlTW9kYWwnKS5tb2RhbCgnc2hvdycpO1xuICAgIH07XG5cbiAgICAkc2NvcGUuZG9Db25maWd1cmUgPSBmdW5jdGlvbiAoZm9ybSkge1xuICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmJ1c3kgPSB0cnVlO1xuICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmVycm9yLm5hbWUgPSBudWxsO1xuICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmVycm9yLnBhc3N3b3JkID0gbnVsbDtcblxuICAgICAgICB2YXIgcG9ydEJpbmRpbmdzID0geyB9O1xuICAgICAgICBmb3IgKHZhciBjb250YWluZXJQb3J0IGluICRzY29wZS5hcHBjb25maWd1cmUucG9ydEJpbmRpbmdzKSB7XG4gICAgICAgICAgICBwb3J0QmluZGluZ3NbY29udGFpbmVyUG9ydF0gPSAkc2NvcGUuYXBwY29uZmlndXJlLnBvcnRCaW5kaW5nc1tjb250YWluZXJQb3J0XS5ob3N0UG9ydDtcbiAgICAgICAgfVxuXG4gICAgICAgIENsaWVudC5jb25maWd1cmVBcHAoJHNjb3BlLmFwcGNvbmZpZ3VyZS5hcHAuaWQsICRzY29wZS5hcHBjb25maWd1cmUucGFzc3dvcmQsIHsgbG9jYXRpb246ICRzY29wZS5hcHBjb25maWd1cmUubG9jYXRpb24sIHBvcnRCaW5kaW5nczogcG9ydEJpbmRpbmdzLCBhY2Nlc3NSZXN0cmljdGlvbjogJHNjb3BlLmFwcGNvbmZpZ3VyZS5hY2Nlc3NSZXN0cmljdGlvbiB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDMpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5lcnJvci5wYXNzd29yZCA9ICdXcm9uZyBwYXNzd29yZCBwcm92aWRlZC4nO1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLnBhc3N3b3JkID0gJyc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5lcnJvci5uYW1lID0gJ0FwcCB3aXRoIHRoZSBuYW1lICcgKyAkc2NvcGUuYXBwY29uZmlndXJlLmFwcC5uYW1lICsgJyBjYW5ub3QgYmUgY29uZmlndXJlZC4nO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICRzY29wZS5hcHBjb25maWd1cmUuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmVycm9yID0ge307XG4gICAgICAgICAgICAkc2NvcGUuYXBwY29uZmlndXJlLmFwcCA9IHt9O1xuICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5sb2NhdGlvbiA9ICcnO1xuICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5wYXNzd29yZCA9ICcnO1xuICAgICAgICAgICAgJHNjb3BlLmFwcGNvbmZpZ3VyZS5wb3J0QmluZGluZ3MgPSB7fTtcbiAgICAgICAgICAgICRzY29wZS5hcHBjb25maWd1cmUuYWNjZXNzUmVzdHJpY3Rpb24gPSAnJztcblxuICAgICAgICAgICAgZm9ybS4kc2V0UHJpc3RpbmUoKTtcbiAgICAgICAgICAgIGZvcm0uJHNldFVudG91Y2hlZCgpO1xuXG4gICAgICAgICAgICAkKCcjYXBwQ29uZmlndXJlTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNob3dVbmluc3RhbGwgPSBmdW5jdGlvbiAoYXBwKSB7XG4gICAgICAgICRzY29wZS5hcHB1bmluc3RhbGwuYXBwID0gYXBwO1xuICAgICAgICAkc2NvcGUuYXBwdW5pbnN0YWxsLmVycm9yLnBhc3N3b3JkID0gbnVsbDtcblxuICAgICAgICAkKCcjYXBwVW5pbnN0YWxsTW9kYWwnKS5tb2RhbCgnc2hvdycpO1xuICAgIH07XG5cbiAgICAkc2NvcGUuZG9Vbmluc3RhbGwgPSBmdW5jdGlvbiAoZm9ybSkge1xuICAgICAgICAkc2NvcGUuYXBwdW5pbnN0YWxsLmVycm9yLnBhc3N3b3JkID0gbnVsbDtcblxuICAgICAgICBDbGllbnQudW5pbnN0YWxsQXBwKCRzY29wZS5hcHB1bmluc3RhbGwuYXBwLmlkLCAkc2NvcGUuYXBwdW5pbnN0YWxsLnBhc3N3b3JkLCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDMpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFwcHVuaW5zdGFsbC5wYXNzd29yZCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYXBwdW5pbnN0YWxsLmVycm9yLnBhc3N3b3JkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkc2NvcGUuYXBwdW5pbnN0YWxsLmFwcCA9IHt9O1xuICAgICAgICAgICAgJHNjb3BlLmFwcHVuaW5zdGFsbC5wYXNzd29yZCA9ICcnO1xuXG4gICAgICAgICAgICBmb3JtLiRzZXRQcmlzdGluZSgpO1xuICAgICAgICAgICAgZm9ybS4kc2V0VW50b3VjaGVkKCk7XG5cbiAgICAgICAgICAgICQoJyNhcHBVbmluc3RhbGxNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG4gICAgfTtcbn1dKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ0FwcGxpY2F0aW9uJykuY29udHJvbGxlcignRG5zQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRsb2NhdGlvbicsICdDbGllbnQnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sIENsaWVudCkge1xuICAgIENsaWVudC5vblJlYWR5KGZ1bmN0aW9uICgpIHsgaWYgKCFDbGllbnQuZ2V0VXNlckluZm8oKS5hZG1pbikgJGxvY2F0aW9uLnBhdGgoJy8nKTsgfSk7XG5cbiAgICAkc2NvcGUucmVhZHkgPSBmYWxzZTtcbiAgICAkc2NvcGUudXNlciA9IENsaWVudC5nZXRVc2VySW5mbygpO1xuICAgICRzY29wZS5jb25maWcgPSBDbGllbnQuZ2V0Q29uZmlnKCk7XG4gICAgJHNjb3BlLm5ha2VkRG9tYWluQXBwID0gbnVsbDtcbiAgICAkc2NvcGUuY2VydGlmaWNhdGVGaWxlID0gbnVsbDtcbiAgICAkc2NvcGUuY2VydGlmaWNhdGVGaWxlTmFtZSA9ICcnO1xuICAgICRzY29wZS5rZXlGaWxlID0gbnVsbDtcbiAgICAkc2NvcGUua2V5RmlsZU5hbWUgPSAnJztcblxuICAgICRzY29wZS5zZXROYWtlZERvbWFpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFwcGlkID0gJHNjb3BlLm5ha2VkRG9tYWluQXBwID8gJHNjb3BlLm5ha2VkRG9tYWluQXBwLmlkIDogJ2FkbWluJztcblxuICAgICAgICBDbGllbnQuc2V0TmFrZWREb21haW4oYXBwaWQsIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gY29uc29sZS5lcnJvcignRXJyb3Igc2V0dGluZyBuYWtlZCBkb21haW4nLCBlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuYmFja3VwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcjYmFja3VwUHJvZ3Jlc3NNb2RhbCcpLm1vZGFsKCdzaG93Jyk7XG4gICAgICAgICRzY29wZS4kcGFyZW50LmluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAgICAgQ2xpZW50LmJhY2t1cChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgY29uc29sZS5lcnJvcihlcnJvcik7XG5cbiAgICAgICAgICAgIC8vIG5vdyBzdGFydCBxdWVyeVxuICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tJZkRvbmUoKSB7XG4gICAgICAgICAgICAgICAgQ2xpZW50LnZlcnNpb24oZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGNoZWNrSWZEb25lLCAxMDAwKTtcblxuICAgICAgICAgICAgICAgICAgICAkKCcjYmFja3VwUHJvZ3Jlc3NNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kcGFyZW50LmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoY2hlY2tJZkRvbmUsIDUwMDApO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJCgnI3VwZGF0ZU1vZGFsJykubW9kYWwoJ2hpZGUnKTtcblxuICAgICAgICAkc2NvcGUuJHBhcmVudC5pbml0aWFsaXplZCA9IGZhbHNlO1xuXG4gICAgICAgIENsaWVudC51cGRhdGUoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvdXBkYXRlLmh0bWwnO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lkQ2VydGlmaWNhdGUnKS5vbmNoYW5nZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRzY29wZS5jZXJ0aWZpY2F0ZUZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07XG4gICAgICAgICAgICAkc2NvcGUuY2VydGlmaWNhdGVGaWxlTmFtZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXS5uYW1lO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lkS2V5Jykub25jaGFuZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkc2NvcGUua2V5RmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTtcbiAgICAgICAgICAgICRzY29wZS5rZXlGaWxlTmFtZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXS5uYW1lO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNldENlcnRpZmljYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnV2lsbCBzZXQgdGhlIGNlcnRpZmljYXRlJyk7XG5cbiAgICAgICAgaWYgKCEkc2NvcGUuY2VydGlmaWNhdGVGaWxlKSByZXR1cm4gY29uc29sZS5sb2coJ0NlcnRpZmljYXRlIG5vdCBzZXQnKTtcbiAgICAgICAgaWYgKCEkc2NvcGUua2V5RmlsZSkgcmV0dXJuIGNvbnNvbGUubG9nKCdLZXkgbm90IHNldCcpO1xuXG4gICAgICAgIENsaWVudC5zZXRDZXJ0aWZpY2F0ZSgkc2NvcGUuY2VydGlmaWNhdGVGaWxlLCAkc2NvcGUua2V5RmlsZSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmxvZyhlcnJvcik7XG5cbiAgICAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQuYmluZCh3aW5kb3cubG9jYXRpb24sIHRydWUpLCAzMDAwKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIENsaWVudC5vbkNvbmZpZyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICRzY29wZS50b2tlbkluVXNlID0gQ2xpZW50Ll90b2tlbjtcblxuICAgICAgICBDbGllbnQuZ2V0QXBwcyhmdW5jdGlvbiAoZXJyb3IsIGFwcHMpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBhcHAgbGlzdCcpO1xuICAgICAgICAgICAgJHNjb3BlLmFwcHMgPSBhcHBzO1xuXG4gICAgICAgICAgICBDbGllbnQuZ2V0TmFrZWREb21haW4oZnVuY3Rpb24gKGVycm9yLCBhcHBpZCkge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuXG4gICAgICAgICAgICAgICAgJHNjb3BlLm5ha2VkRG9tYWluQXBwID0gbnVsbDtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRzY29wZS5hcHBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuYXBwc1tpXS5pZCA9PT0gYXBwaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5uYWtlZERvbWFpbkFwcCA9ICRzY29wZS5hcHBzW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkc2NvcGUucmVhZHkgPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufV0pO1xuIiwiLyogZ2xvYmFsOlJpY2tzaGF3OnRydWUgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnQXBwbGljYXRpb24nKS5jb250cm9sbGVyKCdHcmFwaHNDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJ0NsaWVudCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgQ2xpZW50KSB7XG4gICAgaWYgKCFDbGllbnQuZ2V0VXNlckluZm8oKS5hZG1pbikgJGxvY2F0aW9uLnBhdGgoJy8nKTtcblxuICAgICRzY29wZS5hY3RpdmVUYWIgPSAnZGF5JztcblxuICAgIHZhciBjcHVVc2FnZVRhcmdldCA9ICd0cmFuc2Zvcm1OdWxsKCcgK1xuICAgICdzY2FsZShkaXZpZGVTZXJpZXMoJyArXG4gICAgICAgICdzdW1TZXJpZXMoY29sbGVjdGQubG9jYWxob3N0LmNwdS0wLmNwdS1zeXN0ZW0sY29sbGVjdGQubG9jYWxob3N0LmNwdS0wLmNwdS1uaWNlLGNvbGxlY3RkLmxvY2FsaG9zdC5jcHUtMC5jcHUtdXNlciksJyArXG4gICAgICAgICdzdW1TZXJpZXMoY29sbGVjdGQubG9jYWxob3N0LmNwdS0wLmNwdS1pZGxlLGNvbGxlY3RkLmxvY2FsaG9zdC5jcHUtMC5jcHUtc3lzdGVtLGNvbGxlY3RkLmxvY2FsaG9zdC5jcHUtMC5jcHUtbmljZSxjb2xsZWN0ZC5sb2NhbGhvc3QuY3B1LTAuY3B1LXVzZXIsY29sbGVjdGQubG9jYWxob3N0LmNwdS0wLmNwdS13YWl0KSksIDEwMCksIDApJztcblxuICAgIHZhciBuZXR3b3JrVXNhZ2VUeFRhcmdldCA9ICd0cmFuc2Zvcm1OdWxsKGNvbGxlY3RkLmxvY2FsaG9zdC5pbnRlcmZhY2UtZXRoMC5pZl9vY3RldHMudHgsIDApJztcbiAgICB2YXIgbmV0d29ya1VzYWdlUnhUYXJnZXQgPSAndHJhbnNmb3JtTnVsbChjb2xsZWN0ZC5sb2NhbGhvc3QuaW50ZXJmYWNlLWV0aDAuaWZfb2N0ZXRzLnJ4LCAwKSc7XG5cbiAgICB2YXIgZGlza1VzYWdlQXBwc1VzZWRUYXJnZXQgPSAndHJhbnNmb3JtTnVsbChjb2xsZWN0ZC5sb2NhbGhvc3QuZGYtbG9vcDAuZGZfY29tcGxleC11c2VkLCAwKSc7XG4gICAgdmFyIGRpc2tVc2FnZURhdGFVc2VkVGFyZ2V0ID0gJ3RyYW5zZm9ybU51bGwoY29sbGVjdGQubG9jYWxob3N0LmRmLWxvb3AxLmRmX2NvbXBsZXgtdXNlZCwgMCknO1xuXG4gICAgZnVuY3Rpb24gcmVuZGVyQ3B1KGFjdGl2ZVRhYiwgY3B1RGF0YSkge1xuICAgICAgICB2YXIgdHJhbnNmb3JtZWRDcHUgPSBbIF07XG5cbiAgICAgICAgaWYgKGNwdURhdGEgJiYgY3B1RGF0YS5kYXRhcG9pbnRzKSB0cmFuc2Zvcm1lZENwdSA9IGNwdURhdGEuZGF0YXBvaW50cy5tYXAoZnVuY3Rpb24gKHBvaW50KSB7IHJldHVybiB7IHk6IHBvaW50WzBdLCB4OiBwb2ludFsxXSB9IH0pO1xuXG4gICAgICAgIHZhciBjcHVHcmFwaCA9IG5ldyBSaWNrc2hhdy5HcmFwaCh7XG4gICAgICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJyArIGFjdGl2ZVRhYiArICdDcHVDaGFydCcpLFxuICAgICAgICAgICAgcmVuZGVyZXI6ICdhcmVhJyxcbiAgICAgICAgICAgIHdpZHRoOiA1ODAsXG4gICAgICAgICAgICBoZWlnaHQ6IDI1MCxcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIG1heDogMTAwLFxuICAgICAgICAgICAgc2VyaWVzOiBbe1xuICAgICAgICAgICAgICAgIGNvbG9yOiAnc3RlZWxibHVlJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZENwdSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnY3B1J1xuICAgICAgICAgICAgfV1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGNwdVhBeGlzID0gbmV3IFJpY2tzaGF3LkdyYXBoLkF4aXMuVGltZSh7IGdyYXBoOiBjcHVHcmFwaCB9KTtcbiAgICAgICAgdmFyIGNwdVlBeGlzID0gbmV3IFJpY2tzaGF3LkdyYXBoLkF4aXMuWSh7XG4gICAgICAgICAgICBncmFwaDogY3B1R3JhcGgsXG4gICAgICAgICAgICBvcmllbnRhdGlvbjogJ2xlZnQnLFxuICAgICAgICAgICAgdGlja0Zvcm1hdDogUmlja3NoYXcuRml4dHVyZXMuTnVtYmVyLmZvcm1hdEtNQlQsXG4gICAgICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhY3RpdmVUYWIgKyAnQ3B1WUF4aXMnKSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGNwdUhvdmVyRGV0YWlsID0gbmV3IFJpY2tzaGF3LkdyYXBoLkhvdmVyRGV0YWlsKHtcbiAgICAgICAgICAgIGdyYXBoOiBjcHVHcmFwaCxcbiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24oc2VyaWVzLCB4LCB5KSB7XG4gICAgICAgICAgICAgICAgdmFyIHN3YXRjaCA9ICc8c3BhbiBjbGFzcz1cImRldGFpbF9zd2F0Y2hcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICcgKyBzZXJpZXMuY29sb3IgKyAnXCI+PC9zcGFuPic7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBzd2F0Y2ggKyBzZXJpZXMubmFtZSArIFwiOiBcIiArIG5ldyBOdW1iZXIoeSkudG9GaXhlZCgyKSArICclPGJyPic7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNwdUdyYXBoLnJlbmRlcigpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlck5ldHdvcmsoYWN0aXZlVGFiLCB0eERhdGEsIHJ4RGF0YSkge1xuICAgICAgICB2YXIgdHJhbnNmb3JtZWRUeCA9IFsgXSwgdHJhbnNmb3JtZWRSeCA9IFsgXTtcblxuICAgICAgICBpZiAodHhEYXRhICYmIHR4RGF0YS5kYXRhcG9pbnRzKSB0cmFuc2Zvcm1lZFR4ID0gdHhEYXRhLmRhdGFwb2ludHMubWFwKGZ1bmN0aW9uIChwb2ludCkgeyByZXR1cm4geyB5OiBwb2ludFswXSwgeDogcG9pbnRbMV0gfSB9KTtcbiAgICAgICAgaWYgKHJ4RGF0YSAmJiByeERhdGEuZGF0YXBvaW50cykgdHJhbnNmb3JtZWRSeCA9IHJ4RGF0YS5kYXRhcG9pbnRzLm1hcChmdW5jdGlvbiAocG9pbnQpIHsgcmV0dXJuIHsgeTogcG9pbnRbMF0sIHg6IHBvaW50WzFdIH0gfSk7XG5cbiAgICAgICAgdmFyIG5ldHdvcmtHcmFwaCA9IG5ldyBSaWNrc2hhdy5HcmFwaCh7XG4gICAgICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJyArIGFjdGl2ZVRhYiArICdOZXR3b3JrQ2hhcnQnKSxcbiAgICAgICAgICAgIHJlbmRlcmVyOiAnYXJlYScsXG4gICAgICAgICAgICB3aWR0aDogNTgwLFxuICAgICAgICAgICAgaGVpZ2h0OiAyNTAsXG4gICAgICAgICAgICBzZXJpZXM6IFsge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAnc3RlZWxibHVlJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZFR4LFxuICAgICAgICAgICAgICAgIG5hbWU6ICd0eCdcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJ2dyZWVuJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZFJ4LFxuICAgICAgICAgICAgICAgIG5hbWU6ICdyeCdcbiAgICAgICAgICAgIH0gXVxuICAgICAgICB9ICk7XG5cbiAgICAgICAgdmFyIG5ldHdvcmtYQXhpcyA9IG5ldyBSaWNrc2hhdy5HcmFwaC5BeGlzLlRpbWUoeyBncmFwaDogbmV0d29ya0dyYXBoIH0pO1xuICAgICAgICB2YXIgbmV0d29ya1lBeGlzID0gbmV3IFJpY2tzaGF3LkdyYXBoLkF4aXMuWSh7XG4gICAgICAgICAgICBncmFwaDogbmV0d29ya0dyYXBoLFxuICAgICAgICAgICAgb3JpZW50YXRpb246ICdsZWZ0JyxcbiAgICAgICAgICAgIHRpY2tGb3JtYXQ6IFJpY2tzaGF3LkZpeHR1cmVzLk51bWJlci5mb3JtYXRLTUJULFxuICAgICAgICAgICAgZWxlbWVudDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYWN0aXZlVGFiICsgJ05ldHdvcmtZQXhpcycpLFxuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgbmV0d29ya0hvdmVyRGV0YWlsID0gbmV3IFJpY2tzaGF3LkdyYXBoLkhvdmVyRGV0YWlsKHtcbiAgICAgICAgICAgIGdyYXBoOiBuZXR3b3JrR3JhcGgsXG4gICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uKHNlcmllcywgeCwgeSkge1xuICAgICAgICAgICAgICAgIHZhciBzd2F0Y2ggPSAnPHNwYW4gY2xhc3M9XCJkZXRhaWxfc3dhdGNoXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAnICsgc2VyaWVzLmNvbG9yICsgJ1wiPjwvc3Bhbj4nO1xuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gc3dhdGNoICsgc2VyaWVzLm5hbWUgKyBcIjogXCIgKyBuZXcgTnVtYmVyKHkvMTAyNCkudG9GaXhlZCgyKSArICdLQjxicj4nO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBuZXR3b3JrR3JhcGgucmVuZGVyKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyRGlzayhhY3RpdmVUYWIsIGFwcHNVc2VkRGF0YSwgZGF0YVVzZWREYXRhKSB7XG4gICAgICAgIHZhciB0cmFuc2Zvcm1lZEFwcHNVc2VkID0gWyBdLCB0cmFuc2Zvcm1lZERhdGFVc2VkID0gWyBdO1xuXG4gICAgICAgIGlmIChhcHBzVXNlZERhdGEgJiYgYXBwc1VzZWREYXRhLmRhdGFwb2ludHMpIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybWVkQXBwc1VzZWQgPSBhcHBzVXNlZERhdGEuZGF0YXBvaW50cy5tYXAoZnVuY3Rpb24gKHBvaW50KSB7IHJldHVybiB7IHk6IHBvaW50WzBdLCB4OiBwb2ludFsxXSB9OyB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkYXRhVXNlZERhdGEgJiYgZGF0YVVzZWREYXRhLmRhdGFwb2ludHMpIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybWVkRGF0YVVzZWQgPSBkYXRhVXNlZERhdGEuZGF0YXBvaW50cy5tYXAoZnVuY3Rpb24gKHBvaW50KSB7IHJldHVybiB7IHk6IHBvaW50WzBdLCB4OiBwb2ludFsxXSB9OyB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkaXNrR3JhcGggPSBuZXcgUmlja3NoYXcuR3JhcGgoe1xuICAgICAgICAgICAgZWxlbWVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycgKyBhY3RpdmVUYWIgKyAnRGlza0NoYXJ0JyksXG4gICAgICAgICAgICByZW5kZXJlcjogJ2FyZWEnLFxuICAgICAgICAgICAgd2lkdGg6IDU4MCxcbiAgICAgICAgICAgIGhlaWdodDogMjUwLFxuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgbWF4OiAzMCAqIDEwMjQgKiAxMDI0ICogMTAyNCwgLy8gMzBnYlxuICAgICAgICAgICAgc2VyaWVzOiBbe1xuICAgICAgICAgICAgICAgIGNvbG9yOiAnc3RlZWxibHVlJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZEFwcHNVc2VkLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdhcHBzJ1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRyYW5zZm9ybWVkRGF0YVVzZWQsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2RhdGEnXG4gICAgICAgICAgICB9XVxuICAgICAgICB9ICk7XG5cbiAgICAgICAgdmFyIGRpc2tYQXhpcyA9IG5ldyBSaWNrc2hhdy5HcmFwaC5BeGlzLlRpbWUoeyBncmFwaDogZGlza0dyYXBoIH0pO1xuICAgICAgICB2YXIgZGlza1lBeGlzID0gbmV3IFJpY2tzaGF3LkdyYXBoLkF4aXMuWSh7XG4gICAgICAgICAgICBncmFwaDogZGlza0dyYXBoLFxuICAgICAgICAgICAgb3JpZW50YXRpb246ICdsZWZ0JyxcbiAgICAgICAgICAgIHRpY2tGb3JtYXQ6IFJpY2tzaGF3LkZpeHR1cmVzLk51bWJlci5mb3JtYXRLTUJULFxuICAgICAgICAgICAgZWxlbWVudDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYWN0aXZlVGFiICsgJ0Rpc2tZQXhpcycpLFxuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgZGlza0hvdmVyRGV0YWlsID0gbmV3IFJpY2tzaGF3LkdyYXBoLkhvdmVyRGV0YWlsKHtcbiAgICAgICAgICAgIGdyYXBoOiBkaXNrR3JhcGgsXG4gICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uKHNlcmllcywgeCwgeSkge1xuICAgICAgICAgICAgICAgIHZhciBzd2F0Y2ggPSAnPHNwYW4gY2xhc3M9XCJkZXRhaWxfc3dhdGNoXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAnICsgc2VyaWVzLmNvbG9yICsgJ1wiPjwvc3Bhbj4nO1xuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gc3dhdGNoICsgc2VyaWVzLm5hbWUgKyBcIjogXCIgKyBuZXcgTnVtYmVyKHkvKDEwMjQgKiAxMDI0ICogMTAyNCkpLnRvRml4ZWQoMikgKyAnR0I8YnI+JztcbiAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGRpc2tMZWdlbmQgPSBuZXcgUmlja3NoYXcuR3JhcGguTGVnZW5kKHtcbiAgICAgICAgICAgIGdyYXBoOiBkaXNrR3JhcGgsXG4gICAgICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhY3RpdmVUYWIgKyAnRGlza0xlZ2VuZCcpXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGRpc2tHcmFwaC5yZW5kZXIoKTtcbiAgICB9XG5cbiAgICAkc2NvcGUudXBkYXRlR3JhcGhzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYWN0aXZlVGFiID0gJHNjb3BlLmFjdGl2ZVRhYjtcbiAgICAgICB2YXIgZnJvbSA9ICctMjRob3Vycyc7XG4gICAgICAgIHN3aXRjaCAoYWN0aXZlVGFiKSB7XG4gICAgICAgIGNhc2UgJ2RheSc6IGZyb20gPSAnLTI0aG91cnMnOyBicmVhaztcbiAgICAgICAgY2FzZSAnbW9udGgnOiBmcm9tID0gJy0xbW9udGgnOyBicmVhaztcbiAgICAgICAgY2FzZSAneWVhcic6IGZyb20gPSAnLTF5ZWFyJzsgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6IGNvbnNvbGUubG9nKCdpbnRlcm5hbCBlcnJyb3InKTtcbiAgICAgICAgfVxuXG4gICAgICAgIENsaWVudC5ncmFwaHMoWyBjcHVVc2FnZVRhcmdldCwgbmV0d29ya1VzYWdlVHhUYXJnZXQsIG5ldHdvcmtVc2FnZVJ4VGFyZ2V0LCBkaXNrVXNhZ2VBcHBzVXNlZFRhcmdldCwgZGlza1VzYWdlRGF0YVVzZWRUYXJnZXQgXSwgZnJvbSwgZnVuY3Rpb24gKGVycm9yLCBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmxvZyhlcnJvcik7XG5cbiAgICAgICAgICAgIHJlbmRlckNwdShhY3RpdmVUYWIsIGRhdGFbMF0pO1xuXG4gICAgICAgICAgICByZW5kZXJOZXR3b3JrKGFjdGl2ZVRhYiwgZGF0YVsxXSwgZGF0YVsyXSk7XG5cbiAgICAgICAgICAgIHJlbmRlckRpc2soYWN0aXZlVGFiLCBkYXRhWzNdLCBkYXRhWzRdKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIENsaWVudC5vblJlYWR5KCRzY29wZS51cGRhdGVHcmFwaHMpO1xufV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnQXBwbGljYXRpb24nKS5jb250cm9sbGVyKCdTZWN1cml0eUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdDbGllbnQnLCBmdW5jdGlvbiAoJHNjb3BlLCBDbGllbnQpIHtcbiAgICAkc2NvcGUuYWN0aXZlQ2xpZW50cyA9IFtdO1xuICAgICRzY29wZS50b2tlbkluVXNlID0gbnVsbDtcbiAgICAkc2NvcGUucmVhZHkgPSBmYWxzZTtcblxuICAgICRzY29wZS5yZW1vdmVBY2Nlc3NUb2tlbnMgPSBmdW5jdGlvbiAoY2xpZW50LCBldmVudCkge1xuICAgICAgICBjbGllbnQuX2J1c3kgPSB0cnVlO1xuXG4gICAgICAgIENsaWVudC5kZWxUb2tlbnNCeUNsaWVudElkKGNsaWVudC5pZCwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICQoZXZlbnQudGFyZ2V0KS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgICAgIGNsaWVudC5fYnVzeSA9IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgQ2xpZW50Lm9uUmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAkc2NvcGUudG9rZW5JblVzZSA9IENsaWVudC5fdG9rZW47XG5cbiAgICAgICAgQ2xpZW50LmdldE9BdXRoQ2xpZW50cyhmdW5jdGlvbiAoZXJyb3IsIGFjdGl2ZUNsaWVudHMpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuXG4gICAgICAgICAgICAkc2NvcGUuYWN0aXZlQ2xpZW50cyA9IGFjdGl2ZUNsaWVudHM7XG4gICAgICAgICAgICAkc2NvcGUucmVhZHkgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1dKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ0FwcGxpY2F0aW9uJykuY29udHJvbGxlcignVXNlcnNDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJ0NsaWVudCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgQ2xpZW50KSB7XG4gICAgQ2xpZW50Lm9uUmVhZHkoZnVuY3Rpb24gKCkgeyBpZiAoIUNsaWVudC5nZXRVc2VySW5mbygpLmFkbWluKSAkbG9jYXRpb24ucGF0aCgnLycpOyB9KTtcblxuICAgICRzY29wZS5yZWFkeSA9IGZhbHNlO1xuICAgICRzY29wZS51c2VycyA9IFtdO1xuICAgICRzY29wZS51c2VySW5mbyA9IENsaWVudC5nZXRVc2VySW5mbygpO1xuXG4gICAgJHNjb3BlLnVzZXJyZW1vdmUgPSB7XG4gICAgICAgIGJ1c3k6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge30sXG4gICAgICAgIHVzZXJJbmZvOiB7fSxcbiAgICAgICAgdXNlcm5hbWU6ICcnLFxuICAgICAgICBwYXNzd29yZDogJydcbiAgICB9O1xuXG4gICAgJHNjb3BlLnVzZXJhZGQgPSB7XG4gICAgICAgIGJ1c3k6IGZhbHNlLFxuICAgICAgICBhbHJlYWR5VGFrZW46IGZhbHNlLFxuICAgICAgICBlcnJvcjoge30sXG4gICAgICAgIHVzZXJuYW1lOiAnJyxcbiAgICAgICAgZW1haWw6ICcnXG4gICAgfTtcblxuICAgICRzY29wZS5pc01lID0gZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgcmV0dXJuIHVzZXIudXNlcm5hbWUgPT09IENsaWVudC5nZXRVc2VySW5mbygpLnVzZXJuYW1lO1xuICAgIH07XG5cbiAgICAkc2NvcGUuaXNBZG1pbiA9IGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgIHJldHVybiAhIXVzZXIuYWRtaW47XG4gICAgfTtcblxuICAgICRzY29wZS50b2dnbGVBZG1pbiA9IGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgIENsaWVudC5zZXRBZG1pbih1c2VyLnVzZXJuYW1lLCAhdXNlci5hZG1pbiwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmVycm9yKGVycm9yKTtcblxuICAgICAgICAgICAgdXNlci5hZG1pbiA9ICF1c2VyLmFkbWluO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmRvQWRkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkc2NvcGUudXNlcmFkZC5hbHJlYWR5VGFrZW4gPSAnJztcbiAgICAgICAgJHNjb3BlLnVzZXJhZGQuZXJyb3IudXNlcm5hbWUgPSBudWxsO1xuICAgICAgICAkc2NvcGUudXNlcmFkZC5lcnJvci5lbWFpbCA9IG51bGw7XG5cbiAgICAgICAgQ2xpZW50LmNyZWF0ZVVzZXIoJHNjb3BlLnVzZXJhZGQudXNlcm5hbWUsICRzY29wZS51c2VyYWRkLmVtYWlsLCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvciAmJiBlcnJvci5zdGF0dXNDb2RlID09PSA0MDkpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUudXNlcmFkZC5hbHJlYWR5VGFrZW4gPSAkc2NvcGUudXNlcm5hbWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ1VzZXJuYW1lIGFscmVhZHkgdGFrZW4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlcnJvciAmJiBlcnJvci5zdGF0dXNDb2RlID09PSA0MDApIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmRleE9mKCdlbWFpbCcpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUudXNlcmFkZC5lcnJvci5lbWFpbCA9ICdJbnZhbGlkIEVtYWlsJztcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnVzZXJhZGQuZW1haWwgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmRleE9mKCd1c2VybmFtZScpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUudXNlcmFkZC5lcnJvci51c2VybmFtZSA9ICdJbnZhbGlkIFVzZXJuYW1lJztcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnVzZXJhZGQudXNlcm5hbWUgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXJyb3IpIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgdXNlci4nLCBlcnJvcik7XG5cbiAgICAgICAgICAgIHJlZnJlc2goKTtcbiAgICAgICAgICAgICQoJyN1c2VyQWRkTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNob3dVc2VyUmVtb3ZlID0gZnVuY3Rpb24gKHVzZXJJbmZvKSB7XG4gICAgICAgICRzY29wZS51c2VycmVtb3ZlLmVycm9yLnVzZXJuYW1lID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLnVzZXJyZW1vdmUuZXJyb3IucGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAkc2NvcGUudXNlcnJlbW92ZS51c2VySW5mbyA9IHVzZXJJbmZvO1xuICAgICAgICAkKCcjdXNlclJlbW92ZU1vZGFsJykubW9kYWwoJ3Nob3cnKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmRvVXNlclJlbW92ZSA9IGZ1bmN0aW9uIChmb3JtKSB7XG4gICAgICAgICRzY29wZS51c2VycmVtb3ZlLmVycm9yLnVzZXJuYW1lID0gbnVsbDtcbiAgICAgICAgJHNjb3BlLnVzZXJyZW1vdmUuZXJyb3IucGFzc3dvcmQgPSBudWxsO1xuXG4gICAgICAgIGlmICgkc2NvcGUudXNlcnJlbW92ZS51c2VybmFtZSAhPT0gJHNjb3BlLnVzZXJyZW1vdmUudXNlckluZm8udXNlcm5hbWUpIHtcbiAgICAgICAgICAgICRzY29wZS51c2VycmVtb3ZlLmVycm9yLnVzZXJuYW1lID0gJ1VzZXJuYW1lIGRvZXMgbm90IG1hdGNoJztcbiAgICAgICAgICAgICRzY29wZS51c2VycmVtb3ZlLnVzZXJuYW1lID0gJyc7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBDbGllbnQucmVtb3ZlVXNlcigkc2NvcGUudXNlcnJlbW92ZS51c2VybmFtZSwgJHNjb3BlLnVzZXJyZW1vdmUucGFzc3dvcmQsIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yICYmIGVycm9yLnN0YXR1c0NvZGUgPT09IDQwMykge1xuICAgICAgICAgICAgICAgICRzY29wZS51c2VycmVtb3ZlLmVycm9yLnBhc3N3b3JkID0gJ0luY29ycmVjdCBwYXNzd29yZCc7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnVzZXJyZW1vdmUucGFzc3dvcmQgPSAnJztcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gZGVsZXRlIHVzZXIuJywgZXJyb3IpO1xuXG4gICAgICAgICAgICAkc2NvcGUudXNlcnJlbW92ZS51c2VySW5mbyA9IHt9O1xuICAgICAgICAgICAgJHNjb3BlLnVzZXJyZW1vdmUudXNlcm5hbWUgPSAnJztcbiAgICAgICAgICAgICRzY29wZS51c2VycmVtb3ZlLnBhc3N3b3JkID0gJyc7XG5cbiAgICAgICAgICAgIGZvcm0uJHNldFByaXN0aW5lKCk7XG4gICAgICAgICAgICBmb3JtLiRzZXRVbnRvdWNoZWQoKTtcblxuICAgICAgICAgICAgJCgnI3VzZXJSZW1vdmVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG5cbiAgICAgICAgICAgIHJlZnJlc2goKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHJlZnJlc2goKSB7XG4gICAgICAgIENsaWVudC5saXN0VXNlcnMoZnVuY3Rpb24gKGVycm9yLCByZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBnZXQgdXNlciBsaXN0aW5nLicsIGVycm9yKTtcblxuICAgICAgICAgICAgJHNjb3BlLnVzZXJzID0gcmVzdWx0LnVzZXJzO1xuICAgICAgICAgICAgJHNjb3BlLnJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVmcmVzaCgpO1xufV0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9