"use strict";var app=angular.module("Application",["ngRoute","ngAnimate","angular-md5"]);app.directive("ngEnter",function(){return function(e,t,n){t.bind("keydown keypress",function(t){13===t.which&&(e.$apply(function(){e.$eval(n.ngEnter)}),t.preventDefault())})}}),app.config(["$routeProvider",function(e){e.when("/",{redirectTo:"/step1"}).when("/step1",{controller:"StepController",templateUrl:"views/setup/step1.html"}).when("/step2",{controller:"StepController",templateUrl:"views/setup/step2.html"}).when("/step3",{controller:"StepController",templateUrl:"views/setup/step3.html"}).when("/step4",{controller:"StepController",templateUrl:"views/setup/step4.html"}).when("/step5",{controller:"FinishController",templateUrl:"views/setup/step5.html"}).otherwise({redirectTo:"/"})}]),app.service("Wizard",[function(){function e(){this.username="",this.email="",this.password=""}var t=null;return t=new e}]),app.controller("StepController",["$scope","$location","Wizard",function(e,t,n){e.wizard=n,e.ok=function(e,n){n||t.path(e)},e.$on("$viewContentLoaded",function(){$("input[autofocus]").focus()})}]),app.controller("FinishController",["$scope","$location","$timeout","Wizard","Client",function(e,t,n,o,r){function i(){r.createAdmin(e.wizard.username,e.wizard.password,e.wizard.email,e.setupToken,function(e){return e?(console.error("Internal error",e),void(window.location.href="/error.html")):void(window.location.href="/")})}e.wizard=o,n(i,1e3)}]),app.controller("SetupController",["$scope","$location","Client","Wizard",function(e,t,n,o){e.initialized=!1;var r=window.location.search.slice(1).split("&").map(function(e){return e.split("=")}).reduce(function(e,t){return e[t[0]]=t[1],e},{});e.setupToken=r.setupToken,n.isServerFirstTime(function(n,r){return n?void(window.location.href="/error.html"):r?(o.username||t.path("/step1"),void(e.initialized=!0)):void(window.location.href="/")})}]),angular.module("Application").service("Client",["$http","md5",function(e,t){function n(e,t){Error.call(this),this.name=this.constructor.name,this.statusCode=e,this.message="string"==typeof t?t:JSON.stringify(t)}function o(e){return function(t,o){return 401===o?i.logout():void e(new n(o,t))}}function r(){this._ready=!1,this._configListener=[],this._readyListener=[],this._userInfo={username:null,email:null,admin:!1},this._token=null,this._clientId="cid-webadmin",this._clientSecret="unused",this._config={apiServerOrigin:null,webServerOrigin:null,fqdn:null,ip:null,revision:null,update:null,isDev:!1,progress:{}},this._installedApps=[],this.setToken(localStorage.token)}var i=null;return r.prototype.setReady=function(){this._ready||(this._ready=!0,this._readyListener.forEach(function(e){e()}))},r.prototype.onReady=function(e){this._ready&&e(),this._readyListener.push(e)},r.prototype.onConfig=function(e){this._configListener.push(e),e(this._config)},r.prototype.setUserInfo=function(e){this._userInfo.username=e.username,this._userInfo.email=e.email,this._userInfo.admin=!!e.admin,this._userInfo.gravatar="https://www.gravatar.com/avatar/"+t.createHash(e.email.toLowerCase())+".jpg?s=24&d=mm",this._userInfo.gravatarHuge="https://www.gravatar.com/avatar/"+t.createHash(e.email.toLowerCase())+".jpg?s=128&d=mm"},r.prototype.setConfig=function(e){this._config.apiServerOrigin=e.apiServerOrigin,this._config.webServerOrigin=e.webServerOrigin,this._config.version=e.version,this._config.fqdn=e.fqdn,this._config.ip=e.ip,this._config.revision=e.revision,this._config.update=e.update,this._config.isDev=e.isDev,this._config.progress=e.progress;var t=this;this._configListener.forEach(function(e){e(t._config)})},r.prototype.getInstalledApps=function(){return this._installedApps},r.prototype.getUserInfo=function(){return this._userInfo},r.prototype.getConfig=function(){return this._config},r.prototype.setToken=function(t){e.defaults.headers.common.Authorization="Bearer "+t,t?localStorage.token=t:localStorage.removeItem("token"),this._token=t},r.prototype.config=function(t){e.get("/api/v1/cloudron/config").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.userInfo=function(t){e.get("/api/v1/profile").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.installApp=function(t,r,i,s,p,u){var c=this,a={appStoreId:t,version:r,password:i,location:p.location,portBindings:p.portBindings,accessRestriction:p.accessRestriction};e.post("/api/v1/apps/install",a).success(function(e,t){return 202!==t||"object"!=typeof e?u(new n(t,e)):(e.manifest={title:s},c._installedApps.push(e),void u(null,e.id))}).error(o(u))},r.prototype.uninstallApp=function(t,r,i){var s={password:r};e.post("/api/v1/apps/"+t+"/uninstall",s).success(function(e,t){return 202!==t?i(new n(t,e)):void i(null)}).error(o(i))},r.prototype.configureApp=function(t,r,i,s){var p={appId:t,password:r,location:i.location,portBindings:i.portBindings,accessRestriction:i.accessRestriction};e.post("/api/v1/apps/"+t+"/configure",p).success(function(e,t){return 202!==t?s(new n(t,e)):void s(null)}).error(o(s))},r.prototype.updateApp=function(t,r,i,s){e.post("/api/v1/apps/"+t+"/update",{version:r,password:i}).success(function(e,t){return 202!==t?s(new n(t,e)):void s(null)}).error(o(s))},r.prototype.startApp=function(t,r){var i={};e.post("/api/v1/apps/"+t+"/start",i).success(function(e,t){return 202!==t?r(new n(t,e)):void r(null)}).error(o(r))},r.prototype.stopApp=function(t,r){var i={};e.post("/api/v1/apps/"+t+"/stop",i).success(function(e,t){return 202!==t?r(new n(t,e)):void r(null)}).error(o(r))},r.prototype.version=function(t){e.get("/api/v1/cloudron/status").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.isServerFirstTime=function(t){e.get("/api/v1/cloudron/status").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,!e.activated)}).error(o(t))},r.prototype.getNakedDomain=function(t){e.get("/api/v1/settings/naked_domain").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e.appid)}).error(o(t))},r.prototype.setNakedDomain=function(t,r){e.post("/api/v1/settings/naked_domain",{appid:t}).success(function(e,t){return 204!==t?r(new n(t)):void r(null)}).error(o(r))},r.prototype.getApps=function(t){e.get("/api/v1/apps").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e.apps)}).error(o(t))},r.prototype.getApp=function(e,t){var n=null;return this._installedApps.some(function(t){return t.id===e?(n=t,!0):!1}),n?t(null,n):t(new Error("App not found"))},r.prototype.getAppLogStream=function(e){var t=new EventSource("/api/v1/apps/"+e+"/logstream");return t},r.prototype.getAppLogUrl=function(e){return"/api/v1/apps/"+e+"/logs?access_token="+this._token},r.prototype.setAdmin=function(t,r,i){var s={username:t,admin:r};e.post("/api/v1/users/"+t+"/admin",s).success(function(e,t){return 204!==t?i(new n(t,e)):void i(null)}).error(o(i))},r.prototype.createAdmin=function(t,r,i,s,p){var u={username:t,password:r,email:i},c=this;e.post("/api/v1/cloudron/activate?setupToken="+s,u).success(function(e,o){return 201!==o||"object"!=typeof e?p(new n(o,e)):(c.setToken(e.token),c.setUserInfo({username:t,email:i,admin:!0}),void p(null,e.activated))}).error(o(p))},r.prototype.listUsers=function(t){e.get("/api/v1/users").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.getOAuthClients=function(t){e.get("/api/v1/oauth/clients").success(function(e,o){return 200!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e.clients)}).error(o(t))},r.prototype.delTokensByClientId=function(t,r){e["delete"]("/api/v1/oauth/clients/"+t+"/tokens").success(function(e,t){return 204!==t?r(new n(t,e)):void r(null)}).error(o(r))},r.prototype.update=function(t,r){e.post("/api/v1/cloudron/update",{password:t}).success(function(e,t){return 202!==t||"object"!=typeof e?r(new n(t,e)):void r(null,e)}).error(o(r))},r.prototype.reboot=function(t){e.get("/api/v1/cloudron/reboot").success(function(e,o){return 202!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.backup=function(t){e.post("/api/v1/cloudron/backups").success(function(e,o){return 202!==o||"object"!=typeof e?t(new n(o,e)):void t(null,e)}).error(o(t))},r.prototype.setCertificate=function(t,r,i){console.log("will set certificate");var s=new FormData;s.append("certificate",t),s.append("key",r),e.post("/api/v1/cloudron/certificate",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(e,t){return 202!==t?i(new n(t,e)):void i(null)}).error(o(i))},r.prototype.graphs=function(t,r,i){var s={params:{target:t,format:"json",from:r}};e.get("/api/v1/cloudron/graphs",s).success(function(e,t){return 200!==t||"object"!=typeof e?i(new n(t,e)):void i(null,e)}).error(o(i))},r.prototype.createUser=function(t,r,i){var s={username:t,email:r};e.post("/api/v1/users",s).success(function(e,t){return 201!==t||"object"!=typeof e?i(new n(t,e)):void i(null,e)}).error(o(i))},r.prototype.removeUser=function(t,r,i){var s={username:t,password:r};e({method:"DELETE",url:"/api/v1/users/"+t,data:s,headers:{"Content-Type":"application/json"}}).success(function(e,t){return 204!==t?i(new n(t,e)):void i(null)}).error(o(i))},r.prototype.changePassword=function(t,r,i){var s={password:t,newPassword:r};e.post("/api/v1/users/"+this._userInfo.username+"/password",s).success(function(e,t){return 204!==t?i(new n(t,e)):void i(null,e)}).error(o(i))},r.prototype.refreshConfig=function(e){var t=this;e="function"==typeof e?e:function(){},this.config(function(n,o){return n?e(n):(t.setConfig(o),void e(null))})},r.prototype.refreshInstalledApps=function(e){var t=this;e="function"==typeof e?e:function(){},this.getApps(function(n,o){if(n)return e(n);o.forEach(function(e){for(var n=!1,o=0;o<t._installedApps.length;++o)if(t._installedApps[o].id===e.id){n=o;break}n!==!1?angular.copy(e,t._installedApps[n]):t._installedApps.push(e)});for(var r=t._installedApps.length-1;r>=0;--r)o.some(function(e){return e.id===t._installedApps[r].id})||t._installedApps.splice(r,1);e(null)})},r.prototype.logout=function(){this.setToken(null),this._userInfo={},window.location.href="/api/v1/session/logout"},r.prototype.exchangeCodeForToken=function(t,r){var i={grant_type:"authorization_code",code:t,redirect_uri:window.location.origin,client_id:this._clientId,client_secret:this._clientSecret};e.post("/api/v1/oauth/token?response_type=token&client_id="+this._clientId,i).success(function(e,t){return 200!==t||"object"!=typeof e?r(new n(t,e)):void r(null,e.access_token)}).error(o(r))},i=new r}]);
//# sourceMappingURL=data:application/json;base64,