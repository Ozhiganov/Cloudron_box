"use strict";var app=angular.module("Application",["ngRoute","ngAnimate","angular-md5"]);app.config(["$routeProvider",function(e){e.when("/",{redirectTo:"/apps"}).when("/users",{controller:"UsersController",templateUrl:"views/users.html"}).when("/appstore",{controller:"AppStoreController",templateUrl:"views/appstore.html"}).when("/apps",{controller:"AppsController",templateUrl:"views/apps.html"}).when("/dns",{controller:"DnsController",templateUrl:"views/dns.html"}).when("/account",{controller:"AccountController",templateUrl:"views/account.html"}).when("/graphs",{controller:"GraphsController",templateUrl:"views/graphs.html"}).otherwise({redirectTo:"/"})}]),app.filter("installationActive",function(){return function(e){return"error"===e?!1:"installed"===e?!1:!0}}),app.filter("installationStateLabel",function(){return function(e){return"error"===e?"Error":"subdomain_error"===e?"Error":"installed"===e?"Running":"downloading_image"===e?"Downloading":"pending_install"===e?"Installing":"pending_restore"===e?"Starting":"pending_configure"===e?"Configuring":"pending_uninstall"===e?"Uninstalling":"creating_container"===e?"Container":"downloading_manifest"===e?"Manifest":"creating_volume"===e?"Volume":"registering_subdomain"===e?"Subdomain":"allocated_oauth_credentials"===e?"OAuth":e}}),app.filter("accessRestrictionLabel",function(){return function(e){return""===e?"public":"roleUser"===e?"private":"roleAdmin"===e?"private (Admins only)":e}}),app.directive("laterName",function(){return{restrict:"A",require:["?ngModel","^?form"],link:function(e,n,o,r){o.$set("name",o.laterName);var t=r[0],a=r[1];t&&a&&(t.$name=o.name,a.$addControl(t),e.$on("$destroy",function(){a.$removeControl(t)}))}}}),angular.module("Application").service("Client",["$http","md5",function(e,n){function o(e,n){Error.call(this),this.name=this.constructor.name,this.statusCode=e,this.message="string"==typeof n?n:JSON.stringify(n)}function r(e){return function(n,r){return 401===r?a.logout():void e(new o(r,n))}}function t(){this._ready=!1,this._configListener=[],this._readyListener=[],this._userInfo={username:null,email:null,admin:!1},this._token=null,this._clientId="cid-webadmin",this._clientSecret="unused",this._config={apiServerOrigin:null,webServerOrigin:null,fqdn:null,ip:null,revision:null,update:{box:null,apps:null},isDev:!1,progress:{},isCustomDomain:!1},this._installedApps=[],this.setToken(localStorage.token)}var a=null;return t.prototype.setReady=function(){this._ready||(this._ready=!0,this._readyListener.forEach(function(e){e()}))},t.prototype.onReady=function(e){this._ready&&e(),this._readyListener.push(e)},t.prototype.onConfig=function(e){this._configListener.push(e),e(this._config)},t.prototype.setUserInfo=function(e){this._userInfo.username=e.username,this._userInfo.email=e.email,this._userInfo.admin=!!e.admin,this._userInfo.gravatar="https://www.gravatar.com/avatar/"+n.createHash(e.email.toLowerCase())+".jpg?s=24&d=mm",this._userInfo.gravatarHuge="https://www.gravatar.com/avatar/"+n.createHash(e.email.toLowerCase())+".jpg?s=128&d=mm"},t.prototype.setConfig=function(e){this._config.apiServerOrigin=e.apiServerOrigin,this._config.webServerOrigin=e.webServerOrigin,this._config.version=e.version,this._config.fqdn=e.fqdn,this._config.ip=e.ip,this._config.revision=e.revision,this._config.update=e.update,this._config.isDev=e.isDev,this._config.progress=e.progress,this._config.isCustomDomain=e.isCustomDomain;var n=this;this._configListener.forEach(function(e){e(n._config)})},t.prototype.getInstalledApps=function(){return this._installedApps},t.prototype.getUserInfo=function(){return this._userInfo},t.prototype.getConfig=function(){return this._config},t.prototype.setToken=function(n){e.defaults.headers.common.Authorization="Bearer "+n,n?localStorage.token=n:localStorage.removeItem("token"),this._token=n},t.prototype.config=function(n){e.get("/api/v1/cloudron/config").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.userInfo=function(n){e.get("/api/v1/profile").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.installApp=function(n,t,a,i,s,p){var l=this,u={appStoreId:n,manifest:t,password:a,location:s.location,portBindings:s.portBindings,accessRestriction:s.accessRestriction};e.post("/api/v1/apps/install",u).success(function(e,n){return 202!==n||"object"!=typeof e?p(new o(n,e)):(e.manifest={title:i},l._installedApps.push(e),void p(null,e.id))}).error(r(p))},t.prototype.uninstallApp=function(n,t,a){var i={password:t};e.post("/api/v1/apps/"+n+"/uninstall",i).success(function(e,n){return 202!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.configureApp=function(n,t,a,i){var s={appId:n,password:t,location:a.location,portBindings:a.portBindings,accessRestriction:a.accessRestriction};e.post("/api/v1/apps/"+n+"/configure",s).success(function(e,n){return 202!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.updateApp=function(n,t,a,i){e.post("/api/v1/apps/"+n+"/update",{manifest:t,password:a}).success(function(e,n){return 202!==n?i(new o(n,e)):void i(null)}).error(r(i))},t.prototype.startApp=function(n,t){var a={};e.post("/api/v1/apps/"+n+"/start",a).success(function(e,n){return 202!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.stopApp=function(n,t){var a={};e.post("/api/v1/apps/"+n+"/stop",a).success(function(e,n){return 202!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.version=function(n){e.get("/api/v1/cloudron/status").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.isServerFirstTime=function(n){e.get("/api/v1/cloudron/status").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,!e.activated)}).error(r(n))},t.prototype.getNakedDomain=function(n){e.get("/api/v1/settings/naked_domain").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.appid)}).error(r(n))},t.prototype.setNakedDomain=function(n,t){e.post("/api/v1/settings/naked_domain",{appid:n}).success(function(e,n){return 204!==n?t(new o(n)):void t(null)}).error(r(t))},t.prototype.getApps=function(n){e.get("/api/v1/apps").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.apps)}).error(r(n))},t.prototype.getApp=function(e,n){var o=null;return this._installedApps.some(function(n){return n.id===e?(o=n,!0):!1}),o?n(null,o):n(new Error("App not found"))},t.prototype.getAppLogStream=function(e){var n=new EventSource("/api/v1/apps/"+e+"/logstream");return n},t.prototype.getAppLogUrl=function(e){return"/api/v1/apps/"+e+"/logs?access_token="+this._token},t.prototype.setAdmin=function(n,t,a){var i={username:n,admin:t};e.post("/api/v1/users/"+n+"/admin",i).success(function(e,n){return 204!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.createAdmin=function(n,t,a,i,s){var p={username:n,password:t,email:a},l=this;e.post("/api/v1/cloudron/activate?setupToken="+i,p).success(function(e,r){return 201!==r||"object"!=typeof e?s(new o(r,e)):(l.setToken(e.token),l.setUserInfo({username:n,email:a,admin:!0}),void s(null,e.activated))}).error(r(s))},t.prototype.listUsers=function(n){e.get("/api/v1/users").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.getOAuthClients=function(n){e.get("/api/v1/oauth/clients").success(function(e,r){return 200!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e.clients)}).error(r(n))},t.prototype.delTokensByClientId=function(n,t){e["delete"]("/api/v1/oauth/clients/"+n+"/tokens").success(function(e,n){return 204!==n?t(new o(n,e)):void t(null)}).error(r(t))},t.prototype.update=function(n,t){e.post("/api/v1/cloudron/update",{password:n}).success(function(e,n){return 202!==n||"object"!=typeof e?t(new o(n,e)):void t(null,e)}).error(r(t))},t.prototype.reboot=function(n){e.get("/api/v1/cloudron/reboot").success(function(e,r){return 202!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.backup=function(n){e.post("/api/v1/cloudron/backups").success(function(e,r){return 202!==r||"object"!=typeof e?n(new o(r,e)):void n(null,e)}).error(r(n))},t.prototype.setCertificate=function(n,t,a){console.log("will set certificate");var i=new FormData;i.append("certificate",n),i.append("key",t),e.post("/api/v1/cloudron/certificate",i,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(e,n){return 202!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.graphs=function(n,t,a){var i={params:{target:n,format:"json",from:t}};e.get("/api/v1/cloudron/graphs",i).success(function(e,n){return 200!==n||"object"!=typeof e?a(new o(n,e)):void a(null,e)}).error(r(a))},t.prototype.createUser=function(n,t,a){var i={username:n,email:t};e.post("/api/v1/users",i).success(function(e,n){return 201!==n||"object"!=typeof e?a(new o(n,e)):void a(null,e)}).error(r(a))},t.prototype.removeUser=function(n,t,a){var i={username:n,password:t};e({method:"DELETE",url:"/api/v1/users/"+n,data:i,headers:{"Content-Type":"application/json"}}).success(function(e,n){return 204!==n?a(new o(n,e)):void a(null)}).error(r(a))},t.prototype.changePassword=function(n,t,a){var i={password:n,newPassword:t};e.post("/api/v1/users/"+this._userInfo.username+"/password",i).success(function(e,n){return 204!==n?a(new o(n,e)):void a(null,e)}).error(r(a))},t.prototype.changeEmail=function(n,t,a){var i={password:t,email:n};e.put("/api/v1/users/"+this._userInfo.username,i).success(function(e,n){return 204!==n?a(new o(n,e)):void a(null,e)}).error(r(a))},t.prototype.refreshConfig=function(e){var n=this;e="function"==typeof e?e:function(){},this.config(function(o,r){return o?e(o):(n.setConfig(r),void e(null))})},t.prototype.refreshInstalledApps=function(e){var n=this;e="function"==typeof e?e:function(){},this.getApps(function(o,r){if(o)return e(o);r.forEach(function(e){for(var o=!1,r=0;r<n._installedApps.length;++r)if(n._installedApps[r].id===e.id){o=r;break}o!==!1?angular.copy(e,n._installedApps[o]):n._installedApps.push(e)});for(var t=n._installedApps.length-1;t>=0;--t)r.some(function(e){return e.id===n._installedApps[t].id})||n._installedApps.splice(t,1);e(null)})},t.prototype.logout=function(){this.setToken(null),this._userInfo={},window.location.href="/api/v1/session/logout"},t.prototype.exchangeCodeForToken=function(n,t){var a={grant_type:"authorization_code",code:n,redirect_uri:window.location.origin,client_id:this._clientId,client_secret:this._clientSecret};e.post("/api/v1/oauth/token?response_type=token&client_id="+this._clientId,a).success(function(e,n){return 200!==n||"object"!=typeof e?t(new o(n,e)):void t(null,e.access_token)}).error(r(t))},a=new t}]),angular.module("Application").service("AppStore",["$http","Client",function(e,n){function o(e,n){Error.call(this),this.name=this.constructor.name,this.statusCode=e,this.message="string"==typeof n?n:JSON.stringify(n)}function r(){this._appsCache={}}return r.prototype.getApps=function(r){if(null===n.getConfig().apiServerOrigin)return r(new o(420,"Enhance Your Calm"));var t=this;e.get(n.getConfig().apiServerOrigin+"/api/v1/appstore/apps",{params:{boxVersion:n.getConfig().version}}).success(function(e,n){return 200!==n?r(new o(n,e)):(e.apps.forEach(function(e){t._appsCache[e.id]||(t._appsCache[e.id]=e)}),r(null,t._appsCache))}).error(function(e,n){return r(new o(n,e))})},r.prototype.getAppById=function(e,n){if(e in this._appsCache)return n(null,this._appsCache[e]);var r=this;this.getApps(function(t){return t?n(t):e in r._appsCache?n(null,r._appsCache[e]):void n(new o(404,"Not found"))})},r.prototype.getManifest=function(r,t){if(null===n.getConfig().apiServerOrigin)return t(new o(420,"Enhance Your Calm"));var a=n.getConfig().apiServerOrigin+"/api/v1/appstore/apps/"+r+"/manifest";console.log("Getting the manifest of ",r,a),e.get(a).success(function(e,n){return 200!==n?t(new o(n,e)):t(null,e)}).error(function(e,n){return t(new o(n,e))})},new r}]),angular.module("Application").controller("MainController",["$scope","$route","$interval","Client",function(e,n,o,r){e.initialized=!1,e.userInfo=r.getUserInfo(),e.config={},e.update={error:{},password:""},e.isActive=function(e){return n.current?0===n.current.$$route.originalPath.indexOf(e):!1},e.logout=function(n){n.stopPropagation(),e.initialized=!1,r.logout()},e.login=function(){var e=window.location.origin+"/login_callback.html",n="root,profile,apps,roleAdmin";window.location.href="/api/v1/oauth/dialog/authorize?response_type=code&client_id="+r._clientId+"&redirect_uri="+e+"&scope="+n},e.setup=function(){window.location.href="/error.html?errorCode=1"},e.error=function(e){console.error(e),window.location.href="/error.html"},e.showUpdateModal=function(n){e.update.error.password=null,e.update.password="",n.$setPristine(),n.$setUntouched(),$("#updateModal").modal("show")},e.doUpdate=function(){e.update.error.password=null,r.update(e.update.password,function(n){return n?void(403===n.statusCode?(e.update.error.password="Incorrect password",e.update.password=""):console.error("Unable to update.",n)):void(window.location.href="/update.html")})},e.backup=function(){$("#backupProgressModal").modal("show"),e.initialized=!1,r.backup(function(n){function o(){r.version(function(n){return n?window.setTimeout(o,1e3):($("#backupProgressModal").modal("hide"),void(e.initialized=!0))})}n&&console.error(n),window.setTimeout(o,5e3)})},r.isServerFirstTime(function(n,t){return n?e.error(n):t?e.setup():void(localStorage.token?r.refreshConfig(function(n){return n&&401===n.statusCode?e.login():n?e.error(n):(r.getConfig().progress.update&&(window.location.href="/update.html"),void r.userInfo(function(n,t){return n?e.error(n):(r.setUserInfo(t),void r.refreshInstalledApps(function(n){if(n)return e.error(n);var t=o(r.refreshInstalledApps.bind(r),2e3),a=o(r.refreshConfig.bind(r),5e3);e.$on("$destroy",function(){o.cancel(t),o.cancel(a)}),r.setReady(),e.config=r.getConfig(),e.initialized=!0}))}))}):e.login())}),r.onConfig(function(e){e.progress.update&&(window.location.href="/update.html")}),["updateModal"].forEach(function(e){$("#"+e).on("shown.bs.modal",function(){$(this).find("[autofocus]:first").focus()})})}]),angular.module("Application").controller("AccountController",["$scope","$location","Client",function(e,n,o){function r(n){e.passwordchange.error.password=null,e.passwordchange.error.newPassword=null,e.passwordchange.error.newPasswordRepeat=null,e.passwordchange.password="",e.passwordchange.newPassword="",e.passwordchange.newPasswordRepeat="",n&&(n.$setPristine(),n.$setUntouched())}function t(n){e.emailchange.error.email=null,e.emailchange.error.password=null,e.emailchange.email="",e.emailchange.password="",n&&(n.$setPristine(),n.$setUntouched())}e.user=o.getUserInfo(),e.config=o.getConfig(),e.activeClients=[],e.tokenInUse=null,e.passwordchange={busy:!1,error:{},password:"",newPassword:"",newPasswordRepeat:""},e.emailchange={busy:!1,error:{},email:"",password:""},e.doChangePassword=function(n){e.passwordchange.error.password=null,e.passwordchange.error.newPassword=null,e.passwordchange.error.newPasswordRepeat=null,e.passwordchange.busy=!0,o.changePassword(e.passwordchange.password,e.passwordchange.newPassword,function(o){return o?void(403===o.statusCode?(e.passwordchange.error.password=!0,e.passwordchange.password=""):console.error("Unable to change password.",o)):(e.passwordchange.busy=!1,r(n),void $("#passwordChangeModal").modal("hide"))})},e.doChangeEmail=function(n){e.emailchange.error.email=null,e.emailchange.error.password=null,e.emailchange.busy=!0,o.changeEmail(e.emailchange.email,e.emailchange.password,function(o){return o?void(403===o.statusCode?(e.emailchange.error.password=!0,e.emailchange.password=""):console.error("Unable to change email.",o)):(e.emailchange.busy=!1,t(n),void $("#emailChangeModal").modal("hide"))})},e.showChangePassword=function(e){r(e),$("#passwordChangeModal").modal("show")},e.showChangeEmail=function(e){t(e),$("#emailChangeModal").modal("show")},e.removeAccessTokens=function(e,n){o.delTokensByClientId(e.id,function(e){return e?console.error(e):void $(n.target).addClass("disabled")})},o.onReady(function(){e.tokenInUse=o._token,o.getOAuthClients(function(n,o){return n?console.error(n):void(e.activeClients=o)})}),["passwordChangeModal","emailChangeModal"].forEach(function(e){$("#"+e).on("shown.bs.modal",function(){$(this).find("[autofocus]:first").focus()})})}]),angular.module("Application").controller("AppsController",["$scope","$location","Client","AppStore",function(e,n,o,r){e.installedApps=o.getInstalledApps(),e.config=o.getConfig(),e.appconfigure={busy:!1,error:{},app:{},location:"",password:"",portBindings:{},accessRestriction:""},e.appuninstall={error:{},app:{},password:""},e.appupdate={error:{},app:{},password:""},e.reset=function(){e.appconfigure.error={},e.appconfigure.app={},e.appconfigure.location="",e.appconfigure.password="",e.appconfigure.portBindings={},e.appconfigure.accessRestriction="",e.config_form.$setPristine(),e.config_form.$setUntouched(),e.appuninstall.app={},e.appuninstall.error={},e.appuninstall.password="",e.uninstall_form.$setPristine(),e.uninstall_form.$setUntouched()},e.showConfigure=function(n){e.reset(),e.appconfigure.app=n,e.appconfigure.location=n.location,e.appconfigure.portBindings=n.manifest.tcpPorts,e.appconfigure.accessRestriction=n.accessRestriction;for(var o in e.appconfigure.portBindings)e.appconfigure.portBindings[o].hostPort=parseInt(e.appconfigure.app.portBindings[o]);$("#appConfigureModal").modal("show")},e.doConfigure=function(){e.appconfigure.busy=!0,e.appconfigure.error.name=null,e.appconfigure.error.password=null;var n={};for(var r in e.appconfigure.portBindings)n[r]=e.appconfigure.portBindings[r].hostPort;o.configureApp(e.appconfigure.app.id,e.appconfigure.password,{location:e.appconfigure.location,portBindings:n,accessRestriction:e.appconfigure.accessRestriction},function(n){return n?(403===n.statusCode?(e.appconfigure.error.password="Wrong password provided.",e.appconfigure.password=""):e.appconfigure.error.name="App with the name "+e.appconfigure.app.name+" cannot be configured.",void(e.appconfigure.busy=!1)):(e.appconfigure.busy=!1,$("#appConfigureModal").modal("hide"),void e.reset())})},e.showUninstall=function(n){e.reset(),e.appuninstall.app=n,$("#appUninstallModal").modal("show")},e.doUninstall=function(){e.appuninstall.error.password=null,o.uninstallApp(e.appuninstall.app.id,e.appuninstall.password,function(n){return n?void(403===n.statusCode?(e.appuninstall.password="",e.appuninstall.error.password=!0):console.error(n)):($("#appUninstallModal").modal("hide"),void e.reset())})},e.showUpdate=function(n){e.appupdate.app=n,e.appupdate.error.password=null,r.getManifest(n.appStoreId,function(n,o){return n?console.error(n):(e.appupdate.app.manifest=o,void $("#appUpdateModal").modal("show"))})},e.doUpdate=function(n){e.appupdate.error.password=null,o.updateApp(e.appupdate.app.id,e.appupdate.app.manifest,e.appupdate.password,function(o){return o?void(403===o.statusCode?(e.appupdate.password="",e.appupdate.error.password=!0):console.error(o)):(e.appupdate.app={},e.appupdate.password="",n.$setPristine(),n.$setUntouched(),void $("#appUpdateModal").modal("hide"))})},e.cancel=function(){window.history.back()},["appConfigureModal","appUninstallModal","appUpdateModal"].forEach(function(e){$("#"+e).on("shown.bs.modal",function(){$(this).find("[autofocus]:first").focus()})})}]),angular.module("Application").controller("AppStoreController",["$scope","$location","$timeout","Client","AppStore",function(e,n,o,r,t){function a(){e.ready=!1,t.getApps(function(n,r){return n?(console.error(n),o(a,1e3)):(e.apps=r,void(e.ready=!0))})}r.onReady(function(){r.getUserInfo().admin||n.path("/")}),e.ready=!1,e.apps=[],e.config=r.getConfig(),e.appinstall={busy:!1,error:{},app:{},location:"",password:"",portBindings:{},accessRestriction:""},e.reset=function(){e.appinstall.app={},e.appinstall.location="",e.appinstall.password="",e.appinstall.portBindings={},e.appinstall.accessRestriction="",e.appinstall.error={},e.install_form.$setPristine(),e.install_form.$setUntouched()},e.showInstall=function(n){e.reset(),t.getManifest(n.id,function(o,r){if(o)return console.error(o);n.manifest=r,e.appinstall.app=n,e.appinstall.location=n.location,e.appinstall.portBindings=r.tcpPorts,e.appinstall.accessRestriction=n.accessRestriction||"";for(var t in e.appinstall.portBindings)e.appinstall.portBindings[t].hostPort=parseInt(t);$("#appInstallModal").modal("show")})},e.doInstall=function(){e.appinstall.busy=!0,e.appinstall.error.name=null,e.appinstall.error.password=null;var o={};for(var t in e.appinstall.portBindings)o[t]=e.appinstall.portBindings[t].hostPort;r.installApp(e.appinstall.app.id,e.appinstall.app.manifest,e.appinstall.password,e.appinstall.app.title,{location:e.appinstall.location,portBindings:o,accessRestriction:e.appinstall.accessRestriction},function(o){return o?(409===o.statusCode?e.appinstall.error.name="Application already exists.":403===o.statusCode?(e.appinstall.error.password="Wrong password provided.",e.appinstall.password=""):e.appinstall.error.name="App with the name "+e.appinstall.app.name+" cannot be installed.",void(e.appinstall.busy=!1)):(e.appinstall.busy=!1,$("#appInstallModal").modal("hide"),e.reset(),void n.path("/apps"))})},a(),["appInstallModal"].forEach(function(e){$("#"+e).on("shown.bs.modal",function(){$(this).find("[autofocus]:first").focus()})})}]),angular.module("Application").controller("DnsController",["$scope","$location","Client",function(e,n,o){o.onReady(function(){o.getUserInfo().admin||n.path("/")}),e.ready=!1,e.user=o.getUserInfo(),e.config=o.getConfig(),e.nakedDomainApp=null,e.certificateFile=null,e.certificateFileName="",e.keyFile=null,e.keyFileName="",e.setNakedDomain=function(){var n=e.nakedDomainApp?e.nakedDomainApp.id:"admin";o.setNakedDomain(n,function(e){return e?console.error("Error setting naked domain",e):void 0})},e.backup=function(){$("#backupProgressModal").modal("show"),e.$parent.initialized=!1,o.backup(function(n){function r(){o.version(function(n){return n?window.setTimeout(r,1e3):($("#backupProgressModal").modal("hide"),void(e.$parent.initialized=!0))})}n&&console.error(n),window.setTimeout(r,5e3)})},e.update=function(){$("#updateModal").modal("hide"),e.$parent.initialized=!1,o.update(function(e){e&&console.error(e),window.location.href="/update.html"})},document.getElementById("idCertificate").onchange=function(n){e.$apply(function(){e.certificateFile=n.target.files[0],e.certificateFileName=n.target.files[0].name})},document.getElementById("idKey").onchange=function(n){e.$apply(function(){e.keyFile=n.target.files[0],e.keyFileName=n.target.files[0].name})},e.setCertificate=function(){return console.log("Will set the certificate"),e.certificateFile?e.keyFile?void o.setCertificate(e.certificateFile,e.keyFile,function(e){return e?console.log(e):void window.setTimeout(window.location.reload.bind(window.location,!0),3e3)}):console.log("Key not set"):console.log("Certificate not set")},o.onConfig(function(){e.tokenInUse=o._token,o.getApps(function(n,r){n&&console.error("Error loading app list"),e.apps=r,o.getNakedDomain(function(n,o){if(n)return console.error(n);e.nakedDomainApp=null;for(var r=0;r<e.apps.length;r++)if(e.apps[r].id===o){e.nakedDomainApp=e.apps[r];break}e.ready=!0})})})}]),angular.module("Application").controller("GraphsController",["$scope","$location","Client",function(e,n,o){function r(e,n){var o=[];n&&n.datapoints&&(o=n.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var r=new Rickshaw.Graph({element:document.querySelector("#"+e+"CpuChart"),renderer:"area",width:580,height:250,min:0,max:100,series:[{color:"steelblue",data:o,name:"cpu"}]});new Rickshaw.Graph.Axis.Time({graph:r}),new Rickshaw.Graph.Axis.Y({graph:r,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"CpuYAxis")}),new Rickshaw.Graph.HoverDetail({graph:r,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o).toFixed(2)+"%<br>";return t}})}r.render()}function t(e,n,o){var r=[],t=[];n&&n.datapoints&&(r=n.datapoints.map(function(e){return{y:e[0],x:e[1]}})),o&&o.datapoints&&(t=o.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var a=new Rickshaw.Graph({element:document.querySelector("#"+e+"NetworkChart"),renderer:"area",width:580,height:250,series:[{color:"steelblue",data:r,name:"tx"},{color:"green",data:t,name:"rx"}]});new Rickshaw.Graph.Axis.Time({graph:a}),new Rickshaw.Graph.Axis.Y({graph:a,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"NetworkYAxis")}),new Rickshaw.Graph.HoverDetail({graph:a,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o/1024).toFixed(2)+"KB<br>";return t}})}a.render()}function a(e,n,o){var r=[],t=[];n&&n.datapoints&&(r=n.datapoints.map(function(e){return{y:e[0],x:e[1]}})),o&&o.datapoints&&(t=o.datapoints.map(function(e){return{y:e[0],x:e[1]}}));{var a=new Rickshaw.Graph({element:document.querySelector("#"+e+"DiskChart"),renderer:"area",width:580,height:250,min:0,max:32212254720,series:[{color:"steelblue",data:r,name:"apps"},{color:"green",data:t,name:"data"}]});new Rickshaw.Graph.Axis.Time({graph:a}),new Rickshaw.Graph.Axis.Y({graph:a,orientation:"left",tickFormat:Rickshaw.Fixtures.Number.formatKMBT,element:document.getElementById(e+"DiskYAxis")}),new Rickshaw.Graph.HoverDetail({graph:a,formatter:function(e,n,o){var r='<span class="detail_swatch" style="background-color: '+e.color+'"></span>',t=r+e.name+": "+new Number(o/1073741824).toFixed(2)+"GB<br>";return t}}),new Rickshaw.Graph.Legend({graph:a,element:document.getElementById(e+"DiskLegend")})}a.render()}o.getUserInfo().admin||n.path("/"),e.activeTab="day";var i="transformNull(scale(divideSeries(sumSeries(collectd.localhost.cpu-0.cpu-system,collectd.localhost.cpu-0.cpu-nice,collectd.localhost.cpu-0.cpu-user),sumSeries(collectd.localhost.cpu-0.cpu-idle,collectd.localhost.cpu-0.cpu-system,collectd.localhost.cpu-0.cpu-nice,collectd.localhost.cpu-0.cpu-user,collectd.localhost.cpu-0.cpu-wait)), 100), 0)",s="transformNull(collectd.localhost.interface-eth0.if_octets.tx, 0)",p="transformNull(collectd.localhost.interface-eth0.if_octets.rx, 0)",l="transformNull(collectd.localhost.df-loop0.df_complex-used, 0)",u="transformNull(collectd.localhost.df-loop1.df_complex-used, 0)";e.updateGraphs=function(){var n=e.activeTab,c="-24hours";switch(n){case"day":c="-24hours";break;case"month":c="-1month";break;case"year":c="-1year";break;default:console.log("internal errror")}o.graphs([i,s,p,l,u],c,function(e,o){return e?console.log(e):(r(n,o[0]),t(n,o[1],o[2]),void a(n,o[3],o[4]))})},o.onReady(e.updateGraphs)}]),angular.module("Application").controller("UsersController",["$scope","$location","Client",function(e,n,o){function r(){o.listUsers(function(n,o){return n?console.error("Unable to get user listing.",n):(e.users=o.users,void(e.ready=!0))})}o.onReady(function(){o.getUserInfo().admin||n.path("/")}),e.ready=!1,e.users=[],e.userInfo=o.getUserInfo(),e.userremove={busy:!1,error:{},userInfo:{},username:"",password:""},e.useradd={busy:!1,alreadyTaken:!1,error:{},username:"",email:""},e.isMe=function(e){return e.username===o.getUserInfo().username},e.isAdmin=function(e){return!!e.admin},e.toggleAdmin=function(e){o.setAdmin(e.username,!e.admin,function(n){return n?console.error(n):void(e.admin=!e.admin)})},e.doAdd=function(){e.useradd.alreadyTaken="",e.useradd.error.username=null,e.useradd.error.email=null,o.createUser(e.useradd.username,e.useradd.email,function(n){if(n&&409===n.statusCode)return e.useradd.alreadyTaken=e.username,console.error("Username already taken");if(n&&400===n.statusCode){if(-1!==n.message.indexOf("email"))return e.useradd.error.email="Invalid Email",void(e.useradd.email="");if(-1!==n.message.indexOf("username"))return e.useradd.error.username="Invalid Username",void(e.useradd.username="")}else n&&console.error("Unable to create user.",n),r(),$("#userAddModal").modal("hide")})},e.showUserRemove=function(n){e.userremove.error.username=null,e.userremove.error.password=null,e.userremove.userInfo=n,$("#userRemoveModal").modal("show")},e.doUserRemove=function(n){return e.userremove.error.username=null,e.userremove.error.password=null,e.userremove.username!==e.userremove.userInfo.username?(e.userremove.error.username="Username does not match",void(e.userremove.username="")):void o.removeUser(e.userremove.username,e.userremove.password,function(o){return o&&403===o.statusCode?(e.userremove.error.password="Incorrect password",void(e.userremove.password="")):o?console.error("Unable to delete user.",o):(e.userremove.userInfo={},e.userremove.username="",e.userremove.password="",n.$setPristine(),n.$setUntouched(),$("#userRemoveModal").modal("hide"),void r())})},r(),["userAddModal","userRemoveModal"].forEach(function(e){$("#"+e).on("shown.bs.modal",function(){$(this).find("[autofocus]:first").focus()})})}]);
//# sourceMappingURL=data:application/json;base64,